{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { combineAxisTicks, combineCategoricalDomain, combineGraphicalItemTicks, combineScaleFunction, selectAxisSettings, selectDuplicateDomain, selectRealScaleType } from './axisSelectors';\nimport { selectAngleAxis, selectAngleAxisRangeWithReversed, selectRadiusAxis, selectRadiusAxisRangeWithReversed } from './polarAxisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectPolarAppliedValues, selectPolarAxisDomainIncludingNiceTicks, selectPolarNiceTicks } from './polarSelectors';\nimport { pickAxisType } from './pickAxisType';\nexport var selectPolarAxis = (state, axisType, axisId) => {\n  switch (axisType) {\n    case 'angleAxis':\n      {\n        return selectAngleAxis(state, axisId);\n      }\n\n    case 'radiusAxis':\n      {\n        return selectRadiusAxis(state, axisId);\n      }\n\n    default:\n      {\n        throw new Error(\"Unexpected axis type: \".concat(axisType));\n      }\n  }\n};\n\nvar selectPolarAxisRangeWithReversed = (state, axisType, axisId) => {\n  switch (axisType) {\n    case 'angleAxis':\n      {\n        return selectAngleAxisRangeWithReversed(state, axisId);\n      }\n\n    case 'radiusAxis':\n      {\n        return selectRadiusAxisRangeWithReversed(state, axisId);\n      }\n\n    default:\n      {\n        throw new Error(\"Unexpected axis type: \".concat(axisType));\n      }\n  }\n};\n\nexport var selectPolarAxisScale = createSelector([selectPolarAxis, selectRealScaleType, selectPolarAxisDomainIncludingNiceTicks, selectPolarAxisRangeWithReversed], combineScaleFunction);\nexport var selectPolarCategoricalDomain = createSelector([selectChartLayout, selectPolarAppliedValues, selectAxisSettings, pickAxisType], combineCategoricalDomain);\nexport var selectPolarAxisTicks = createSelector([selectChartLayout, selectPolarAxis, selectRealScaleType, selectPolarAxisScale, selectPolarNiceTicks, selectPolarAxisRangeWithReversed, selectDuplicateDomain, selectPolarCategoricalDomain, pickAxisType], combineAxisTicks);\nexport var selectPolarGraphicalItemAxisTicks = createSelector([selectChartLayout, selectPolarAxis, selectPolarAxisScale, selectPolarAxisRangeWithReversed, selectDuplicateDomain, selectPolarCategoricalDomain, pickAxisType], combineGraphicalItemTicks);","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/polarScaleSelectors.js"],"names":["createSelector","combineAxisTicks","combineCategoricalDomain","combineGraphicalItemTicks","combineScaleFunction","selectAxisSettings","selectDuplicateDomain","selectRealScaleType","selectAngleAxis","selectAngleAxisRangeWithReversed","selectRadiusAxis","selectRadiusAxisRangeWithReversed","selectChartLayout","selectPolarAppliedValues","selectPolarAxisDomainIncludingNiceTicks","selectPolarNiceTicks","pickAxisType","selectPolarAxis","state","axisType","axisId","Error","concat","selectPolarAxisRangeWithReversed","selectPolarAxisScale","selectPolarCategoricalDomain","selectPolarAxisTicks","selectPolarGraphicalItemAxisTicks"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,gBAAT,EAA2BC,wBAA3B,EAAqDC,yBAArD,EAAgFC,oBAAhF,EAAsGC,kBAAtG,EAA0HC,qBAA1H,EAAiJC,mBAAjJ,QAA4K,iBAA5K;AACA,SAASC,eAAT,EAA0BC,gCAA1B,EAA4DC,gBAA5D,EAA8EC,iCAA9E,QAAuH,sBAAvH;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,wBAAT,EAAmCC,uCAAnC,EAA4EC,oBAA5E,QAAwG,kBAAxG;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAO,IAAIC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACxD,UAAQD,QAAR;AACE,SAAK,WAAL;AACE;AACE,eAAOX,eAAe,CAACU,KAAD,EAAQE,MAAR,CAAtB;AACD;;AACH,SAAK,YAAL;AACE;AACE,eAAOV,gBAAgB,CAACQ,KAAD,EAAQE,MAAR,CAAvB;AACD;;AACH;AACE;AACE,cAAM,IAAIC,KAAJ,CAAU,yBAAyBC,MAAzB,CAAgCH,QAAhC,CAAV,CAAN;AACD;AAZL;AAcD,CAfM;;AAgBP,IAAII,gCAAgC,GAAG,CAACL,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AAClE,UAAQD,QAAR;AACE,SAAK,WAAL;AACE;AACE,eAAOV,gCAAgC,CAACS,KAAD,EAAQE,MAAR,CAAvC;AACD;;AACH,SAAK,YAAL;AACE;AACE,eAAOT,iCAAiC,CAACO,KAAD,EAAQE,MAAR,CAAxC;AACD;;AACH;AACE;AACE,cAAM,IAAIC,KAAJ,CAAU,yBAAyBC,MAAzB,CAAgCH,QAAhC,CAAV,CAAN;AACD;AAZL;AAcD,CAfD;;AAgBA,OAAO,IAAIK,oBAAoB,GAAGxB,cAAc,CAAC,CAACiB,eAAD,EAAkBV,mBAAlB,EAAuCO,uCAAvC,EAAgFS,gCAAhF,CAAD,EAAoHnB,oBAApH,CAAzC;AACP,OAAO,IAAIqB,4BAA4B,GAAGzB,cAAc,CAAC,CAACY,iBAAD,EAAoBC,wBAApB,EAA8CR,kBAA9C,EAAkEW,YAAlE,CAAD,EAAkFd,wBAAlF,CAAjD;AACP,OAAO,IAAIwB,oBAAoB,GAAG1B,cAAc,CAAC,CAACY,iBAAD,EAAoBK,eAApB,EAAqCV,mBAArC,EAA0DiB,oBAA1D,EAAgFT,oBAAhF,EAAsGQ,gCAAtG,EAAwIjB,qBAAxI,EAA+JmB,4BAA/J,EAA6LT,YAA7L,CAAD,EAA6Mf,gBAA7M,CAAzC;AACP,OAAO,IAAI0B,iCAAiC,GAAG3B,cAAc,CAAC,CAACY,iBAAD,EAAoBK,eAApB,EAAqCO,oBAArC,EAA2DD,gCAA3D,EAA6FjB,qBAA7F,EAAoHmB,4BAApH,EAAkJT,YAAlJ,CAAD,EAAkKb,yBAAlK,CAAtD","sourcesContent":["import { createSelector } from 'reselect';\nimport { combineAxisTicks, combineCategoricalDomain, combineGraphicalItemTicks, combineScaleFunction, selectAxisSettings, selectDuplicateDomain, selectRealScaleType } from './axisSelectors';\nimport { selectAngleAxis, selectAngleAxisRangeWithReversed, selectRadiusAxis, selectRadiusAxisRangeWithReversed } from './polarAxisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectPolarAppliedValues, selectPolarAxisDomainIncludingNiceTicks, selectPolarNiceTicks } from './polarSelectors';\nimport { pickAxisType } from './pickAxisType';\nexport var selectPolarAxis = (state, axisType, axisId) => {\n  switch (axisType) {\n    case 'angleAxis':\n      {\n        return selectAngleAxis(state, axisId);\n      }\n    case 'radiusAxis':\n      {\n        return selectRadiusAxis(state, axisId);\n      }\n    default:\n      {\n        throw new Error(\"Unexpected axis type: \".concat(axisType));\n      }\n  }\n};\nvar selectPolarAxisRangeWithReversed = (state, axisType, axisId) => {\n  switch (axisType) {\n    case 'angleAxis':\n      {\n        return selectAngleAxisRangeWithReversed(state, axisId);\n      }\n    case 'radiusAxis':\n      {\n        return selectRadiusAxisRangeWithReversed(state, axisId);\n      }\n    default:\n      {\n        throw new Error(\"Unexpected axis type: \".concat(axisType));\n      }\n  }\n};\nexport var selectPolarAxisScale = createSelector([selectPolarAxis, selectRealScaleType, selectPolarAxisDomainIncludingNiceTicks, selectPolarAxisRangeWithReversed], combineScaleFunction);\nexport var selectPolarCategoricalDomain = createSelector([selectChartLayout, selectPolarAppliedValues, selectAxisSettings, pickAxisType], combineCategoricalDomain);\nexport var selectPolarAxisTicks = createSelector([selectChartLayout, selectPolarAxis, selectRealScaleType, selectPolarAxisScale, selectPolarNiceTicks, selectPolarAxisRangeWithReversed, selectDuplicateDomain, selectPolarCategoricalDomain, pickAxisType], combineAxisTicks);\nexport var selectPolarGraphicalItemAxisTicks = createSelector([selectChartLayout, selectPolarAxis, selectPolarAxisScale, selectPolarAxisRangeWithReversed, selectDuplicateDomain, selectPolarCategoricalDomain, pickAxisType], combineGraphicalItemTicks);"]},"metadata":{},"sourceType":"module"}