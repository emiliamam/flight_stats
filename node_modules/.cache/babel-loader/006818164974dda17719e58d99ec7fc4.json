{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nimport * as React from 'react';\nimport { cloneElement, createElement, isValidElement } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Cross } from '../shape/Cross';\nimport { getCursorRectangle } from '../util/cursor/getCursorRectangle';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getRadialCursorPoints } from '../util/cursor/getRadialCursorPoints';\nimport { Sector } from '../shape/Sector';\nimport { getCursorPoints } from '../util/cursor/getCursorPoints';\nimport { filterProps } from '../util/ReactUtils';\nimport { useChartLayout, useOffsetInternal } from '../context/chartLayoutContext';\nimport { useTooltipAxisBandSize } from '../context/useTooltipAxis';\nimport { useChartName } from '../state/selectors/selectors';\n/**\n * If set false, no cursor will be drawn when tooltip is active.\n * If set an object, the option is the configuration of cursor.\n * If set a React element, the option is the custom react element of drawing cursor\n */\n\nexport function CursorInternal(props) {\n  var {\n    coordinate,\n    payload,\n    index,\n    offset,\n    tooltipAxisBandSize,\n    layout,\n    cursor,\n    tooltipEventType,\n    chartName\n  } = props; // The cursor is a part of the Tooltip, and it should be shown (by default) when the Tooltip is active.\n\n  var activeCoordinate = coordinate;\n  var activePayload = payload;\n  var activeTooltipIndex = index;\n\n  if (!cursor || !activeCoordinate || chartName !== 'ScatterChart' && tooltipEventType !== 'axis') {\n    return null;\n  }\n\n  var restProps, cursorComp;\n\n  if (chartName === 'ScatterChart') {\n    restProps = activeCoordinate;\n    cursorComp = Cross;\n  } else if (chartName === 'BarChart') {\n    restProps = getCursorRectangle(layout, activeCoordinate, offset, tooltipAxisBandSize);\n    cursorComp = Rectangle;\n  } else if (layout === 'radial') {\n    // @ts-expect-error TODO the state is marked as containing Coordinate but actually in polar charts it contains PolarCoordinate, we should keep the polar state separate\n    var {\n      cx,\n      cy,\n      radius,\n      startAngle,\n      endAngle\n    } = getRadialCursorPoints(activeCoordinate);\n    restProps = {\n      cx,\n      cy,\n      startAngle,\n      endAngle,\n      innerRadius: radius,\n      outerRadius: radius\n    };\n    cursorComp = Sector;\n  } else {\n    restProps = {\n      points: getCursorPoints(layout, activeCoordinate, offset)\n    };\n    cursorComp = Curve;\n  }\n\n  var extraClassName = typeof cursor === 'object' && 'className' in cursor ? cursor.className : undefined;\n\n  var cursorProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    stroke: '#ccc',\n    pointerEvents: 'none'\n  }, offset), restProps), filterProps(cursor, false)), {}, {\n    payload: activePayload,\n    payloadIndex: activeTooltipIndex,\n    className: clsx('recharts-tooltip-cursor', extraClassName)\n  });\n\n  return /*#__PURE__*/isValidElement(cursor) ? /*#__PURE__*/cloneElement(cursor, cursorProps) : /*#__PURE__*/createElement(cursorComp, cursorProps);\n}\n/*\n * Cursor is the background, or a highlight,\n * that shows when user mouses over or activates\n * an area.\n *\n * It usually shows together with a tooltip\n * to emphasise which part of the chart does the tooltip refer to.\n */\n\nexport function Cursor(props) {\n  var tooltipAxisBandSize = useTooltipAxisBandSize();\n  var offset = useOffsetInternal();\n  var layout = useChartLayout();\n  var chartName = useChartName();\n  return /*#__PURE__*/React.createElement(CursorInternal, _extends({}, props, {\n    coordinate: props.coordinate,\n    index: props.index,\n    payload: props.payload,\n    offset: offset,\n    layout: layout,\n    tooltipAxisBandSize: tooltipAxisBandSize,\n    chartName: chartName\n  }));\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/component/Cursor.js"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","React","cloneElement","createElement","isValidElement","clsx","Curve","Cross","getCursorRectangle","Rectangle","getRadialCursorPoints","Sector","getCursorPoints","filterProps","useChartLayout","useOffsetInternal","useTooltipAxisBandSize","useChartName","CursorInternal","props","coordinate","payload","index","offset","tooltipAxisBandSize","layout","cursor","tooltipEventType","chartName","activeCoordinate","activePayload","activeTooltipIndex","restProps","cursorComp","cx","cy","radius","startAngle","endAngle","innerRadius","outerRadius","points","extraClassName","className","undefined","cursorProps","stroke","pointerEvents","payloadIndex","Cursor"],"mappings":"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","sourcesContent":["function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport * as React from 'react';\nimport { cloneElement, createElement, isValidElement } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Cross } from '../shape/Cross';\nimport { getCursorRectangle } from '../util/cursor/getCursorRectangle';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getRadialCursorPoints } from '../util/cursor/getRadialCursorPoints';\nimport { Sector } from '../shape/Sector';\nimport { getCursorPoints } from '../util/cursor/getCursorPoints';\nimport { filterProps } from '../util/ReactUtils';\nimport { useChartLayout, useOffsetInternal } from '../context/chartLayoutContext';\nimport { useTooltipAxisBandSize } from '../context/useTooltipAxis';\nimport { useChartName } from '../state/selectors/selectors';\n\n/**\n * If set false, no cursor will be drawn when tooltip is active.\n * If set an object, the option is the configuration of cursor.\n * If set a React element, the option is the custom react element of drawing cursor\n */\n\nexport function CursorInternal(props) {\n  var {\n    coordinate,\n    payload,\n    index,\n    offset,\n    tooltipAxisBandSize,\n    layout,\n    cursor,\n    tooltipEventType,\n    chartName\n  } = props;\n\n  // The cursor is a part of the Tooltip, and it should be shown (by default) when the Tooltip is active.\n  var activeCoordinate = coordinate;\n  var activePayload = payload;\n  var activeTooltipIndex = index;\n  if (!cursor || !activeCoordinate || chartName !== 'ScatterChart' && tooltipEventType !== 'axis') {\n    return null;\n  }\n  var restProps, cursorComp;\n  if (chartName === 'ScatterChart') {\n    restProps = activeCoordinate;\n    cursorComp = Cross;\n  } else if (chartName === 'BarChart') {\n    restProps = getCursorRectangle(layout, activeCoordinate, offset, tooltipAxisBandSize);\n    cursorComp = Rectangle;\n  } else if (layout === 'radial') {\n    // @ts-expect-error TODO the state is marked as containing Coordinate but actually in polar charts it contains PolarCoordinate, we should keep the polar state separate\n    var {\n      cx,\n      cy,\n      radius,\n      startAngle,\n      endAngle\n    } = getRadialCursorPoints(activeCoordinate);\n    restProps = {\n      cx,\n      cy,\n      startAngle,\n      endAngle,\n      innerRadius: radius,\n      outerRadius: radius\n    };\n    cursorComp = Sector;\n  } else {\n    restProps = {\n      points: getCursorPoints(layout, activeCoordinate, offset)\n    };\n    cursorComp = Curve;\n  }\n  var extraClassName = typeof cursor === 'object' && 'className' in cursor ? cursor.className : undefined;\n  var cursorProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    stroke: '#ccc',\n    pointerEvents: 'none'\n  }, offset), restProps), filterProps(cursor, false)), {}, {\n    payload: activePayload,\n    payloadIndex: activeTooltipIndex,\n    className: clsx('recharts-tooltip-cursor', extraClassName)\n  });\n  return /*#__PURE__*/isValidElement(cursor) ? /*#__PURE__*/cloneElement(cursor, cursorProps) : /*#__PURE__*/createElement(cursorComp, cursorProps);\n}\n\n/*\n * Cursor is the background, or a highlight,\n * that shows when user mouses over or activates\n * an area.\n *\n * It usually shows together with a tooltip\n * to emphasise which part of the chart does the tooltip refer to.\n */\nexport function Cursor(props) {\n  var tooltipAxisBandSize = useTooltipAxisBandSize();\n  var offset = useOffsetInternal();\n  var layout = useChartLayout();\n  var chartName = useChartName();\n  return /*#__PURE__*/React.createElement(CursorInternal, _extends({}, props, {\n    coordinate: props.coordinate,\n    index: props.index,\n    payload: props.payload,\n    offset: offset,\n    layout: layout,\n    tooltipAxisBandSize: tooltipAxisBandSize,\n    chartName: chartName\n  }));\n}"]},"metadata":{},"sourceType":"module"}