{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nconst isIterateeCall = require('../_internal/isIterateeCall.js');\n\nconst toFinite = require('../util/toFinite.js');\n\nfunction range(start, end, step) {\n  if (step && typeof step !== 'number' && isIterateeCall.isIterateeCall(start, end, step)) {\n    end = step = undefined;\n  }\n\n  start = toFinite.toFinite(start);\n\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  } else {\n    end = toFinite.toFinite(end);\n  }\n\n  step = step === undefined ? start < end ? 1 : -1 : toFinite.toFinite(step);\n  const length = Math.max(Math.ceil((end - start) / (step || 1)), 0);\n  const result = new Array(length);\n\n  for (let index = 0; index < length; index++) {\n    result[index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nexports.range = range;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/es-toolkit/dist/compat/math/range.js"],"names":["Object","defineProperty","exports","Symbol","toStringTag","value","isIterateeCall","require","toFinite","range","start","end","step","undefined","length","Math","max","ceil","result","Array","index"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+BC,MAAM,CAACC,WAAtC,EAAmD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnD;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,gCAAD,CAA9B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,SAASE,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAC7B,MAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAxB,IAAoCN,cAAc,CAACA,cAAf,CAA8BI,KAA9B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAxC,EAAyF;AACrFD,IAAAA,GAAG,GAAGC,IAAI,GAAGC,SAAb;AACH;;AACDH,EAAAA,KAAK,GAAGF,QAAQ,CAACA,QAAT,CAAkBE,KAAlB,CAAR;;AACA,MAAIC,GAAG,KAAKE,SAAZ,EAAuB;AACnBF,IAAAA,GAAG,GAAGD,KAAN;AACAA,IAAAA,KAAK,GAAG,CAAR;AACH,GAHD,MAIK;AACDC,IAAAA,GAAG,GAAGH,QAAQ,CAACA,QAAT,CAAkBG,GAAlB,CAAN;AACH;;AACDC,EAAAA,IAAI,GAAGA,IAAI,KAAKC,SAAT,GAAsBH,KAAK,GAAGC,GAAR,GAAc,CAAd,GAAkB,CAAC,CAAzC,GAA8CH,QAAQ,CAACA,QAAT,CAAkBI,IAAlB,CAArD;AACA,QAAME,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,IAAL,CAAU,CAACN,GAAG,GAAGD,KAAP,KAAiBE,IAAI,IAAI,CAAzB,CAAV,CAAT,EAAiD,CAAjD,CAAf;AACA,QAAMM,MAAM,GAAG,IAAIC,KAAJ,CAAUL,MAAV,CAAf;;AACA,OAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,MAA5B,EAAoCM,KAAK,EAAzC,EAA6C;AACzCF,IAAAA,MAAM,CAACE,KAAD,CAAN,GAAgBV,KAAhB;AACAA,IAAAA,KAAK,IAAIE,IAAT;AACH;;AACD,SAAOM,MAAP;AACH;;AAEDhB,OAAO,CAACO,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst isIterateeCall = require('../_internal/isIterateeCall.js');\nconst toFinite = require('../util/toFinite.js');\n\nfunction range(start, end, step) {\n    if (step && typeof step !== 'number' && isIterateeCall.isIterateeCall(start, end, step)) {\n        end = step = undefined;\n    }\n    start = toFinite.toFinite(start);\n    if (end === undefined) {\n        end = start;\n        start = 0;\n    }\n    else {\n        end = toFinite.toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite.toFinite(step);\n    const length = Math.max(Math.ceil((end - start) / (step || 1)), 0);\n    const result = new Array(length);\n    for (let index = 0; index < length; index++) {\n        result[index] = start;\n        start += step;\n    }\n    return result;\n}\n\nexports.range = range;\n"]},"metadata":{},"sourceType":"script"}