{"ast":null,"code":"function ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nimport { createSelector } from 'reselect';\nimport { selectAxisWithScale, selectCartesianAxisSize, selectStackGroups, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { getPercentValue, isNullish } from '../../util/DataUtils';\nimport { getBandSizeOfAxis } from '../../util/ChartUtils';\nimport { computeBarRectangles } from '../../cartesian/Bar';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectBarCategoryGap, selectBarGap, selectRootBarSize, selectRootMaxBarSize } from './rootPropsSelectors';\nimport { isWellBehavedNumber } from '../../util/isWellBehavedNumber';\n\nvar pickXAxisId = (_state, xAxisId) => xAxisId;\n\nvar pickYAxisId = (_state, _xAxisId, yAxisId) => yAxisId;\n\nvar pickIsPanorama = (_state, _xAxisId, _yAxisId, isPanorama) => isPanorama;\n\nvar pickBarSettings = (_state, _xAxisId, _yAxisId, _isPanorama, barSettings) => barSettings;\n\nvar pickMaxBarSize = (_state, _xAxisId, _yAxisId, _isPanorama, barSettings) => barSettings.maxBarSize;\n\nvar pickCells = (_state, _xAxisId, _yAxisId, _isPanorama, _barSettings, cells) => cells;\n\nvar getBarSize = (globalSize, totalSize, selfSize) => {\n  var barSize = selfSize !== null && selfSize !== void 0 ? selfSize : globalSize;\n\n  if (isNullish(barSize)) {\n    return undefined;\n  }\n\n  return getPercentValue(barSize, totalSize, 0);\n};\n\nexport var selectAllVisibleBars = createSelector([selectChartLayout, selectUnfilteredCartesianItems, pickXAxisId, pickYAxisId, pickIsPanorama], (layout, allItems, xAxisId, yAxisId, isPanorama) => allItems.filter(i => {\n  if (layout === 'horizontal') {\n    return i.xAxisId === xAxisId;\n  }\n\n  return i.yAxisId === yAxisId;\n}).filter(i => i.isPanorama === isPanorama).filter(i => i.hide === false).filter(i => i.type === 'bar'));\n\nvar selectBarStackGroups = (state, xAxisId, yAxisId, isPanorama) => {\n  var layout = selectChartLayout(state);\n\n  if (layout === 'horizontal') {\n    return selectStackGroups(state, 'yAxis', yAxisId, isPanorama);\n  }\n\n  return selectStackGroups(state, 'xAxis', xAxisId, isPanorama);\n};\n\nexport var selectBarCartesianAxisSize = (state, xAxisId, yAxisId) => {\n  var layout = selectChartLayout(state);\n\n  if (layout === 'horizontal') {\n    return selectCartesianAxisSize(state, 'xAxis', xAxisId);\n  }\n\n  return selectCartesianAxisSize(state, 'yAxis', yAxisId);\n};\n/**\n * Some graphical items allow data stacking. The stacks are optional,\n * so all props here are optional too.\n */\n\n/**\n * Some graphical items allow data stacking.\n * This interface is used to represent the items that are stacked\n * because the user has provided the stackId and dataKey properties.\n */\n\nfunction isStacked(graphicalItem) {\n  return graphicalItem.stackId != null && graphicalItem.dataKey != null;\n}\n\nexport var combineBarSizeList = (allBars, globalSize, totalSize) => {\n  var initialValue = {};\n  var stackedBars = allBars.filter(isStacked);\n  var unstackedBars = allBars.filter(b => b.stackId == null);\n  var groupByStack = stackedBars.reduce((acc, bar) => {\n    if (!acc[bar.stackId]) {\n      acc[bar.stackId] = [];\n    }\n\n    acc[bar.stackId].push(bar);\n    return acc;\n  }, initialValue);\n  var stackedSizeList = Object.entries(groupByStack).map(_ref => {\n    var [stackId, bars] = _ref;\n    var dataKeys = bars.map(b => b.dataKey);\n    var barSize = getBarSize(globalSize, totalSize, bars[0].barSize);\n    return {\n      stackId,\n      dataKeys,\n      barSize\n    };\n  });\n  var unstackedSizeList = unstackedBars.map(b => {\n    var dataKeys = [b.dataKey].filter(dk => dk != null);\n    var barSize = getBarSize(globalSize, totalSize, b.barSize);\n    return {\n      stackId: undefined,\n      dataKeys,\n      barSize\n    };\n  });\n  return [...stackedSizeList, ...unstackedSizeList];\n};\nexport var selectBarSizeList = createSelector([selectAllVisibleBars, selectRootBarSize, selectBarCartesianAxisSize], combineBarSizeList);\nexport var selectBarBandSize = (state, xAxisId, yAxisId, isPanorama, barSettings) => {\n  var _ref2, _getBandSizeOfAxis;\n\n  var layout = selectChartLayout(state);\n  var globalMaxBarSize = selectRootMaxBarSize(state);\n  var {\n    maxBarSize: childMaxBarSize\n  } = barSettings;\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n  var axis, ticks;\n\n  if (layout === 'horizontal') {\n    axis = selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\n  } else {\n    axis = selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\n  }\n\n  return (_ref2 = (_getBandSizeOfAxis = getBandSizeOfAxis(axis, ticks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref2 !== void 0 ? _ref2 : 0;\n};\n\nvar selectAxisBandSize = (state, xAxisId, yAxisId, isPanorama) => {\n  var layout = selectChartLayout(state);\n  var axis, ticks;\n\n  if (layout === 'horizontal') {\n    axis = selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\n  } else {\n    axis = selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\n  }\n\n  return getBandSizeOfAxis(axis, ticks);\n};\n\nfunction getBarPositions(barGap, barCategoryGap, bandSize, sizeList, maxBarSize) {\n  var len = sizeList.length;\n\n  if (len < 1) {\n    return undefined;\n  }\n\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = []; // whether is barSize set by user\n  // Okay but why does it check only for the first element? What if the first element is set but others are not?\n\n  if (isWellBehavedNumber(sizeList[0].barSize)) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce((res, entry) => res + (entry.barSize || 0), 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce((res, entry) => {\n      var _entry$barSize;\n\n      var newPosition = {\n        stackId: entry.stackId,\n        dataKeys: entry.dataKeys,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : (_entry$barSize = entry.barSize) !== null && _entry$barSize !== void 0 ? _entry$barSize : 0\n        }\n      };\n      var newRes = [...res, newPosition];\n      prev = newRes[newRes.length - 1].position;\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = isWellBehavedNumber(maxBarSize) ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce((res, entry, i) => [...res, {\n      stackId: entry.stackId,\n      dataKeys: entry.dataKeys,\n      position: {\n        offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n        size\n      }\n    }], initialValue);\n  }\n\n  return result;\n}\n\nexport var combineAllBarPositions = (sizeList, globalMaxBarSize, barGap, barCategoryGap, barBandSize, bandSize, childMaxBarSize) => {\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n  var allBarPositions = getBarPositions(barGap, barCategoryGap, barBandSize !== bandSize ? barBandSize : bandSize, sizeList, maxBarSize);\n\n  if (barBandSize !== bandSize && allBarPositions != null) {\n    allBarPositions = allBarPositions.map(pos => _objectSpread(_objectSpread({}, pos), {}, {\n      position: _objectSpread(_objectSpread({}, pos.position), {}, {\n        offset: pos.position.offset - barBandSize / 2\n      })\n    }));\n  }\n\n  return allBarPositions;\n};\nexport var selectAllBarPositions = createSelector([selectBarSizeList, selectRootMaxBarSize, selectBarGap, selectBarCategoryGap, selectBarBandSize, selectAxisBandSize, pickMaxBarSize], combineAllBarPositions);\n\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\n\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\n\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\n\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\n\nexport var selectBarPosition = createSelector([selectAllBarPositions, pickBarSettings], (allBarPositions, barSettings) => {\n  if (allBarPositions == null) {\n    return undefined;\n  }\n\n  var position = allBarPositions.find(p => p.stackId === barSettings.stackId && p.dataKeys.includes(barSettings.dataKey));\n\n  if (position == null) {\n    return undefined;\n  }\n\n  return position.position;\n});\nexport var combineStackedData = (stackGroups, barSettings) => {\n  if (!stackGroups || (barSettings === null || barSettings === void 0 ? void 0 : barSettings.dataKey) == null) {\n    return undefined;\n  }\n\n  var {\n    stackId\n  } = barSettings;\n\n  if (stackId == null) {\n    return undefined;\n  }\n\n  var stackGroup = stackGroups[stackId];\n\n  if (!stackGroup) {\n    return undefined;\n  }\n\n  var {\n    stackedData\n  } = stackGroup;\n\n  if (!stackedData) {\n    return undefined;\n  }\n\n  var stack = stackedData.find(sd => sd.key === barSettings.dataKey);\n  return stack;\n};\nvar selectSynchronisedBarSettings = createSelector([selectUnfilteredCartesianItems, pickBarSettings], (graphicalItems, barSettingsFromProps) => {\n  if (graphicalItems.some(cgis => cgis.type === 'bar' && barSettingsFromProps.dataKey === cgis.dataKey && barSettingsFromProps.stackId === cgis.stackId && // barSettingsFromProps.data === cgis.data && // bar doesn't support data and one is undefined and another is null and this condition breaks\n  barSettingsFromProps.stackId === cgis.stackId)) {\n    return barSettingsFromProps;\n  }\n\n  return undefined;\n});\nvar selectStackedDataOfItem = createSelector([selectBarStackGroups, pickBarSettings], combineStackedData);\nexport var selectBarRectangles = createSelector([selectChartOffsetInternal, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectBarPosition, selectChartLayout, selectChartDataWithIndexesIfNotInPanorama, selectAxisBandSize, selectStackedDataOfItem, selectSynchronisedBarSettings, pickCells], (offset, xAxis, yAxis, xAxisTicks, yAxisTicks, pos, layout, _ref3, bandSize, stackedData, barSettings, cells) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref3;\n\n  if (barSettings == null || pos == null || layout !== 'horizontal' && layout !== 'vertical' || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || bandSize == null) {\n    return undefined;\n  }\n\n  var {\n    data\n  } = barSettings;\n  var displayedData;\n\n  if (data != null && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n\n  if (displayedData == null) {\n    return undefined;\n  }\n\n  return computeBarRectangles({\n    layout,\n    barSettings,\n    pos,\n    bandSize,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    stackedData,\n    displayedData,\n    offset,\n    cells\n  });\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/selectors/barSelectors.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","createSelector","selectAxisWithScale","selectCartesianAxisSize","selectStackGroups","selectTicksOfGraphicalItem","selectUnfilteredCartesianItems","getPercentValue","isNullish","getBandSizeOfAxis","computeBarRectangles","selectChartLayout","selectChartDataWithIndexesIfNotInPanorama","selectChartOffsetInternal","selectBarCategoryGap","selectBarGap","selectRootBarSize","selectRootMaxBarSize","isWellBehavedNumber","pickXAxisId","_state","xAxisId","pickYAxisId","_xAxisId","yAxisId","pickIsPanorama","_yAxisId","isPanorama","pickBarSettings","_isPanorama","barSettings","pickMaxBarSize","maxBarSize","pickCells","_barSettings","cells","getBarSize","globalSize","totalSize","selfSize","barSize","undefined","selectAllVisibleBars","layout","allItems","hide","type","selectBarStackGroups","state","selectBarCartesianAxisSize","isStacked","graphicalItem","stackId","dataKey","combineBarSizeList","allBars","initialValue","stackedBars","unstackedBars","b","groupByStack","reduce","acc","bar","stackedSizeList","entries","map","_ref","bars","dataKeys","unstackedSizeList","dk","selectBarSizeList","selectBarBandSize","_ref2","_getBandSizeOfAxis","globalMaxBarSize","childMaxBarSize","axis","ticks","selectAxisBandSize","getBarPositions","barGap","barCategoryGap","bandSize","sizeList","len","realBarGap","result","useFull","fullBarSize","sum","res","entry","offset","prev","size","_entry$barSize","newPosition","position","newRes","_offset","originalSize","Math","min","combineAllBarPositions","barBandSize","allBarPositions","pos","selectAllBarPositions","selectXAxisWithScale","selectYAxisWithScale","selectXAxisTicks","selectYAxisTicks","selectBarPosition","find","p","includes","combineStackedData","stackGroups","stackGroup","stackedData","stack","sd","key","selectSynchronisedBarSettings","graphicalItems","barSettingsFromProps","some","cgis","selectStackedDataOfItem","selectBarRectangles","xAxis","yAxis","xAxisTicks","yAxisTicks","_ref3","chartData","dataStartIndex","dataEndIndex","data","displayedData","slice"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAAE,MAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAR;;AAAwB,MAAIG,MAAM,CAACE,qBAAX,EAAkC;AAAE,QAAIC,CAAC,GAAGH,MAAM,CAACE,qBAAP,CAA6BL,CAA7B,CAAR;AAAyCC,IAAAA,CAAC,KAAKK,CAAC,GAAGA,CAAC,CAACC,MAAF,CAAS,UAAUN,CAAV,EAAa;AAAE,aAAOE,MAAM,CAACK,wBAAP,CAAgCR,CAAhC,EAAmCC,CAAnC,EAAsCQ,UAA7C;AAA0D,KAAlF,CAAT,CAAD,EAAgGP,CAAC,CAACQ,IAAF,CAAOC,KAAP,CAAaT,CAAb,EAAgBI,CAAhB,CAAhG;AAAqH;;AAAC,SAAOJ,CAAP;AAAW;;AAC/P,SAASU,aAAT,CAAuBZ,CAAvB,EAA0B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,SAAS,CAACC,MAA9B,EAAsCb,CAAC,EAAvC,EAA2C;AAAE,QAAIC,CAAC,GAAG,QAAQW,SAAS,CAACZ,CAAD,CAAjB,GAAuBY,SAAS,CAACZ,CAAD,CAAhC,GAAsC,EAA9C;AAAkDA,IAAAA,CAAC,GAAG,CAAJ,GAAQF,OAAO,CAACI,MAAM,CAACD,CAAD,CAAP,EAAY,CAAC,CAAb,CAAP,CAAuBa,OAAvB,CAA+B,UAAUd,CAAV,EAAa;AAAEe,MAAAA,eAAe,CAAChB,CAAD,EAAIC,CAAJ,EAAOC,CAAC,CAACD,CAAD,CAAR,CAAf;AAA8B,KAA5E,CAAR,GAAwFE,MAAM,CAACc,yBAAP,GAAmCd,MAAM,CAACe,gBAAP,CAAwBlB,CAAxB,EAA2BG,MAAM,CAACc,yBAAP,CAAiCf,CAAjC,CAA3B,CAAnC,GAAqGH,OAAO,CAACI,MAAM,CAACD,CAAD,CAAP,CAAP,CAAmBa,OAAnB,CAA2B,UAAUd,CAAV,EAAa;AAAEE,MAAAA,MAAM,CAACgB,cAAP,CAAsBnB,CAAtB,EAAyBC,CAAzB,EAA4BE,MAAM,CAACK,wBAAP,CAAgCN,CAAhC,EAAmCD,CAAnC,CAA5B;AAAqE,KAA/G,CAA7L;AAAgT;;AAAC,SAAOD,CAAP;AAAW;;AACvb,SAASgB,eAAT,CAAyBhB,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AAAE,SAAO,CAACD,CAAC,GAAGmB,cAAc,CAACnB,CAAD,CAAnB,KAA2BD,CAA3B,GAA+BG,MAAM,CAACgB,cAAP,CAAsBnB,CAAtB,EAAyBC,CAAzB,EAA4B;AAAEoB,IAAAA,KAAK,EAAEnB,CAAT;AAAYO,IAAAA,UAAU,EAAE,CAAC,CAAzB;AAA4Ba,IAAAA,YAAY,EAAE,CAAC,CAA3C;AAA8CC,IAAAA,QAAQ,EAAE,CAAC;AAAzD,GAA5B,CAA/B,GAA2HvB,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAlI,EAAqIF,CAA5I;AAAgJ;;AACpL,SAASoB,cAAT,CAAwBlB,CAAxB,EAA2B;AAAE,MAAIsB,CAAC,GAAGC,YAAY,CAACvB,CAAD,EAAI,QAAJ,CAApB;;AAAmC,SAAO,YAAY,OAAOsB,CAAnB,GAAuBA,CAAvB,GAA2BA,CAAC,GAAG,EAAtC;AAA2C;;AAC3G,SAASC,YAAT,CAAsBvB,CAAtB,EAAyBD,CAAzB,EAA4B;AAAE,MAAI,YAAY,OAAOC,CAAnB,IAAwB,CAACA,CAA7B,EAAgC,OAAOA,CAAP;AAAU,MAAIF,CAAC,GAAGE,CAAC,CAACwB,MAAM,CAACC,WAAR,CAAT;;AAA+B,MAAI,KAAK,CAAL,KAAW3B,CAAf,EAAkB;AAAE,QAAIwB,CAAC,GAAGxB,CAAC,CAAC4B,IAAF,CAAO1B,CAAP,EAAUD,CAAC,IAAI,SAAf,CAAR;AAAmC,QAAI,YAAY,OAAOuB,CAAvB,EAA0B,OAAOA,CAAP;AAAU,UAAM,IAAIK,SAAJ,CAAc,8CAAd,CAAN;AAAsE;;AAAC,SAAO,CAAC,aAAa5B,CAAb,GAAiB6B,MAAjB,GAA0BC,MAA3B,EAAmC7B,CAAnC,CAAP;AAA+C;;AACxT,SAAS8B,cAAT,QAA+B,UAA/B;AACA,SAASC,mBAAT,EAA8BC,uBAA9B,EAAuDC,iBAAvD,EAA0EC,0BAA1E,EAAsGC,8BAAtG,QAA4I,iBAA5I;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,sBAA3C;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,yCAAT,QAA0D,iBAA1D;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,oBAAT,EAA+BC,YAA/B,EAA6CC,iBAA7C,EAAgEC,oBAAhE,QAA4F,sBAA5F;AACA,SAASC,mBAAT,QAAoC,gCAApC;;AACA,IAAIC,WAAW,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqBA,OAAvC;;AACA,IAAIC,WAAW,GAAG,CAACF,MAAD,EAASG,QAAT,EAAmBC,OAAnB,KAA+BA,OAAjD;;AACA,IAAIC,cAAc,GAAG,CAACL,MAAD,EAASG,QAAT,EAAmBG,QAAnB,EAA6BC,UAA7B,KAA4CA,UAAjE;;AACA,IAAIC,eAAe,GAAG,CAACR,MAAD,EAASG,QAAT,EAAmBG,QAAnB,EAA6BG,WAA7B,EAA0CC,WAA1C,KAA0DA,WAAhF;;AACA,IAAIC,cAAc,GAAG,CAACX,MAAD,EAASG,QAAT,EAAmBG,QAAnB,EAA6BG,WAA7B,EAA0CC,WAA1C,KAA0DA,WAAW,CAACE,UAA3F;;AACA,IAAIC,SAAS,GAAG,CAACb,MAAD,EAASG,QAAT,EAAmBG,QAAnB,EAA6BG,WAA7B,EAA0CK,YAA1C,EAAwDC,KAAxD,KAAkEA,KAAlF;;AACA,IAAIC,UAAU,GAAG,CAACC,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,KAAqC;AACpD,MAAIC,OAAO,GAAGD,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsDF,UAApE;;AACA,MAAI7B,SAAS,CAACgC,OAAD,CAAb,EAAwB;AACtB,WAAOC,SAAP;AACD;;AACD,SAAOlC,eAAe,CAACiC,OAAD,EAAUF,SAAV,EAAqB,CAArB,CAAtB;AACD,CAND;;AAOA,OAAO,IAAII,oBAAoB,GAAGzC,cAAc,CAAC,CAACU,iBAAD,EAAoBL,8BAApB,EAAoDa,WAApD,EAAiEG,WAAjE,EAA8EG,cAA9E,CAAD,EAAgG,CAACkB,MAAD,EAASC,QAAT,EAAmBvB,OAAnB,EAA4BG,OAA5B,EAAqCG,UAArC,KAAoDiB,QAAQ,CAACpE,MAAT,CAAgBiB,CAAC,IAAI;AACvN,MAAIkD,MAAM,KAAK,YAAf,EAA6B;AAC3B,WAAOlD,CAAC,CAAC4B,OAAF,KAAcA,OAArB;AACD;;AACD,SAAO5B,CAAC,CAAC+B,OAAF,KAAcA,OAArB;AACD,CALmM,EAKjMhD,MALiM,CAK1LiB,CAAC,IAAIA,CAAC,CAACkC,UAAF,KAAiBA,UALoK,EAKxJnD,MALwJ,CAKjJiB,CAAC,IAAIA,CAAC,CAACoD,IAAF,KAAW,KALiI,EAK1HrE,MAL0H,CAKnHiB,CAAC,IAAIA,CAAC,CAACqD,IAAF,KAAW,KALmG,CAApJ,CAAzC;;AAMP,IAAIC,oBAAoB,GAAG,CAACC,KAAD,EAAQ3B,OAAR,EAAiBG,OAAjB,EAA0BG,UAA1B,KAAyC;AAClE,MAAIgB,MAAM,GAAGhC,iBAAiB,CAACqC,KAAD,CAA9B;;AACA,MAAIL,MAAM,KAAK,YAAf,EAA6B;AAC3B,WAAOvC,iBAAiB,CAAC4C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAAxB;AACD;;AACD,SAAOvB,iBAAiB,CAAC4C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAAxB;AACD,CAND;;AAOA,OAAO,IAAIsB,0BAA0B,GAAG,CAACD,KAAD,EAAQ3B,OAAR,EAAiBG,OAAjB,KAA6B;AACnE,MAAImB,MAAM,GAAGhC,iBAAiB,CAACqC,KAAD,CAA9B;;AACA,MAAIL,MAAM,KAAK,YAAf,EAA6B;AAC3B,WAAOxC,uBAAuB,CAAC6C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,CAA9B;AACD;;AACD,SAAOlB,uBAAuB,CAAC6C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,CAA9B;AACD,CANM;AAQP;;;;;AAKA;;;;;;AAMA,SAAS0B,SAAT,CAAmBC,aAAnB,EAAkC;AAChC,SAAOA,aAAa,CAACC,OAAd,IAAyB,IAAzB,IAAiCD,aAAa,CAACE,OAAd,IAAyB,IAAjE;AACD;;AACD,OAAO,IAAIC,kBAAkB,GAAG,CAACC,OAAD,EAAUlB,UAAV,EAAsBC,SAAtB,KAAoC;AAClE,MAAIkB,YAAY,GAAG,EAAnB;AACA,MAAIC,WAAW,GAAGF,OAAO,CAAC/E,MAAR,CAAe0E,SAAf,CAAlB;AACA,MAAIQ,aAAa,GAAGH,OAAO,CAAC/E,MAAR,CAAemF,CAAC,IAAIA,CAAC,CAACP,OAAF,IAAa,IAAjC,CAApB;AACA,MAAIQ,YAAY,GAAGH,WAAW,CAACI,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,QAAI,CAACD,GAAG,CAACC,GAAG,CAACX,OAAL,CAAR,EAAuB;AACrBU,MAAAA,GAAG,CAACC,GAAG,CAACX,OAAL,CAAH,GAAmB,EAAnB;AACD;;AACDU,IAAAA,GAAG,CAACC,GAAG,CAACX,OAAL,CAAH,CAAiBzE,IAAjB,CAAsBoF,GAAtB;AACA,WAAOD,GAAP;AACD,GANkB,EAMhBN,YANgB,CAAnB;AAOA,MAAIQ,eAAe,GAAG5F,MAAM,CAAC6F,OAAP,CAAeL,YAAf,EAA6BM,GAA7B,CAAiCC,IAAI,IAAI;AAC7D,QAAI,CAACf,OAAD,EAAUgB,IAAV,IAAkBD,IAAtB;AACA,QAAIE,QAAQ,GAAGD,IAAI,CAACF,GAAL,CAASP,CAAC,IAAIA,CAAC,CAACN,OAAhB,CAAf;AACA,QAAIb,OAAO,GAAGJ,UAAU,CAACC,UAAD,EAAaC,SAAb,EAAwB8B,IAAI,CAAC,CAAD,CAAJ,CAAQ5B,OAAhC,CAAxB;AACA,WAAO;AACLY,MAAAA,OADK;AAELiB,MAAAA,QAFK;AAGL7B,MAAAA;AAHK,KAAP;AAKD,GATqB,CAAtB;AAUA,MAAI8B,iBAAiB,GAAGZ,aAAa,CAACQ,GAAd,CAAkBP,CAAC,IAAI;AAC7C,QAAIU,QAAQ,GAAG,CAACV,CAAC,CAACN,OAAH,EAAY7E,MAAZ,CAAmB+F,EAAE,IAAIA,EAAE,IAAI,IAA/B,CAAf;AACA,QAAI/B,OAAO,GAAGJ,UAAU,CAACC,UAAD,EAAaC,SAAb,EAAwBqB,CAAC,CAACnB,OAA1B,CAAxB;AACA,WAAO;AACLY,MAAAA,OAAO,EAAEX,SADJ;AAEL4B,MAAAA,QAFK;AAGL7B,MAAAA;AAHK,KAAP;AAKD,GARuB,CAAxB;AASA,SAAO,CAAC,GAAGwB,eAAJ,EAAqB,GAAGM,iBAAxB,CAAP;AACD,CA/BM;AAgCP,OAAO,IAAIE,iBAAiB,GAAGvE,cAAc,CAAC,CAACyC,oBAAD,EAAuB1B,iBAAvB,EAA0CiC,0BAA1C,CAAD,EAAwEK,kBAAxE,CAAtC;AACP,OAAO,IAAImB,iBAAiB,GAAG,CAACzB,KAAD,EAAQ3B,OAAR,EAAiBG,OAAjB,EAA0BG,UAA1B,EAAsCG,WAAtC,KAAsD;AACnF,MAAI4C,KAAJ,EAAWC,kBAAX;;AACA,MAAIhC,MAAM,GAAGhC,iBAAiB,CAACqC,KAAD,CAA9B;AACA,MAAI4B,gBAAgB,GAAG3D,oBAAoB,CAAC+B,KAAD,CAA3C;AACA,MAAI;AACFhB,IAAAA,UAAU,EAAE6C;AADV,MAEA/C,WAFJ;AAGA,MAAIE,UAAU,GAAGxB,SAAS,CAACqE,eAAD,CAAT,GAA6BD,gBAA7B,GAAgDC,eAAjE;AACA,MAAIC,IAAJ,EAAUC,KAAV;;AACA,MAAIpC,MAAM,KAAK,YAAf,EAA6B;AAC3BmC,IAAAA,IAAI,GAAG5E,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAA1B;AACAoD,IAAAA,KAAK,GAAG1E,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAAlC;AACD,GAHD,MAGO;AACLmD,IAAAA,IAAI,GAAG5E,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAA1B;AACAoD,IAAAA,KAAK,GAAG1E,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAAlC;AACD;;AACD,SAAO,CAAC+C,KAAK,GAAG,CAACC,kBAAkB,GAAGlE,iBAAiB,CAACqE,IAAD,EAAOC,KAAP,EAAc,IAAd,CAAvC,MAAgE,IAAhE,IAAwEJ,kBAAkB,KAAK,KAAK,CAApG,GAAwGA,kBAAxG,GAA6H3C,UAAtI,MAAsJ,IAAtJ,IAA8J0C,KAAK,KAAK,KAAK,CAA7K,GAAiLA,KAAjL,GAAyL,CAAhM;AACD,CAjBM;;AAkBP,IAAIM,kBAAkB,GAAG,CAAChC,KAAD,EAAQ3B,OAAR,EAAiBG,OAAjB,EAA0BG,UAA1B,KAAyC;AAChE,MAAIgB,MAAM,GAAGhC,iBAAiB,CAACqC,KAAD,CAA9B;AACA,MAAI8B,IAAJ,EAAUC,KAAV;;AACA,MAAIpC,MAAM,KAAK,YAAf,EAA6B;AAC3BmC,IAAAA,IAAI,GAAG5E,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAA1B;AACAoD,IAAAA,KAAK,GAAG1E,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAAlC;AACD,GAHD,MAGO;AACLmD,IAAAA,IAAI,GAAG5E,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAA1B;AACAoD,IAAAA,KAAK,GAAG1E,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAAlC;AACD;;AACD,SAAOlB,iBAAiB,CAACqE,IAAD,EAAOC,KAAP,CAAxB;AACD,CAXD;;AAYA,SAASE,eAAT,CAAyBC,MAAzB,EAAiCC,cAAjC,EAAiDC,QAAjD,EAA2DC,QAA3D,EAAqErD,UAArE,EAAiF;AAC/E,MAAIsD,GAAG,GAAGD,QAAQ,CAACtG,MAAnB;;AACA,MAAIuG,GAAG,GAAG,CAAV,EAAa;AACX,WAAO7C,SAAP;AACD;;AACD,MAAI8C,UAAU,GAAGhF,eAAe,CAAC2E,MAAD,EAASE,QAAT,EAAmB,CAAnB,EAAsB,IAAtB,CAAhC;AACA,MAAII,MAAJ;AACA,MAAIhC,YAAY,GAAG,EAAnB,CAP+E,CAS/E;AACA;;AACA,MAAItC,mBAAmB,CAACmE,QAAQ,CAAC,CAAD,CAAR,CAAY7C,OAAb,CAAvB,EAA8C;AAC5C,QAAIiD,OAAO,GAAG,KAAd;AACA,QAAIC,WAAW,GAAGN,QAAQ,GAAGE,GAA7B;AACA,QAAIK,GAAG,GAAGN,QAAQ,CAACxB,MAAT,CAAgB,CAAC+B,GAAD,EAAMC,KAAN,KAAgBD,GAAG,IAAIC,KAAK,CAACrD,OAAN,IAAiB,CAArB,CAAnC,EAA4D,CAA5D,CAAV;AACAmD,IAAAA,GAAG,IAAI,CAACL,GAAG,GAAG,CAAP,IAAYC,UAAnB;;AACA,QAAII,GAAG,IAAIP,QAAX,EAAqB;AACnBO,MAAAA,GAAG,IAAI,CAACL,GAAG,GAAG,CAAP,IAAYC,UAAnB;AACAA,MAAAA,UAAU,GAAG,CAAb;AACD;;AACD,QAAII,GAAG,IAAIP,QAAP,IAAmBM,WAAW,GAAG,CAArC,EAAwC;AACtCD,MAAAA,OAAO,GAAG,IAAV;AACAC,MAAAA,WAAW,IAAI,GAAf;AACAC,MAAAA,GAAG,GAAGL,GAAG,GAAGI,WAAZ;AACD;;AACD,QAAII,MAAM,GAAG,CAACV,QAAQ,GAAGO,GAAZ,IAAmB,CAAnB,IAAwB,CAArC;AACA,QAAII,IAAI,GAAG;AACTD,MAAAA,MAAM,EAAEA,MAAM,GAAGP,UADR;AAETS,MAAAA,IAAI,EAAE;AAFG,KAAX;AAIAR,IAAAA,MAAM,GAAGH,QAAQ,CAACxB,MAAT,CAAgB,CAAC+B,GAAD,EAAMC,KAAN,KAAgB;AACvC,UAAII,cAAJ;;AACA,UAAIC,WAAW,GAAG;AAChB9C,QAAAA,OAAO,EAAEyC,KAAK,CAACzC,OADC;AAEhBiB,QAAAA,QAAQ,EAAEwB,KAAK,CAACxB,QAFA;AAGhB8B,QAAAA,QAAQ,EAAE;AACRL,UAAAA,MAAM,EAAEC,IAAI,CAACD,MAAL,GAAcC,IAAI,CAACC,IAAnB,GAA0BT,UAD1B;AAERS,UAAAA,IAAI,EAAEP,OAAO,GAAGC,WAAH,GAAiB,CAACO,cAAc,GAAGJ,KAAK,CAACrD,OAAxB,MAAqC,IAArC,IAA6CyD,cAAc,KAAK,KAAK,CAArE,GAAyEA,cAAzE,GAA0F;AAFhH;AAHM,OAAlB;AAQA,UAAIG,MAAM,GAAG,CAAC,GAAGR,GAAJ,EAASM,WAAT,CAAb;AACAH,MAAAA,IAAI,GAAGK,MAAM,CAACA,MAAM,CAACrH,MAAP,GAAgB,CAAjB,CAAN,CAA0BoH,QAAjC;AACA,aAAOC,MAAP;AACD,KAbQ,EAaN5C,YAbM,CAAT;AAcD,GAjCD,MAiCO;AACL,QAAI6C,OAAO,GAAG9F,eAAe,CAAC4E,cAAD,EAAiBC,QAAjB,EAA2B,CAA3B,EAA8B,IAA9B,CAA7B;;AACA,QAAIA,QAAQ,GAAG,IAAIiB,OAAf,GAAyB,CAACf,GAAG,GAAG,CAAP,IAAYC,UAArC,IAAmD,CAAvD,EAA0D;AACxDA,MAAAA,UAAU,GAAG,CAAb;AACD;;AACD,QAAIe,YAAY,GAAG,CAAClB,QAAQ,GAAG,IAAIiB,OAAf,GAAyB,CAACf,GAAG,GAAG,CAAP,IAAYC,UAAtC,IAAoDD,GAAvE;;AACA,QAAIgB,YAAY,GAAG,CAAnB,EAAsB;AACpBA,MAAAA,YAAY,KAAK,CAAjB;AACD;;AACD,QAAIN,IAAI,GAAG9E,mBAAmB,CAACc,UAAD,CAAnB,GAAkCuE,IAAI,CAACC,GAAL,CAASF,YAAT,EAAuBtE,UAAvB,CAAlC,GAAuEsE,YAAlF;AACAd,IAAAA,MAAM,GAAGH,QAAQ,CAACxB,MAAT,CAAgB,CAAC+B,GAAD,EAAMC,KAAN,EAAapG,CAAb,KAAmB,CAAC,GAAGmG,GAAJ,EAAS;AACnDxC,MAAAA,OAAO,EAAEyC,KAAK,CAACzC,OADoC;AAEnDiB,MAAAA,QAAQ,EAAEwB,KAAK,CAACxB,QAFmC;AAGnD8B,MAAAA,QAAQ,EAAE;AACRL,QAAAA,MAAM,EAAEO,OAAO,GAAG,CAACC,YAAY,GAAGf,UAAhB,IAA8B9F,CAAxC,GAA4C,CAAC6G,YAAY,GAAGN,IAAhB,IAAwB,CADpE;AAERA,QAAAA;AAFQ;AAHyC,KAAT,CAAnC,EAOLxC,YAPK,CAAT;AAQD;;AACD,SAAOgC,MAAP;AACD;;AACD,OAAO,IAAIiB,sBAAsB,GAAG,CAACpB,QAAD,EAAWT,gBAAX,EAA6BM,MAA7B,EAAqCC,cAArC,EAAqDuB,WAArD,EAAkEtB,QAAlE,EAA4EP,eAA5E,KAAgG;AAClI,MAAI7C,UAAU,GAAGxB,SAAS,CAACqE,eAAD,CAAT,GAA6BD,gBAA7B,GAAgDC,eAAjE;AACA,MAAI8B,eAAe,GAAG1B,eAAe,CAACC,MAAD,EAASC,cAAT,EAAyBuB,WAAW,KAAKtB,QAAhB,GAA2BsB,WAA3B,GAAyCtB,QAAlE,EAA4EC,QAA5E,EAAsFrD,UAAtF,CAArC;;AACA,MAAI0E,WAAW,KAAKtB,QAAhB,IAA4BuB,eAAe,IAAI,IAAnD,EAAyD;AACvDA,IAAAA,eAAe,GAAGA,eAAe,CAACzC,GAAhB,CAAoB0C,GAAG,IAAI/H,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK+H,GAAL,CAAd,EAAyB,EAAzB,EAA6B;AACrFT,MAAAA,QAAQ,EAAEtH,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK+H,GAAG,CAACT,QAAT,CAAd,EAAkC,EAAlC,EAAsC;AAC3DL,QAAAA,MAAM,EAAEc,GAAG,CAACT,QAAJ,CAAaL,MAAb,GAAsBY,WAAW,GAAG;AADe,OAAtC;AAD8D,KAA7B,CAAxC,CAAlB;AAKD;;AACD,SAAOC,eAAP;AACD,CAXM;AAYP,OAAO,IAAIE,qBAAqB,GAAG5G,cAAc,CAAC,CAACuE,iBAAD,EAAoBvD,oBAApB,EAA0CF,YAA1C,EAAwDD,oBAAxD,EAA8E2D,iBAA9E,EAAiGO,kBAAjG,EAAqHjD,cAArH,CAAD,EAAuI0E,sBAAvI,CAA1C;;AACP,IAAIK,oBAAoB,GAAG,CAAC9D,KAAD,EAAQ3B,OAAR,EAAiBK,QAAjB,EAA2BC,UAA3B,KAA0CzB,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAAxF;;AACA,IAAIoF,oBAAoB,GAAG,CAAC/D,KAAD,EAAQzB,QAAR,EAAkBC,OAAlB,EAA2BG,UAA3B,KAA0CzB,mBAAmB,CAAC8C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAAxF;;AACA,IAAIqF,gBAAgB,GAAG,CAAChE,KAAD,EAAQ3B,OAAR,EAAiBK,QAAjB,EAA2BC,UAA3B,KAA0CtB,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiB3B,OAAjB,EAA0BM,UAA1B,CAA3F;;AACA,IAAIsF,gBAAgB,GAAG,CAACjE,KAAD,EAAQzB,QAAR,EAAkBC,OAAlB,EAA2BG,UAA3B,KAA0CtB,0BAA0B,CAAC2C,KAAD,EAAQ,OAAR,EAAiBxB,OAAjB,EAA0BG,UAA1B,CAA3F;;AACA,OAAO,IAAIuF,iBAAiB,GAAGjH,cAAc,CAAC,CAAC4G,qBAAD,EAAwBjF,eAAxB,CAAD,EAA2C,CAAC+E,eAAD,EAAkB7E,WAAlB,KAAkC;AACxH,MAAI6E,eAAe,IAAI,IAAvB,EAA6B;AAC3B,WAAOlE,SAAP;AACD;;AACD,MAAI0D,QAAQ,GAAGQ,eAAe,CAACQ,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAAChE,OAAF,KAActB,WAAW,CAACsB,OAA1B,IAAqCgE,CAAC,CAAC/C,QAAF,CAAWgD,QAAX,CAAoBvF,WAAW,CAACuB,OAAhC,CAA/D,CAAf;;AACA,MAAI8C,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO1D,SAAP;AACD;;AACD,SAAO0D,QAAQ,CAACA,QAAhB;AACD,CAT4C,CAAtC;AAUP,OAAO,IAAImB,kBAAkB,GAAG,CAACC,WAAD,EAAczF,WAAd,KAA8B;AAC5D,MAAI,CAACyF,WAAD,IAAgB,CAACzF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACuB,OAAvE,KAAmF,IAAvG,EAA6G;AAC3G,WAAOZ,SAAP;AACD;;AACD,MAAI;AACFW,IAAAA;AADE,MAEAtB,WAFJ;;AAGA,MAAIsB,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAOX,SAAP;AACD;;AACD,MAAI+E,UAAU,GAAGD,WAAW,CAACnE,OAAD,CAA5B;;AACA,MAAI,CAACoE,UAAL,EAAiB;AACf,WAAO/E,SAAP;AACD;;AACD,MAAI;AACFgF,IAAAA;AADE,MAEAD,UAFJ;;AAGA,MAAI,CAACC,WAAL,EAAkB;AAChB,WAAOhF,SAAP;AACD;;AACD,MAAIiF,KAAK,GAAGD,WAAW,CAACN,IAAZ,CAAiBQ,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAW9F,WAAW,CAACuB,OAA9C,CAAZ;AACA,SAAOqE,KAAP;AACD,CAtBM;AAuBP,IAAIG,6BAA6B,GAAG5H,cAAc,CAAC,CAACK,8BAAD,EAAiCsB,eAAjC,CAAD,EAAoD,CAACkG,cAAD,EAAiBC,oBAAjB,KAA0C;AAC9I,MAAID,cAAc,CAACE,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACnF,IAAL,KAAc,KAAd,IAAuBiF,oBAAoB,CAAC1E,OAArB,KAAiC4E,IAAI,CAAC5E,OAA7D,IAAwE0E,oBAAoB,CAAC3E,OAArB,KAAiC6E,IAAI,CAAC7E,OAA9G,IAChC;AACA2E,EAAAA,oBAAoB,CAAC3E,OAArB,KAAiC6E,IAAI,CAAC7E,OAFlC,CAAJ,EAEgD;AAC9C,WAAO2E,oBAAP;AACD;;AACD,SAAOtF,SAAP;AACD,CAPiD,CAAlD;AAQA,IAAIyF,uBAAuB,GAAGjI,cAAc,CAAC,CAAC8C,oBAAD,EAAuBnB,eAAvB,CAAD,EAA0C0F,kBAA1C,CAA5C;AACA,OAAO,IAAIa,mBAAmB,GAAGlI,cAAc,CAAC,CAACY,yBAAD,EAA4BiG,oBAA5B,EAAkDC,oBAAlD,EAAwEC,gBAAxE,EAA0FC,gBAA1F,EAA4GC,iBAA5G,EAA+HvG,iBAA/H,EAAkJC,yCAAlJ,EAA6LoE,kBAA7L,EAAiNkD,uBAAjN,EAA0OL,6BAA1O,EAAyQ5F,SAAzQ,CAAD,EAAsR,CAAC6D,MAAD,EAASsC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+C3B,GAA/C,EAAoDjE,MAApD,EAA4D6F,KAA5D,EAAmEpD,QAAnE,EAA6EqC,WAA7E,EAA0F3F,WAA1F,EAAuGK,KAAvG,KAAiH;AACpb,MAAI;AACFsG,IAAAA,SADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA;AAHE,MAIAH,KAJJ;;AAKA,MAAI1G,WAAW,IAAI,IAAf,IAAuB8E,GAAG,IAAI,IAA9B,IAAsCjE,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,UAA5E,IAA0FyF,KAAK,IAAI,IAAnG,IAA2GC,KAAK,IAAI,IAApH,IAA4HC,UAAU,IAAI,IAA1I,IAAkJC,UAAU,IAAI,IAAhK,IAAwKnD,QAAQ,IAAI,IAAxL,EAA8L;AAC5L,WAAO3C,SAAP;AACD;;AACD,MAAI;AACFmG,IAAAA;AADE,MAEA9G,WAFJ;AAGA,MAAI+G,aAAJ;;AACA,MAAID,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAAC7J,MAAL,GAAc,CAAlC,EAAqC;AACnC8J,IAAAA,aAAa,GAAGD,IAAhB;AACD,GAFD,MAEO;AACLC,IAAAA,aAAa,GAAGJ,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACK,KAAV,CAAgBJ,cAAhB,EAAgCC,YAAY,GAAG,CAA/C,CAAtE;AACD;;AACD,MAAIE,aAAa,IAAI,IAArB,EAA2B;AACzB,WAAOpG,SAAP;AACD;;AACD,SAAO/B,oBAAoB,CAAC;AAC1BiC,IAAAA,MAD0B;AAE1Bb,IAAAA,WAF0B;AAG1B8E,IAAAA,GAH0B;AAI1BxB,IAAAA,QAJ0B;AAK1BgD,IAAAA,KAL0B;AAM1BC,IAAAA,KAN0B;AAO1BC,IAAAA,UAP0B;AAQ1BC,IAAAA,UAR0B;AAS1Bd,IAAAA,WAT0B;AAU1BoB,IAAAA,aAV0B;AAW1B/C,IAAAA,MAX0B;AAY1B3D,IAAAA;AAZ0B,GAAD,CAA3B;AAcD,CAnC8C,CAAxC","sourcesContent":["function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { createSelector } from 'reselect';\nimport { selectAxisWithScale, selectCartesianAxisSize, selectStackGroups, selectTicksOfGraphicalItem, selectUnfilteredCartesianItems } from './axisSelectors';\nimport { getPercentValue, isNullish } from '../../util/DataUtils';\nimport { getBandSizeOfAxis } from '../../util/ChartUtils';\nimport { computeBarRectangles } from '../../cartesian/Bar';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectChartDataWithIndexesIfNotInPanorama } from './dataSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectBarCategoryGap, selectBarGap, selectRootBarSize, selectRootMaxBarSize } from './rootPropsSelectors';\nimport { isWellBehavedNumber } from '../../util/isWellBehavedNumber';\nvar pickXAxisId = (_state, xAxisId) => xAxisId;\nvar pickYAxisId = (_state, _xAxisId, yAxisId) => yAxisId;\nvar pickIsPanorama = (_state, _xAxisId, _yAxisId, isPanorama) => isPanorama;\nvar pickBarSettings = (_state, _xAxisId, _yAxisId, _isPanorama, barSettings) => barSettings;\nvar pickMaxBarSize = (_state, _xAxisId, _yAxisId, _isPanorama, barSettings) => barSettings.maxBarSize;\nvar pickCells = (_state, _xAxisId, _yAxisId, _isPanorama, _barSettings, cells) => cells;\nvar getBarSize = (globalSize, totalSize, selfSize) => {\n  var barSize = selfSize !== null && selfSize !== void 0 ? selfSize : globalSize;\n  if (isNullish(barSize)) {\n    return undefined;\n  }\n  return getPercentValue(barSize, totalSize, 0);\n};\nexport var selectAllVisibleBars = createSelector([selectChartLayout, selectUnfilteredCartesianItems, pickXAxisId, pickYAxisId, pickIsPanorama], (layout, allItems, xAxisId, yAxisId, isPanorama) => allItems.filter(i => {\n  if (layout === 'horizontal') {\n    return i.xAxisId === xAxisId;\n  }\n  return i.yAxisId === yAxisId;\n}).filter(i => i.isPanorama === isPanorama).filter(i => i.hide === false).filter(i => i.type === 'bar'));\nvar selectBarStackGroups = (state, xAxisId, yAxisId, isPanorama) => {\n  var layout = selectChartLayout(state);\n  if (layout === 'horizontal') {\n    return selectStackGroups(state, 'yAxis', yAxisId, isPanorama);\n  }\n  return selectStackGroups(state, 'xAxis', xAxisId, isPanorama);\n};\nexport var selectBarCartesianAxisSize = (state, xAxisId, yAxisId) => {\n  var layout = selectChartLayout(state);\n  if (layout === 'horizontal') {\n    return selectCartesianAxisSize(state, 'xAxis', xAxisId);\n  }\n  return selectCartesianAxisSize(state, 'yAxis', yAxisId);\n};\n\n/**\n * Some graphical items allow data stacking. The stacks are optional,\n * so all props here are optional too.\n */\n\n/**\n * Some graphical items allow data stacking.\n * This interface is used to represent the items that are stacked\n * because the user has provided the stackId and dataKey properties.\n */\n\nfunction isStacked(graphicalItem) {\n  return graphicalItem.stackId != null && graphicalItem.dataKey != null;\n}\nexport var combineBarSizeList = (allBars, globalSize, totalSize) => {\n  var initialValue = {};\n  var stackedBars = allBars.filter(isStacked);\n  var unstackedBars = allBars.filter(b => b.stackId == null);\n  var groupByStack = stackedBars.reduce((acc, bar) => {\n    if (!acc[bar.stackId]) {\n      acc[bar.stackId] = [];\n    }\n    acc[bar.stackId].push(bar);\n    return acc;\n  }, initialValue);\n  var stackedSizeList = Object.entries(groupByStack).map(_ref => {\n    var [stackId, bars] = _ref;\n    var dataKeys = bars.map(b => b.dataKey);\n    var barSize = getBarSize(globalSize, totalSize, bars[0].barSize);\n    return {\n      stackId,\n      dataKeys,\n      barSize\n    };\n  });\n  var unstackedSizeList = unstackedBars.map(b => {\n    var dataKeys = [b.dataKey].filter(dk => dk != null);\n    var barSize = getBarSize(globalSize, totalSize, b.barSize);\n    return {\n      stackId: undefined,\n      dataKeys,\n      barSize\n    };\n  });\n  return [...stackedSizeList, ...unstackedSizeList];\n};\nexport var selectBarSizeList = createSelector([selectAllVisibleBars, selectRootBarSize, selectBarCartesianAxisSize], combineBarSizeList);\nexport var selectBarBandSize = (state, xAxisId, yAxisId, isPanorama, barSettings) => {\n  var _ref2, _getBandSizeOfAxis;\n  var layout = selectChartLayout(state);\n  var globalMaxBarSize = selectRootMaxBarSize(state);\n  var {\n    maxBarSize: childMaxBarSize\n  } = barSettings;\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n  var axis, ticks;\n  if (layout === 'horizontal') {\n    axis = selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\n  } else {\n    axis = selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\n  }\n  return (_ref2 = (_getBandSizeOfAxis = getBandSizeOfAxis(axis, ticks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref2 !== void 0 ? _ref2 : 0;\n};\nvar selectAxisBandSize = (state, xAxisId, yAxisId, isPanorama) => {\n  var layout = selectChartLayout(state);\n  var axis, ticks;\n  if (layout === 'horizontal') {\n    axis = selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\n  } else {\n    axis = selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\n    ticks = selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\n  }\n  return getBandSizeOfAxis(axis, ticks);\n};\nfunction getBarPositions(barGap, barCategoryGap, bandSize, sizeList, maxBarSize) {\n  var len = sizeList.length;\n  if (len < 1) {\n    return undefined;\n  }\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = [];\n\n  // whether is barSize set by user\n  // Okay but why does it check only for the first element? What if the first element is set but others are not?\n  if (isWellBehavedNumber(sizeList[0].barSize)) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce((res, entry) => res + (entry.barSize || 0), 0);\n    sum += (len - 1) * realBarGap;\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce((res, entry) => {\n      var _entry$barSize;\n      var newPosition = {\n        stackId: entry.stackId,\n        dataKeys: entry.dataKeys,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : (_entry$barSize = entry.barSize) !== null && _entry$barSize !== void 0 ? _entry$barSize : 0\n        }\n      };\n      var newRes = [...res, newPosition];\n      prev = newRes[newRes.length - 1].position;\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n    var size = isWellBehavedNumber(maxBarSize) ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce((res, entry, i) => [...res, {\n      stackId: entry.stackId,\n      dataKeys: entry.dataKeys,\n      position: {\n        offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n        size\n      }\n    }], initialValue);\n  }\n  return result;\n}\nexport var combineAllBarPositions = (sizeList, globalMaxBarSize, barGap, barCategoryGap, barBandSize, bandSize, childMaxBarSize) => {\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n  var allBarPositions = getBarPositions(barGap, barCategoryGap, barBandSize !== bandSize ? barBandSize : bandSize, sizeList, maxBarSize);\n  if (barBandSize !== bandSize && allBarPositions != null) {\n    allBarPositions = allBarPositions.map(pos => _objectSpread(_objectSpread({}, pos), {}, {\n      position: _objectSpread(_objectSpread({}, pos.position), {}, {\n        offset: pos.position.offset - barBandSize / 2\n      })\n    }));\n  }\n  return allBarPositions;\n};\nexport var selectAllBarPositions = createSelector([selectBarSizeList, selectRootMaxBarSize, selectBarGap, selectBarCategoryGap, selectBarBandSize, selectAxisBandSize, pickMaxBarSize], combineAllBarPositions);\nvar selectXAxisWithScale = (state, xAxisId, _yAxisId, isPanorama) => selectAxisWithScale(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisWithScale = (state, _xAxisId, yAxisId, isPanorama) => selectAxisWithScale(state, 'yAxis', yAxisId, isPanorama);\nvar selectXAxisTicks = (state, xAxisId, _yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'xAxis', xAxisId, isPanorama);\nvar selectYAxisTicks = (state, _xAxisId, yAxisId, isPanorama) => selectTicksOfGraphicalItem(state, 'yAxis', yAxisId, isPanorama);\nexport var selectBarPosition = createSelector([selectAllBarPositions, pickBarSettings], (allBarPositions, barSettings) => {\n  if (allBarPositions == null) {\n    return undefined;\n  }\n  var position = allBarPositions.find(p => p.stackId === barSettings.stackId && p.dataKeys.includes(barSettings.dataKey));\n  if (position == null) {\n    return undefined;\n  }\n  return position.position;\n});\nexport var combineStackedData = (stackGroups, barSettings) => {\n  if (!stackGroups || (barSettings === null || barSettings === void 0 ? void 0 : barSettings.dataKey) == null) {\n    return undefined;\n  }\n  var {\n    stackId\n  } = barSettings;\n  if (stackId == null) {\n    return undefined;\n  }\n  var stackGroup = stackGroups[stackId];\n  if (!stackGroup) {\n    return undefined;\n  }\n  var {\n    stackedData\n  } = stackGroup;\n  if (!stackedData) {\n    return undefined;\n  }\n  var stack = stackedData.find(sd => sd.key === barSettings.dataKey);\n  return stack;\n};\nvar selectSynchronisedBarSettings = createSelector([selectUnfilteredCartesianItems, pickBarSettings], (graphicalItems, barSettingsFromProps) => {\n  if (graphicalItems.some(cgis => cgis.type === 'bar' && barSettingsFromProps.dataKey === cgis.dataKey && barSettingsFromProps.stackId === cgis.stackId &&\n  // barSettingsFromProps.data === cgis.data && // bar doesn't support data and one is undefined and another is null and this condition breaks\n  barSettingsFromProps.stackId === cgis.stackId)) {\n    return barSettingsFromProps;\n  }\n  return undefined;\n});\nvar selectStackedDataOfItem = createSelector([selectBarStackGroups, pickBarSettings], combineStackedData);\nexport var selectBarRectangles = createSelector([selectChartOffsetInternal, selectXAxisWithScale, selectYAxisWithScale, selectXAxisTicks, selectYAxisTicks, selectBarPosition, selectChartLayout, selectChartDataWithIndexesIfNotInPanorama, selectAxisBandSize, selectStackedDataOfItem, selectSynchronisedBarSettings, pickCells], (offset, xAxis, yAxis, xAxisTicks, yAxisTicks, pos, layout, _ref3, bandSize, stackedData, barSettings, cells) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref3;\n  if (barSettings == null || pos == null || layout !== 'horizontal' && layout !== 'vertical' || xAxis == null || yAxis == null || xAxisTicks == null || yAxisTicks == null || bandSize == null) {\n    return undefined;\n  }\n  var {\n    data\n  } = barSettings;\n  var displayedData;\n  if (data != null && data.length > 0) {\n    displayedData = data;\n  } else {\n    displayedData = chartData === null || chartData === void 0 ? void 0 : chartData.slice(dataStartIndex, dataEndIndex + 1);\n  }\n  if (displayedData == null) {\n    return undefined;\n  }\n  return computeBarRectangles({\n    layout,\n    barSettings,\n    pos,\n    bandSize,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    stackedData,\n    displayedData,\n    offset,\n    cells\n  });\n});"]},"metadata":{},"sourceType":"module"}