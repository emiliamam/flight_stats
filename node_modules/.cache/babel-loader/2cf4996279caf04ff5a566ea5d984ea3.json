{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nvar initialState = {\n  dots: [],\n  areas: [],\n  lines: []\n};\nexport var referenceElementsSlice = createSlice({\n  name: 'referenceElements',\n  initialState,\n  reducers: {\n    addDot: (state, action) => {\n      state.dots.push(action.payload);\n    },\n    removeDot: (state, action) => {\n      var index = current(state).dots.findIndex(dot => dot === action.payload);\n\n      if (index !== -1) {\n        state.dots.splice(index, 1);\n      }\n    },\n    addArea: (state, action) => {\n      state.areas.push(action.payload);\n    },\n    removeArea: (state, action) => {\n      var index = current(state).areas.findIndex(area => area === action.payload);\n\n      if (index !== -1) {\n        state.areas.splice(index, 1);\n      }\n    },\n    addLine: (state, action) => {\n      state.lines.push(action.payload);\n    },\n    removeLine: (state, action) => {\n      var index = current(state).lines.findIndex(line => line === action.payload);\n\n      if (index !== -1) {\n        state.lines.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  addDot,\n  removeDot,\n  addArea,\n  removeArea,\n  addLine,\n  removeLine\n} = referenceElementsSlice.actions;\nexport var referenceElementsReducer = referenceElementsSlice.reducer;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/referenceElementsSlice.js"],"names":["createSlice","current","initialState","dots","areas","lines","referenceElementsSlice","name","reducers","addDot","state","action","push","payload","removeDot","index","findIndex","dot","splice","addArea","removeArea","area","addLine","removeLine","line","actions","referenceElementsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAnB;AAKA,OAAO,IAAIC,sBAAsB,GAAGN,WAAW,CAAC;AAC9CO,EAAAA,IAAI,EAAE,mBADwC;AAE9CL,EAAAA,YAF8C;AAG9CM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACP,IAAN,CAAWS,IAAX,CAAgBD,MAAM,CAACE,OAAvB;AACD,KAHO;AAIRC,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5B,UAAII,KAAK,GAAGd,OAAO,CAACS,KAAD,CAAP,CAAeP,IAAf,CAAoBa,SAApB,CAA8BC,GAAG,IAAIA,GAAG,KAAKN,MAAM,CAACE,OAApD,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBL,QAAAA,KAAK,CAACP,IAAN,CAAWe,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;AACD;AACF,KATO;AAURI,IAAAA,OAAO,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACN,KAAN,CAAYQ,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACD,KAZO;AAaRO,IAAAA,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAII,KAAK,GAAGd,OAAO,CAACS,KAAD,CAAP,CAAeN,KAAf,CAAqBY,SAArB,CAA+BK,IAAI,IAAIA,IAAI,KAAKV,MAAM,CAACE,OAAvD,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBL,QAAAA,KAAK,CAACN,KAAN,CAAYc,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B;AACD;AACF,KAlBO;AAmBRO,IAAAA,OAAO,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;AACD,KArBO;AAsBRU,IAAAA,UAAU,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAII,KAAK,GAAGd,OAAO,CAACS,KAAD,CAAP,CAAeL,KAAf,CAAqBW,SAArB,CAA+BQ,IAAI,IAAIA,IAAI,KAAKb,MAAM,CAACE,OAAvD,CAAZ;;AACA,UAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBL,QAAAA,KAAK,CAACL,KAAN,CAAYa,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B;AACD;AACF;AA3BO;AAHoC,CAAD,CAAxC;AAiCP,OAAO,IAAI;AACTN,EAAAA,MADS;AAETK,EAAAA,SAFS;AAGTK,EAAAA,OAHS;AAITC,EAAAA,UAJS;AAKTE,EAAAA,OALS;AAMTC,EAAAA;AANS,IAOPjB,sBAAsB,CAACmB,OAPpB;AAQP,OAAO,IAAIC,wBAAwB,GAAGpB,sBAAsB,CAACqB,OAAtD","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\nvar initialState = {\n  dots: [],\n  areas: [],\n  lines: []\n};\nexport var referenceElementsSlice = createSlice({\n  name: 'referenceElements',\n  initialState,\n  reducers: {\n    addDot: (state, action) => {\n      state.dots.push(action.payload);\n    },\n    removeDot: (state, action) => {\n      var index = current(state).dots.findIndex(dot => dot === action.payload);\n      if (index !== -1) {\n        state.dots.splice(index, 1);\n      }\n    },\n    addArea: (state, action) => {\n      state.areas.push(action.payload);\n    },\n    removeArea: (state, action) => {\n      var index = current(state).areas.findIndex(area => area === action.payload);\n      if (index !== -1) {\n        state.areas.splice(index, 1);\n      }\n    },\n    addLine: (state, action) => {\n      state.lines.push(action.payload);\n    },\n    removeLine: (state, action) => {\n      var index = current(state).lines.findIndex(line => line === action.payload);\n      if (index !== -1) {\n        state.lines.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  addDot,\n  removeDot,\n  addArea,\n  removeArea,\n  addLine,\n  removeLine\n} = referenceElementsSlice.actions;\nexport var referenceElementsReducer = referenceElementsSlice.reducer;"]},"metadata":{},"sourceType":"module"}