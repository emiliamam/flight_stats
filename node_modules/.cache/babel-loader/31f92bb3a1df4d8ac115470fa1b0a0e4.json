{"ast":null,"code":"var _jsxFileName = \"/Users/emiliamamedova/charts/flightStats/src/components/Cards/PunctualityDashboard.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, CartesianGrid } from \"recharts\";\n\nconst getColor = key => {\n  switch (key) {\n    case \"green\":\n      return \"#34c38f\";\n\n    case \"yellow\":\n      return \"#f1b44c\";\n\n    case \"red\":\n      return \"#f46a6a\";\n\n    case \"blue\":\n      return \"#556ee6\";\n\n    default:\n      return \"#ccc\";\n  }\n};\n\nconst PunctualityDashboard = () => {\n  var _topAirlines$;\n\n  const [airports, setAirports] = useState([]);\n  const [selectedAirport, setSelectedAirport] = useState(null);\n  const [airportStats, setAirportStats] = useState(null);\n  const [topAirlines, setTopAirlines] = useState([]);\n  const [airlineDelayStats, setAirlineDelayStats] = useState([]);\n  const [flights, setFlights] = useState([]);\n  const [delayTimeline, setDelayTimeline] = useState([]);\n  const [loading, setLoading] = useState(false); // Загрузка списка аэропортов для селектора\n\n  useEffect(() => {\n    axios.get(\"/airports\").then(({\n      data\n    }) => {\n      setAirports(data);\n      if (data.length > 0) setSelectedAirport(data[0].iata_code);\n    }).catch(e => console.error(\"Ошибка загрузки аэропортов\", e));\n  }, []); // При смене аэропорта грузим все данные\n\n  useEffect(() => {\n    if (!selectedAirport) return;\n    setLoading(true);\n\n    const fetchAll = async () => {\n      try {\n        // 1. Статистика аэропорта\n        const airportStatsPromise = axios.get(`/airports/${selectedAirport}/stats`); // 2. Топ 3 авиакомпании\n\n        const topAirlinesPromise = axios.get(\"/airlines/top\", {\n          params: {\n            limit: 3\n          }\n        }); // 3. Рейсы за сегодня для графика и подсчетов\n\n        const today = new Date().toISOString().slice(0, 10);\n        const flightsPromise = axios.get(\"/flights\", {\n          params: {\n            departure_airport: selectedAirport,\n            date_from: today,\n            date_to: today,\n            limit: 500\n          }\n        });\n        const [airportStatsResp, topAirlinesResp, flightsResp] = await Promise.all([airportStatsPromise, topAirlinesPromise, flightsPromise]);\n        setAirportStats(airportStatsResp.data);\n        setTopAirlines(topAirlinesResp.data);\n        setFlights(flightsResp.data); // 4. Статистика задержек по первой авиакомпании из топ-3 (если есть)\n\n        if (topAirlinesResp.data.length > 0) {\n          const firstAirline = topAirlinesResp.data[0].iata_code;\n          const airlineDelayStatsResp = await axios.get(`/airlines/${firstAirline}/delay-stats`);\n          setAirlineDelayStats(airlineDelayStatsResp.data);\n        } else {\n          setAirlineDelayStats([]);\n        } // 5. Сформируем timeline для графика — подсчёт onTime, delayed, canceled по часам\n\n\n        const timeline = Array.from({\n          length: 24\n        }).map((_, i) => {\n          const hourStr = `${i.toString().padStart(2, \"0\")}:00`;\n          const onTime = flightsResp.data.filter(f => f.plan_departure && new Date(f.plan_departure).getHours() === i && f.delay_category === \"on-time\").length;\n          const delayed = flightsResp.data.filter(f => f.plan_departure && new Date(f.plan_departure).getHours() === i && (f.delay_category === \"minor-delay\" || f.delay_category === \"major-delay\")).length;\n          const canceled = flightsResp.data.filter(f => f.plan_departure && new Date(f.plan_departure).getHours() === i && f.delay_category === \"canceled\").length;\n          return {\n            time: hourStr,\n            onTime,\n            delayed,\n            canceled\n          };\n        });\n        setDelayTimeline(timeline);\n      } catch (error) {\n        console.error(\"Ошибка загрузки данных:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAll();\n  }, [selectedAirport]); // Подсчёт summary из flights\n\n  const summaryData = [{\n    label: \"Вылетели вовремя\",\n    color: \"green\",\n    value: flights.filter(f => f.delay_category === \"on-time\").length\n  }, {\n    label: \"С задержкой > 15 м\",\n    color: \"yellow\",\n    value: flights.filter(f => f.delay_category === \"minor-delay\" || f.delay_category === \"major-delay\").length\n  }, {\n    label: \"Отменены\",\n    color: \"red\",\n    value: flights.filter(f => f.delay_category === \"canceled\").length\n  }, {\n    label: \"Рейсов в воздухе сейчас\",\n    color: \"blue\",\n    value: flights.filter(f => f.fact_departure && !f.fact_arrival).length\n  }];\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 1000,\n      margin: \"20px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u0438\\u0442\\u0443\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u0446\\u0435\\u043D\\u0442\\u0440 \\u043F\\u0443\\u043D\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"airport-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u044D\\u0440\\u043E\\u043F\\u043E\\u0440\\u0442: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"airport-select\",\n    value: selectedAirport || \"\",\n    onChange: e => setSelectedAirport(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, airports.map(({\n    iata_code,\n    airport_name\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    key: iata_code,\n    value: iata_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, airport_name, \" (\", iata_code, \")\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: 20,\n      marginBottom: 30,\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, summaryData.map(({\n    label,\n    value,\n    color\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: label,\n    style: {\n      flex: \"1 1 200px\",\n      backgroundColor: getColor(color),\n      color: \"white\",\n      padding: \"15px 20px\",\n      borderRadius: 12,\n      boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 18,\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 24,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, value, \" \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432\")))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, \"\\u0414\\u0438\\u043D\\u0430\\u043C\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u0435\\u043A \\u0437\\u0430 \\u0434\\u0435\\u043D\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 300,\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: delayTimeline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    allowDecimals: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"onTime\",\n    stroke: getColor(\"green\"),\n    name: \"\\u0412\\u043E\\u0432\\u0440\\u0435\\u043C\\u044F\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"delayed\",\n    stroke: getColor(\"yellow\"),\n    name: \"\\u0421 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u043A\\u043E\\u0439\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"canceled\",\n    stroke: getColor(\"red\"),\n    name: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u044B\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \"\\u0422\\u043E\\u043F-3 \\u0430\\u0432\\u0438\\u0430\\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438 \\u043F\\u043E \\u0440\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\\u0443 \\u0432\\u044B\\u043B\\u0435\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"\\u041A\\u043E\\u0434\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u0432\\u044B\\u043B\\u0435\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u043F\\u0440\\u0438\\u043B\\u0451\\u0442\\u0430\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, topAirlines.map(({\n    iata_code,\n    airline_name,\n    rating_departure,\n    rating_arrival\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: iata_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, iata_code), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, airline_name), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, rating_departure.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, rating_arrival.toFixed(2)))))), airlineDelayStats.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u0435\\u043A \\u043F\\u043E \\u0430\\u0432\\u0438\\u0430\\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438 \", (_topAirlines$ = topAirlines[0]) === null || _topAirlines$ === void 0 ? void 0 : _topAirlines$.iata_code), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      borderBottom: \"2px solid #ddd\",\n      padding: 8,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u044F\\u044F \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u043A\\u0430 (\\u0441\\u0435\\u043A)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, airlineDelayStats.map(({\n    delay_category,\n    count,\n    avg_delay_seconds\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: delay_category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, delay_category), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, count), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      padding: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, avg_delay_seconds)))))), airportStats && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0432\\u043E\\u0434\\u043A\\u0430 \\u0430\\u044D\\u0440\\u043E\\u043F\\u043E\\u0440\\u0442\\u0430 \", selectedAirport), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u044B\\u043B\\u0435\\u0442\\u043E\\u0432: \", airportStats.departures), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u0440\\u0438\\u043B\\u0451\\u0442\\u043E\\u0432: \", airportStats.arrivals), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0438\\u0445 \\u0432\\u044B\\u043B\\u0435\\u0442\\u043E\\u0432: \", airportStats.missing_departures), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0438\\u0445 \\u043F\\u0440\\u0438\\u043B\\u0451\\u0442\\u043E\\u0432: \", airportStats.missing_arrivals), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439 \\u043E \\u0445\\u0430\\u0440\\u0430\\u043A\\u0442\\u0435\\u0440\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\\u0445 \\u0440\\u0435\\u0439\\u0441\\u043E\\u0432: \", airportStats.features_recorded))));\n};\n\nexport default PunctualityDashboard;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/src/components/Cards/PunctualityDashboard.jsx"],"names":["React","useState","useEffect","axios","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","CartesianGrid","getColor","key","PunctualityDashboard","airports","setAirports","selectedAirport","setSelectedAirport","airportStats","setAirportStats","topAirlines","setTopAirlines","airlineDelayStats","setAirlineDelayStats","flights","setFlights","delayTimeline","setDelayTimeline","loading","setLoading","get","then","data","length","iata_code","catch","e","console","error","fetchAll","airportStatsPromise","topAirlinesPromise","params","limit","today","Date","toISOString","slice","flightsPromise","departure_airport","date_from","date_to","airportStatsResp","topAirlinesResp","flightsResp","Promise","all","firstAirline","airlineDelayStatsResp","timeline","Array","from","map","_","i","hourStr","toString","padStart","onTime","filter","f","plan_departure","getHours","delay_category","delayed","canceled","time","summaryData","label","color","value","fact_departure","fact_arrival","maxWidth","margin","fontFamily","marginBottom","target","airport_name","display","gap","flexWrap","flex","backgroundColor","padding","borderRadius","boxShadow","flexDirection","alignItems","fontSize","fontWeight","width","height","borderCollapse","borderBottom","textAlign","airline_name","rating_departure","rating_arrival","toFixed","marginTop","count","avg_delay_seconds","departures","arrivals","missing_departures","missing_arrivals","features_recorded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from \"recharts\";\n\nconst getColor = (key) => {\n  switch (key) {\n    case \"green\":\n      return \"#34c38f\";\n    case \"yellow\":\n      return \"#f1b44c\";\n    case \"red\":\n      return \"#f46a6a\";\n    case \"blue\":\n      return \"#556ee6\";\n    default:\n      return \"#ccc\";\n  }\n};\n\nconst PunctualityDashboard = () => {\n  const [airports, setAirports] = useState([]);\n  const [selectedAirport, setSelectedAirport] = useState(null);\n\n  const [airportStats, setAirportStats] = useState(null);\n  const [topAirlines, setTopAirlines] = useState([]);\n  const [airlineDelayStats, setAirlineDelayStats] = useState([]);\n  const [flights, setFlights] = useState([]);\n\n  const [delayTimeline, setDelayTimeline] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Загрузка списка аэропортов для селектора\n  useEffect(() => {\n    axios\n      .get(\"/airports\")\n      .then(({ data }) => {\n        setAirports(data);\n        if (data.length > 0) setSelectedAirport(data[0].iata_code);\n      })\n      .catch((e) => console.error(\"Ошибка загрузки аэропортов\", e));\n  }, []);\n\n  // При смене аэропорта грузим все данные\n  useEffect(() => {\n    if (!selectedAirport) return;\n\n    setLoading(true);\n\n    const fetchAll = async () => {\n      try {\n        // 1. Статистика аэропорта\n        const airportStatsPromise = axios.get(`/airports/${selectedAirport}/stats`);\n\n        // 2. Топ 3 авиакомпании\n        const topAirlinesPromise = axios.get(\"/airlines/top\", { params: { limit: 3 } });\n\n        // 3. Рейсы за сегодня для графика и подсчетов\n        const today = new Date().toISOString().slice(0, 10);\n        const flightsPromise = axios.get(\"/flights\", {\n          params: {\n            departure_airport: selectedAirport,\n            date_from: today,\n            date_to: today,\n            limit: 500,\n          },\n        });\n\n        const [airportStatsResp, topAirlinesResp, flightsResp] = await Promise.all([\n          airportStatsPromise,\n          topAirlinesPromise,\n          flightsPromise,\n        ]);\n\n        setAirportStats(airportStatsResp.data);\n        setTopAirlines(topAirlinesResp.data);\n        setFlights(flightsResp.data);\n\n        // 4. Статистика задержек по первой авиакомпании из топ-3 (если есть)\n        if (topAirlinesResp.data.length > 0) {\n          const firstAirline = topAirlinesResp.data[0].iata_code;\n          const airlineDelayStatsResp = await axios.get(`/airlines/${firstAirline}/delay-stats`);\n          setAirlineDelayStats(airlineDelayStatsResp.data);\n        } else {\n          setAirlineDelayStats([]);\n        }\n\n        // 5. Сформируем timeline для графика — подсчёт onTime, delayed, canceled по часам\n        const timeline = Array.from({ length: 24 }).map((_, i) => {\n          const hourStr = `${i.toString().padStart(2, \"0\")}:00`;\n\n          const onTime = flightsResp.data.filter(\n            (f) =>\n              f.plan_departure &&\n              new Date(f.plan_departure).getHours() === i &&\n              f.delay_category === \"on-time\"\n          ).length;\n\n          const delayed = flightsResp.data.filter(\n            (f) =>\n              f.plan_departure &&\n              new Date(f.plan_departure).getHours() === i &&\n              (f.delay_category === \"minor-delay\" || f.delay_category === \"major-delay\")\n          ).length;\n\n          const canceled = flightsResp.data.filter(\n            (f) =>\n              f.plan_departure &&\n              new Date(f.plan_departure).getHours() === i &&\n              f.delay_category === \"canceled\"\n          ).length;\n\n          return { time: hourStr, onTime, delayed, canceled };\n        });\n\n        setDelayTimeline(timeline);\n      } catch (error) {\n        console.error(\"Ошибка загрузки данных:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAll();\n  }, [selectedAirport]);\n\n  // Подсчёт summary из flights\n  const summaryData = [\n    {\n      label: \"Вылетели вовремя\",\n      color: \"green\",\n      value: flights.filter((f) => f.delay_category === \"on-time\").length,\n    },\n    {\n      label: \"С задержкой > 15 м\",\n      color: \"yellow\",\n      value: flights.filter(\n        (f) => f.delay_category === \"minor-delay\" || f.delay_category === \"major-delay\"\n      ).length,\n    },\n    {\n      label: \"Отменены\",\n      color: \"red\",\n      value: flights.filter((f) => f.delay_category === \"canceled\").length,\n    },\n    {\n      label: \"Рейсов в воздухе сейчас\",\n      color: \"blue\",\n      value: flights.filter((f) => f.fact_departure && !f.fact_arrival).length,\n    },\n  ];\n\n  if (loading) return <div>Загрузка данных...</div>;\n\n  return (\n    <div style={{ maxWidth: 1000, margin: \"20px auto\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>Ситуационный центр пунктуальности</h2>\n\n      <div style={{ marginBottom: 20 }}>\n        <label htmlFor=\"airport-select\">Выберите аэропорт: </label>\n        <select\n          id=\"airport-select\"\n          value={selectedAirport || \"\"}\n          onChange={(e) => setSelectedAirport(e.target.value)}\n        >\n          {airports.map(({ iata_code, airport_name }) => (\n            <option key={iata_code} value={iata_code}>\n              {airport_name} ({iata_code})\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div style={{ display: \"flex\", gap: 20, marginBottom: 30, flexWrap: \"wrap\" }}>\n        {summaryData.map(({ label, value, color }) => (\n          <div\n            key={label}\n            style={{\n              flex: \"1 1 200px\",\n              backgroundColor: getColor(color),\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: 12,\n              boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ fontSize: 18, marginBottom: 6 }}>{label}</div>\n            <div style={{ fontSize: 24, fontWeight: \"bold\" }}>{value} рейсов</div>\n          </div>\n        ))}\n      </div>\n\n      <h3>Динамика задержек за день</h3>\n      <div style={{ width: \"100%\", height: 300, marginBottom: 40 }}>\n        <ResponsiveContainer>\n          <LineChart data={delayTimeline}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis allowDecimals={false} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"onTime\"\n              stroke={getColor(\"green\")}\n              name=\"Вовремя\"\n              strokeWidth={3}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"delayed\"\n              stroke={getColor(\"yellow\")}\n              name=\"С задержкой\"\n              strokeWidth={3}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"canceled\"\n              stroke={getColor(\"red\")}\n              name=\"Отменены\"\n              strokeWidth={3}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      <h3>Топ-3 авиакомпании по рейтингу вылета</h3>\n      <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n        <thead>\n          <tr>\n            <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>Код</th>\n            <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>Название</th>\n            <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>Рейтинг вылета</th>\n            <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>Рейтинг прилёта</th>\n          </tr>\n        </thead>\n        <tbody>\n          {topAirlines.map(({ iata_code, airline_name, rating_departure, rating_arrival }) => (\n            <tr key={iata_code}>\n              <td style={{ padding: 8 }}>{iata_code}</td>\n              <td style={{ padding: 8 }}>{airline_name}</td>\n              <td style={{ padding: 8 }}>{rating_departure.toFixed(2)}</td>\n              <td style={{ padding: 8 }}>{rating_arrival.toFixed(2)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {airlineDelayStats.length > 0 && (\n        <>\n          <h3 style={{ marginTop: 40 }}>Статистика задержек по авиакомпании {topAirlines[0]?.iata_code}</h3>\n          <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n            <thead>\n              <tr>\n                <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>\n                  Категория задержки\n                </th>\n                <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>Количество рейсов</th>\n                <th style={{ borderBottom: \"2px solid #ddd\", padding: 8, textAlign: \"left\" }}>\n                  Средняя задержка (сек)\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {airlineDelayStats.map(({ delay_category, count, avg_delay_seconds }) => (\n                <tr key={delay_category}>\n                  <td style={{ padding: 8 }}>{delay_category}</td>\n                  <td style={{ padding: 8 }}>{count}</td>\n                  <td style={{ padding: 8 }}>{avg_delay_seconds}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n\n      {airportStats && (\n        <>\n          <h3 style={{ marginTop: 40 }}>Сводка аэропорта {selectedAirport}</h3>\n          <ul>\n            <li>Вылетов: {airportStats.departures}</li>\n            <li>Прилётов: {airportStats.arrivals}</li>\n            <li>Отсутствующих вылетов: {airportStats.missing_departures}</li>\n            <li>Отсутствующих прилётов: {airportStats.missing_arrivals}</li>\n            <li>Записей о характеристиках рейсов: {airportStats.features_recorded}</li>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PunctualityDashboard;\n"]},"metadata":{},"sourceType":"module"}