{"ast":null,"code":"var _jsxFileName = \"/Users/emiliamamedova/charts/project_corona_tracker/src/components/MapComponent/MapComponent.jsx\";\nimport React, { useState, useMemo } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'; // Функция для генерации цветной иконки в зависимости от процента пунктуальности\n\nconst getMarkerIcon = punctuality => {\n  // Цвет от красного (0%) к зелёному (100%)\n  const hue = punctuality / 100 * 120; // 0 = red, 120 = green\n\n  const color = `hsl(${hue}, 75%, 50%)`; // Создаем SVG иконку с цветом\n\n  const svgIcon = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"41\" viewBox=\"0 0 25 41\">\n      <path fill=\"${color}\" stroke=\"black\" stroke-width=\"1\" d=\"M12.5 0C7 0 2.5 4.5 2.5 10c0 7.5 10 31 10 31s10-23.5 10-31c0-5.5-4.5-10-10-10z\"/>\n      <circle fill=\"white\" cx=\"12.5\" cy=\"10\" r=\"5\"/>\n      <circle fill=\"${color}\" cx=\"12.5\" cy=\"10\" r=\"3\"/>\n    </svg>\n  `;\n  return new L.DivIcon({\n    html: svgIcon,\n    className: '',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [0, -41]\n  });\n};\n\nconst MapComponent = ({\n  airports = []\n}) => {\n  const [minPunctuality, setMinPunctuality] = useState(0); // Фильтруем аэропорты по минимальной пунктуальности\n\n  const filteredAirports = useMemo(() => {\n    return airports.filter(airport => typeof airport['Пунктуальность'] === 'number' && airport['Пунктуальность'] >= minPunctuality && airport['Широта'] != null && airport['Долгота'] != null);\n  }, [airports, minPunctuality]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u043F\\u0443\\u043D\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", minPunctuality, \"%\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: 100,\n    value: minPunctuality,\n    onChange: e => setMinPunctuality(Number(e.target.value)),\n    style: {\n      width: 300,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(MapContainer, {\n    center: [60, 100],\n    zoom: 3,\n    scrollWheelZoom: true,\n    style: {\n      height: '900px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), filteredAirports.map((airport, i) => {\n    const lat = airport['Широта'];\n    const lng = airport['Долгота'];\n    const punctuality = airport['Пунктуальность'];\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: i,\n      position: [lat, lng],\n      icon: getMarkerIcon(punctuality),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, airport['Название аэропорта']), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), \"IATA: \", airport['IATA код'], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), \"\\u0412\\u044B\\u043B\\u0435\\u0442\\u043E\\u0432: \", airport['Кол-во вылетов'], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), \"\\u041F\\u0440\\u0438\\u043B\\u0435\\u0442\\u043E\\u0432: \", airport['Кол-во прилетов'], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), \"\\u041F\\u0443\\u043D\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", punctuality, \"%\"));\n  })));\n};\n\nexport default MapComponent;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/src/components/MapComponent/MapComponent.jsx"],"names":["React","useState","useMemo","MapContainer","TileLayer","Marker","Popup","L","iconShadow","getMarkerIcon","punctuality","hue","color","svgIcon","DivIcon","html","className","iconSize","iconAnchor","popupAnchor","MapComponent","airports","minPunctuality","setMinPunctuality","filteredAirports","filter","airport","marginBottom","textAlign","e","Number","target","value","width","marginTop","height","map","i","lat","lng"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\n// Функция для генерации цветной иконки в зависимости от процента пунктуальности\nconst getMarkerIcon = (punctuality) => {\n  // Цвет от красного (0%) к зелёному (100%)\n  const hue = (punctuality / 100) * 120; // 0 = red, 120 = green\n  const color = `hsl(${hue}, 75%, 50%)`;\n\n  // Создаем SVG иконку с цветом\n  const svgIcon = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"41\" viewBox=\"0 0 25 41\">\n      <path fill=\"${color}\" stroke=\"black\" stroke-width=\"1\" d=\"M12.5 0C7 0 2.5 4.5 2.5 10c0 7.5 10 31 10 31s10-23.5 10-31c0-5.5-4.5-10-10-10z\"/>\n      <circle fill=\"white\" cx=\"12.5\" cy=\"10\" r=\"5\"/>\n      <circle fill=\"${color}\" cx=\"12.5\" cy=\"10\" r=\"3\"/>\n    </svg>\n  `;\n\n  return new L.DivIcon({\n    html: svgIcon,\n    className: '',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [0, -41],\n  });\n};\n\nconst MapComponent = ({ airports = [] }) => {\n  const [minPunctuality, setMinPunctuality] = useState(0);\n\n  // Фильтруем аэропорты по минимальной пунктуальности\n  const filteredAirports = useMemo(() => {\n    return airports.filter(\n      (airport) =>\n        typeof airport['Пунктуальность'] === 'number' &&\n        airport['Пунктуальность'] >= minPunctuality &&\n        airport['Широта'] != null &&\n        airport['Долгота'] != null\n    );\n  }, [airports, minPunctuality]);\n\n  return (\n    <>\n      <div style={{ marginBottom: 20, textAlign: 'center' }}>\n        <label>\n          Минимальная пунктуальность: {minPunctuality}%\n          <br />\n          <input\n            type=\"range\"\n            min={0}\n            max={100}\n            value={minPunctuality}\n            onChange={(e) => setMinPunctuality(Number(e.target.value))}\n            style={{ width: 300, marginTop: 10 }}\n          />\n        </label>\n      </div>\n\n      <MapContainer\n        center={[60, 100]}\n        zoom={3}\n        scrollWheelZoom={true}\n        style={{ height: '900px', width: '100%' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {filteredAirports.map((airport, i) => {\n          const lat = airport['Широта'];\n          const lng = airport['Долгота'];\n          const punctuality = airport['Пунктуальность'];\n\n          return (\n            <Marker\n              key={i}\n              position={[lat, lng]}\n              icon={getMarkerIcon(punctuality)}\n            >\n              <Popup>\n                <b>{airport['Название аэропорта']}</b>\n                <br />\n                IATA: {airport['IATA код']}\n                <br />\n                Вылетов: {airport['Кол-во вылетов']}\n                <br />\n                Прилетов: {airport['Кол-во прилетов']}\n                <br />\n                Пунктуальность: {punctuality}%\n              </Popup>\n            </Marker>\n          );\n        })}\n      </MapContainer>\n    </>\n  );\n};\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}