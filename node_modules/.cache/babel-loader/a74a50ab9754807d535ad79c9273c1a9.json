{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n/**\n * The properties inside this state update independently of each other and quite often.\n * When selecting, never select the whole state because you are going to get\n * unnecessary re-renders. Select only the properties you need.\n *\n * This is why this state type is not exported - don't use it directly.\n */\n\nvar initialState = {\n  settings: {\n    layout: 'horizontal',\n    align: 'center',\n    verticalAlign: 'middle',\n    itemSorter: 'value'\n  },\n  size: {\n    width: 0,\n    height: 0\n  },\n  payload: []\n};\nvar legendSlice = createSlice({\n  name: 'legend',\n  initialState,\n  reducers: {\n    setLegendSize(state, action) {\n      state.size.width = action.payload.width;\n      state.size.height = action.payload.height;\n    },\n\n    setLegendSettings(state, action) {\n      state.settings.align = action.payload.align;\n      state.settings.layout = action.payload.layout;\n      state.settings.verticalAlign = action.payload.verticalAlign;\n      state.settings.itemSorter = action.payload.itemSorter;\n    },\n\n    addLegendPayload(state, action) {\n      state.payload.push(castDraft(action.payload));\n    },\n\n    removeLegendPayload(state, action) {\n      var index = current(state).payload.indexOf(castDraft(action.payload));\n\n      if (index > -1) {\n        state.payload.splice(index, 1);\n      }\n    }\n\n  }\n});\nexport var {\n  setLegendSize,\n  setLegendSettings,\n  addLegendPayload,\n  removeLegendPayload\n} = legendSlice.actions;\nexport var legendReducer = legendSlice.reducer;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/legendSlice.js"],"names":["createSlice","current","castDraft","initialState","settings","layout","align","verticalAlign","itemSorter","size","width","height","payload","legendSlice","name","reducers","setLegendSize","state","action","setLegendSettings","addLegendPayload","push","removeLegendPayload","index","indexOf","splice","actions","legendReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA;;;;;;;;AAQA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,YADA;AAERC,IAAAA,KAAK,EAAE,QAFC;AAGRC,IAAAA,aAAa,EAAE,QAHP;AAIRC,IAAAA,UAAU,EAAE;AAJJ,GADO;AAOjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,CADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAPW;AAWjBC,EAAAA,OAAO,EAAE;AAXQ,CAAnB;AAaA,IAAIC,WAAW,GAAGb,WAAW,CAAC;AAC5Bc,EAAAA,IAAI,EAAE,QADsB;AAE5BX,EAAAA,YAF4B;AAG5BY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3BD,MAAAA,KAAK,CAACR,IAAN,CAAWC,KAAX,GAAmBQ,MAAM,CAACN,OAAP,CAAeF,KAAlC;AACAO,MAAAA,KAAK,CAACR,IAAN,CAAWE,MAAX,GAAoBO,MAAM,CAACN,OAAP,CAAeD,MAAnC;AACD,KAJO;;AAKRQ,IAAAA,iBAAiB,CAACF,KAAD,EAAQC,MAAR,EAAgB;AAC/BD,MAAAA,KAAK,CAACb,QAAN,CAAeE,KAAf,GAAuBY,MAAM,CAACN,OAAP,CAAeN,KAAtC;AACAW,MAAAA,KAAK,CAACb,QAAN,CAAeC,MAAf,GAAwBa,MAAM,CAACN,OAAP,CAAeP,MAAvC;AACAY,MAAAA,KAAK,CAACb,QAAN,CAAeG,aAAf,GAA+BW,MAAM,CAACN,OAAP,CAAeL,aAA9C;AACAU,MAAAA,KAAK,CAACb,QAAN,CAAeI,UAAf,GAA4BU,MAAM,CAACN,OAAP,CAAeJ,UAA3C;AACD,KAVO;;AAWRY,IAAAA,gBAAgB,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACL,OAAN,CAAcS,IAAd,CAAmBnB,SAAS,CAACgB,MAAM,CAACN,OAAR,CAA5B;AACD,KAbO;;AAcRU,IAAAA,mBAAmB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACjC,UAAIK,KAAK,GAAGtB,OAAO,CAACgB,KAAD,CAAP,CAAeL,OAAf,CAAuBY,OAAvB,CAA+BtB,SAAS,CAACgB,MAAM,CAACN,OAAR,CAAxC,CAAZ;;AACA,UAAIW,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdN,QAAAA,KAAK,CAACL,OAAN,CAAca,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD;AACF;;AAnBO;AAHkB,CAAD,CAA7B;AAyBA,OAAO,IAAI;AACTP,EAAAA,aADS;AAETG,EAAAA,iBAFS;AAGTC,EAAAA,gBAHS;AAITE,EAAAA;AAJS,IAKPT,WAAW,CAACa,OALT;AAMP,OAAO,IAAIC,aAAa,GAAGd,WAAW,CAACe,OAAhC","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * The properties inside this state update independently of each other and quite often.\n * When selecting, never select the whole state because you are going to get\n * unnecessary re-renders. Select only the properties you need.\n *\n * This is why this state type is not exported - don't use it directly.\n */\n\nvar initialState = {\n  settings: {\n    layout: 'horizontal',\n    align: 'center',\n    verticalAlign: 'middle',\n    itemSorter: 'value'\n  },\n  size: {\n    width: 0,\n    height: 0\n  },\n  payload: []\n};\nvar legendSlice = createSlice({\n  name: 'legend',\n  initialState,\n  reducers: {\n    setLegendSize(state, action) {\n      state.size.width = action.payload.width;\n      state.size.height = action.payload.height;\n    },\n    setLegendSettings(state, action) {\n      state.settings.align = action.payload.align;\n      state.settings.layout = action.payload.layout;\n      state.settings.verticalAlign = action.payload.verticalAlign;\n      state.settings.itemSorter = action.payload.itemSorter;\n    },\n    addLegendPayload(state, action) {\n      state.payload.push(castDraft(action.payload));\n    },\n    removeLegendPayload(state, action) {\n      var index = current(state).payload.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.payload.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  setLegendSize,\n  setLegendSettings,\n  addLegendPayload,\n  removeLegendPayload\n} = legendSlice.actions;\nexport var legendReducer = legendSlice.reducer;"]},"metadata":{},"sourceType":"module"}