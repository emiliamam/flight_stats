{"ast":null,"code":"var _jsxFileName = \"/Users/emiliamamedova/charts/flightStats/src/components/Cards/PunctualityDashboard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\nimport { FaPlaneDeparture, FaPlaneArrival, FaExclamationTriangle } from \"react-icons/fa\";\nconst COLOR_MAP = {\n  green: \"#34c38f\",\n  yellow: \"#f1b44c\",\n  red: \"#f46a6a\"\n};\n\nfunction getColor(name) {\n  return COLOR_MAP[name] || \"#999\";\n}\n\nconst PunctualityDashboard = ({\n  airportCode = \"SVO\"\n}) => {\n  const [airportStats, setAirportStats] = useState(null);\n  const [delayStats, setDelayStats] = useState([]);\n  const [delayTimeSeries, setDelayTimeSeries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        // 1. Получаем сводку аэропорта\n        const airportResp = await axios.get(`http://localhost:8000/airports/${airportCode}/stats`);\n        setAirportStats(airportResp.data); // 2. Получаем статистику задержек по авиакомпаниям для топ 3 (тут для примера просто по одному iata_code)\n        // Можно было бы запросить топ авиакомпаний и собрать delayStats по ним, но для простоты запросим один\n\n        const delayResp = await axios.get(`http://localhost:8000/airlines/${airportCode}/delay-stats`).catch(() => ({\n          data: []\n        }));\n        setDelayStats(delayResp.data || []); // 3. Симуляция временного ряда задержек за день для графика (заполним фейковыми данными для примера)\n        // Здесь можно дополнить реальным эндпоинтом, если есть.\n\n        const now = new Date();\n        const times = [];\n\n        for (let i = 0; i < 24; i++) {\n          times.push({\n            time: `${i}:00`,\n            onTime: Math.floor(Math.random() * 50 + 50),\n            delayed: Math.floor(Math.random() * 20),\n            canceled: Math.floor(Math.random() * 5)\n          });\n        }\n\n        setDelayTimeSeries(times);\n      } catch (error) {\n        console.error(\"Ошибка загрузки данных\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [airportCode]);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"); // Подготовка данных для карточек\n\n  const summaryData = [{\n    label: \"Вылеты\",\n    value: (airportStats === null || airportStats === void 0 ? void 0 : airportStats.departures) || 0,\n    color: \"green\",\n    icon: /*#__PURE__*/React.createElement(FaPlaneDeparture, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })\n  }, {\n    label: \"Прилёты\",\n    value: (airportStats === null || airportStats === void 0 ? void 0 : airportStats.arrivals) || 0,\n    color: \"green\",\n    icon: /*#__PURE__*/React.createElement(FaPlaneArrival, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })\n  }, {\n    label: \"Отсутствующие вылеты\",\n    value: (airportStats === null || airportStats === void 0 ? void 0 : airportStats.missing_departures) || 0,\n    color: \"red\",\n    icon: /*#__PURE__*/React.createElement(FaExclamationTriangle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })\n  }, {\n    label: \"Отсутствующие прилёты\",\n    value: (airportStats === null || airportStats === void 0 ? void 0 : airportStats.missing_arrivals) || 0,\n    color: \"red\",\n    icon: /*#__PURE__*/React.createElement(FaExclamationTriangle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 1000,\n      margin: \"20px auto\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u0438\\u0442\\u0443\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u0446\\u0435\\u043D\\u0442\\u0440 \\u043F\\u0443\\u043D\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438 \\u2014 \\u0430\\u044D\\u0440\\u043E\\u043F\\u043E\\u0440\\u0442 \", airportCode), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: 20,\n      marginBottom: 30,\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, summaryData.map(({\n    label,\n    value,\n    color,\n    icon\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: label,\n    style: {\n      flex: \"1 1 200px\",\n      backgroundColor: getColor(color),\n      color: \"white\",\n      padding: \"15px 20px\",\n      borderRadius: 12,\n      boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 18,\n      marginBottom: 6,\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, icon, \" \", label), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 24,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, value)))), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: 40,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"\\u0414\\u0438\\u043D\\u0430\\u043C\\u0438\\u043A\\u0430 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u0435\\u043A \\u0437\\u0430 \\u0434\\u0435\\u043D\\u044C\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: delayTimeSeries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"onTime\",\n    stroke: COLOR_MAP.green,\n    name: \"\\u0412\\u043E\\u0432\\u0440\\u0435\\u043C\\u044F\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"delayed\",\n    stroke: COLOR_MAP.yellow,\n    name: \"\\u0421 \\u0437\\u0430\\u0434\\u0435\\u0440\\u0436\\u043A\\u043E\\u0439\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"canceled\",\n    stroke: COLOR_MAP.red,\n    name: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0435\\u043D\\u044B\",\n    strokeWidth: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default PunctualityDashboard;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/src/components/Cards/PunctualityDashboard.jsx"],"names":["React","useEffect","useState","axios","ResponsiveContainer","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","FaPlaneDeparture","FaPlaneArrival","FaExclamationTriangle","COLOR_MAP","green","yellow","red","getColor","name","PunctualityDashboard","airportCode","airportStats","setAirportStats","delayStats","setDelayStats","delayTimeSeries","setDelayTimeSeries","loading","setLoading","fetchData","airportResp","get","data","delayResp","catch","now","Date","times","i","push","time","onTime","Math","floor","random","delayed","canceled","error","console","summaryData","label","value","departures","color","icon","arrivals","missing_departures","missing_arrivals","maxWidth","margin","fontFamily","display","gap","marginBottom","flexWrap","map","flex","backgroundColor","padding","borderRadius","boxShadow","flexDirection","alignItems","fontSize","fontWeight","marginTop","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n} from \"recharts\";\nimport { FaPlaneDeparture, FaPlaneArrival, FaExclamationTriangle } from \"react-icons/fa\";\n\nconst COLOR_MAP = {\n  green: \"#34c38f\",\n  yellow: \"#f1b44c\",\n  red: \"#f46a6a\",\n};\n\nfunction getColor(name) {\n  return COLOR_MAP[name] || \"#999\";\n}\n\nconst PunctualityDashboard = ({ airportCode = \"SVO\" }) => {\n  const [airportStats, setAirportStats] = useState(null);\n  const [delayStats, setDelayStats] = useState([]);\n  const [delayTimeSeries, setDelayTimeSeries] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      try {\n        // 1. Получаем сводку аэропорта\n        const airportResp = await axios.get(`http://localhost:8000/airports/${airportCode}/stats`);\n        setAirportStats(airportResp.data);\n\n        // 2. Получаем статистику задержек по авиакомпаниям для топ 3 (тут для примера просто по одному iata_code)\n        // Можно было бы запросить топ авиакомпаний и собрать delayStats по ним, но для простоты запросим один\n        const delayResp = await axios.get(`http://localhost:8000/airlines/${airportCode}/delay-stats`).catch(() => ({ data: [] }));\n        setDelayStats(delayResp.data || []);\n\n        // 3. Симуляция временного ряда задержек за день для графика (заполним фейковыми данными для примера)\n        // Здесь можно дополнить реальным эндпоинтом, если есть.\n        const now = new Date();\n        const times = [];\n        for (let i = 0; i < 24; i++) {\n          times.push({\n            time: `${i}:00`,\n            onTime: Math.floor(Math.random() * 50 + 50),\n            delayed: Math.floor(Math.random() * 20),\n            canceled: Math.floor(Math.random() * 5),\n          });\n        }\n        setDelayTimeSeries(times);\n      } catch (error) {\n        console.error(\"Ошибка загрузки данных\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [airportCode]);\n\n  if (loading) return <div>Загрузка данных...</div>;\n\n  // Подготовка данных для карточек\n  const summaryData = [\n    {\n      label: \"Вылеты\",\n      value: airportStats?.departures || 0,\n      color: \"green\",\n      icon: <FaPlaneDeparture />,\n    },\n    {\n      label: \"Прилёты\",\n      value: airportStats?.arrivals || 0,\n      color: \"green\",\n      icon: <FaPlaneArrival />,\n    },\n    {\n      label: \"Отсутствующие вылеты\",\n      value: airportStats?.missing_departures || 0,\n      color: \"red\",\n      icon: <FaExclamationTriangle />,\n    },\n    {\n      label: \"Отсутствующие прилёты\",\n      value: airportStats?.missing_arrivals || 0,\n      color: \"red\",\n      icon: <FaExclamationTriangle />,\n    },\n  ];\n\n  return (\n    <div style={{ maxWidth: 1000, margin: \"20px auto\", fontFamily: \"Arial, sans-serif\" }}>\n      <h2>Ситуационный центр пунктуальности — аэропорт {airportCode}</h2>\n\n      <div style={{ display: \"flex\", gap: 20, marginBottom: 30, flexWrap: \"wrap\" }}>\n        {summaryData.map(({ label, value, color, icon }) => (\n          <div\n            key={label}\n            style={{\n              flex: \"1 1 200px\",\n              backgroundColor: getColor(color),\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: 12,\n              boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ fontSize: 18, marginBottom: 6, display: \"flex\", alignItems: \"center\", gap: 8 }}>\n              {icon} {label}\n            </div>\n            <div style={{ fontSize: 24, fontWeight: \"bold\" }}>{value}</div>\n          </div>\n        ))}\n      </div>\n\n      <h3 style={{ marginTop: 40, marginBottom: 10 }}>Динамика задержек за день</h3>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <LineChart data={delayTimeSeries}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"onTime\"\n              stroke={COLOR_MAP.green}\n              name=\"Вовремя\"\n              strokeWidth={3}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"delayed\"\n              stroke={COLOR_MAP.yellow}\n              name=\"С задержкой\"\n              strokeWidth={3}\n            />\n            <Line\n              type=\"monotone\"\n              dataKey=\"canceled\"\n              stroke={COLOR_MAP.red}\n              name=\"Отменены\"\n              strokeWidth={3}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Можем сюда добавить еще графики или таблицы из delayStats или flights по необходимости */}\n\n    </div>\n  );\n};\n\nexport default PunctualityDashboard;\n"]},"metadata":{},"sourceType":"module"}