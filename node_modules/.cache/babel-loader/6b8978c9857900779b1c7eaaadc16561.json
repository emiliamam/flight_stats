{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { selectChartDataAndAlwaysIgnoreIndexes } from './dataSelectors';\nimport { combineAppliedValues, combineAxisDomain, combineAxisDomainWithNiceTicks, combineDisplayedData, combineGraphicalItemsData, combineGraphicalItemsSettings, combineNiceTicks, combineNumericalDomain, itemAxisPredicate, selectBaseAxis, selectDomainDefinition, selectRealScaleType } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { getValueByDataKey } from '../../util/ChartUtils';\nimport { pickAxisType } from './pickAxisType';\nimport { pickAxisId } from './pickAxisId';\nimport { selectStackOffsetType } from './rootPropsSelectors';\nexport var selectUnfilteredPolarItems = state => state.graphicalItems.polarItems;\nvar selectAxisPredicate = createSelector([pickAxisType, pickAxisId], itemAxisPredicate);\nexport var selectPolarItemsSettings = createSelector([selectUnfilteredPolarItems, selectBaseAxis, selectAxisPredicate], combineGraphicalItemsSettings);\nvar selectPolarGraphicalItemsData = createSelector([selectPolarItemsSettings], combineGraphicalItemsData);\nexport var selectPolarDisplayedData = createSelector([selectPolarGraphicalItemsData, selectChartDataAndAlwaysIgnoreIndexes], combineDisplayedData);\nexport var selectPolarAppliedValues = createSelector([selectPolarDisplayedData, selectBaseAxis, selectPolarItemsSettings], combineAppliedValues);\nexport var selectAllPolarAppliedNumericalValues = createSelector([selectPolarDisplayedData, selectBaseAxis, selectPolarItemsSettings], (data, axisSettings, items) => {\n  if (items.length > 0) {\n    return data.flatMap(entry => {\n      return items.flatMap(item => {\n        var _axisSettings$dataKey;\n\n        var valueByDataKey = getValueByDataKey(entry, (_axisSettings$dataKey = axisSettings.dataKey) !== null && _axisSettings$dataKey !== void 0 ? _axisSettings$dataKey : item.dataKey);\n        return {\n          value: valueByDataKey,\n          errorDomain: [] // polar charts do not have error bars\n\n        };\n      });\n    }).filter(Boolean);\n  }\n\n  if ((axisSettings === null || axisSettings === void 0 ? void 0 : axisSettings.dataKey) != null) {\n    return data.map(item => ({\n      value: getValueByDataKey(item, axisSettings.dataKey),\n      errorDomain: []\n    }));\n  }\n\n  return data.map(entry => ({\n    value: entry,\n    errorDomain: []\n  }));\n});\n\nvar unsupportedInPolarChart = () => undefined;\n\nvar selectPolarNumericalDomain = createSelector([selectBaseAxis, selectDomainDefinition, unsupportedInPolarChart, selectAllPolarAppliedNumericalValues, unsupportedInPolarChart], combineNumericalDomain);\nexport var selectPolarAxisDomain = createSelector([selectBaseAxis, selectChartLayout, selectPolarDisplayedData, selectPolarAppliedValues, selectStackOffsetType, pickAxisType, selectPolarNumericalDomain], combineAxisDomain);\nexport var selectPolarNiceTicks = createSelector([selectPolarAxisDomain, selectBaseAxis, selectRealScaleType], combineNiceTicks);\nexport var selectPolarAxisDomainIncludingNiceTicks = createSelector([selectBaseAxis, selectPolarAxisDomain, selectPolarNiceTicks, pickAxisType], combineAxisDomainWithNiceTicks);","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/polarSelectors.js"],"names":["createSelector","selectChartDataAndAlwaysIgnoreIndexes","combineAppliedValues","combineAxisDomain","combineAxisDomainWithNiceTicks","combineDisplayedData","combineGraphicalItemsData","combineGraphicalItemsSettings","combineNiceTicks","combineNumericalDomain","itemAxisPredicate","selectBaseAxis","selectDomainDefinition","selectRealScaleType","selectChartLayout","getValueByDataKey","pickAxisType","pickAxisId","selectStackOffsetType","selectUnfilteredPolarItems","state","graphicalItems","polarItems","selectAxisPredicate","selectPolarItemsSettings","selectPolarGraphicalItemsData","selectPolarDisplayedData","selectPolarAppliedValues","selectAllPolarAppliedNumericalValues","data","axisSettings","items","length","flatMap","entry","item","_axisSettings$dataKey","valueByDataKey","dataKey","value","errorDomain","filter","Boolean","map","unsupportedInPolarChart","undefined","selectPolarNumericalDomain","selectPolarAxisDomain","selectPolarNiceTicks","selectPolarAxisDomainIncludingNiceTicks"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport { selectChartDataAndAlwaysIgnoreIndexes } from './dataSelectors';\nimport { combineAppliedValues, combineAxisDomain, combineAxisDomainWithNiceTicks, combineDisplayedData, combineGraphicalItemsData, combineGraphicalItemsSettings, combineNiceTicks, combineNumericalDomain, itemAxisPredicate, selectBaseAxis, selectDomainDefinition, selectRealScaleType } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { getValueByDataKey } from '../../util/ChartUtils';\nimport { pickAxisType } from './pickAxisType';\nimport { pickAxisId } from './pickAxisId';\nimport { selectStackOffsetType } from './rootPropsSelectors';\nexport var selectUnfilteredPolarItems = state => state.graphicalItems.polarItems;\nvar selectAxisPredicate = createSelector([pickAxisType, pickAxisId], itemAxisPredicate);\nexport var selectPolarItemsSettings = createSelector([selectUnfilteredPolarItems, selectBaseAxis, selectAxisPredicate], combineGraphicalItemsSettings);\nvar selectPolarGraphicalItemsData = createSelector([selectPolarItemsSettings], combineGraphicalItemsData);\nexport var selectPolarDisplayedData = createSelector([selectPolarGraphicalItemsData, selectChartDataAndAlwaysIgnoreIndexes], combineDisplayedData);\nexport var selectPolarAppliedValues = createSelector([selectPolarDisplayedData, selectBaseAxis, selectPolarItemsSettings], combineAppliedValues);\nexport var selectAllPolarAppliedNumericalValues = createSelector([selectPolarDisplayedData, selectBaseAxis, selectPolarItemsSettings], (data, axisSettings, items) => {\n  if (items.length > 0) {\n    return data.flatMap(entry => {\n      return items.flatMap(item => {\n        var _axisSettings$dataKey;\n        var valueByDataKey = getValueByDataKey(entry, (_axisSettings$dataKey = axisSettings.dataKey) !== null && _axisSettings$dataKey !== void 0 ? _axisSettings$dataKey : item.dataKey);\n        return {\n          value: valueByDataKey,\n          errorDomain: [] // polar charts do not have error bars\n        };\n      });\n    }).filter(Boolean);\n  }\n  if ((axisSettings === null || axisSettings === void 0 ? void 0 : axisSettings.dataKey) != null) {\n    return data.map(item => ({\n      value: getValueByDataKey(item, axisSettings.dataKey),\n      errorDomain: []\n    }));\n  }\n  return data.map(entry => ({\n    value: entry,\n    errorDomain: []\n  }));\n});\nvar unsupportedInPolarChart = () => undefined;\nvar selectPolarNumericalDomain = createSelector([selectBaseAxis, selectDomainDefinition, unsupportedInPolarChart, selectAllPolarAppliedNumericalValues, unsupportedInPolarChart], combineNumericalDomain);\nexport var selectPolarAxisDomain = createSelector([selectBaseAxis, selectChartLayout, selectPolarDisplayedData, selectPolarAppliedValues, selectStackOffsetType, pickAxisType, selectPolarNumericalDomain], combineAxisDomain);\nexport var selectPolarNiceTicks = createSelector([selectPolarAxisDomain, selectBaseAxis, selectRealScaleType], combineNiceTicks);\nexport var selectPolarAxisDomainIncludingNiceTicks = createSelector([selectBaseAxis, selectPolarAxisDomain, selectPolarNiceTicks, pickAxisType], combineAxisDomainWithNiceTicks);"]},"metadata":{},"sourceType":"module"}