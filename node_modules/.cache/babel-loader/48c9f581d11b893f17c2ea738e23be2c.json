{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nfunction flatten(arr, depth = 1) {\n  const result = [];\n  const flooredDepth = Math.floor(depth);\n\n  const recursive = (arr, currentDepth) => {\n    for (let i = 0; i < arr.length; i++) {\n      const item = arr[i];\n\n      if (Array.isArray(item) && currentDepth < flooredDepth) {\n        recursive(item, currentDepth + 1);\n      } else {\n        result.push(item);\n      }\n    }\n  };\n\n  recursive(arr, 0);\n  return result;\n}\n\nexports.flatten = flatten;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/es-toolkit/dist/array/flatten.js"],"names":["Object","defineProperty","exports","Symbol","toStringTag","value","flatten","arr","depth","result","flooredDepth","Math","floor","recursive","currentDepth","i","length","item","Array","isArray","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+BC,MAAM,CAACC,WAAtC,EAAmD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnD;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,KAAK,GAAG,CAA9B,EAAiC;AAC7B,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAArB;;AACA,QAAMK,SAAS,GAAG,CAACN,GAAD,EAAMO,YAAN,KAAuB;AACrC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACS,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAME,IAAI,GAAGV,GAAG,CAACQ,CAAD,CAAhB;;AACA,UAAIG,KAAK,CAACC,OAAN,CAAcF,IAAd,KAAuBH,YAAY,GAAGJ,YAA1C,EAAwD;AACpDG,QAAAA,SAAS,CAACI,IAAD,EAAOH,YAAY,GAAG,CAAtB,CAAT;AACH,OAFD,MAGK;AACDL,QAAAA,MAAM,CAACW,IAAP,CAAYH,IAAZ;AACH;AACJ;AACJ,GAVD;;AAWAJ,EAAAA,SAAS,CAACN,GAAD,EAAM,CAAN,CAAT;AACA,SAAOE,MAAP;AACH;;AAEDP,OAAO,CAACI,OAAR,GAAkBA,OAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nfunction flatten(arr, depth = 1) {\n    const result = [];\n    const flooredDepth = Math.floor(depth);\n    const recursive = (arr, currentDepth) => {\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            if (Array.isArray(item) && currentDepth < flooredDepth) {\n                recursive(item, currentDepth + 1);\n            }\n            else {\n                result.push(item);\n            }\n        }\n    };\n    recursive(arr, 0);\n    return result;\n}\n\nexports.flatten = flatten;\n"]},"metadata":{},"sourceType":"script"}