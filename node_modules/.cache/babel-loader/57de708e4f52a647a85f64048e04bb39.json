{"ast":null,"code":"export var ACCURACY = 1e-4;\n\nvar cubicBezierFactor = (c1, c2) => [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\n\nvar evaluatePolynomial = (params, t) => params.map((param, i) => param * t ** i).reduce((pre, curr) => pre + curr);\n\nvar cubicBezier = (c1, c2) => t => {\n  var params = cubicBezierFactor(c1, c2);\n  return evaluatePolynomial(params, t);\n};\n\nvar derivativeCubicBezier = (c1, c2) => t => {\n  var params = cubicBezierFactor(c1, c2);\n  var newParams = [...params.map((param, i) => param * i).slice(1), 0];\n  return evaluatePolynomial(newParams, t);\n}; // calculate cubic-bezier using Newton's method\n\n\nexport var configBezier = function configBezier() {\n  var x1, x2, y1, y2;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        [x1, y1, x2, y2] = [0.0, 0.0, 1.0, 1.0];\n        break;\n\n      case 'ease':\n        [x1, y1, x2, y2] = [0.25, 0.1, 0.25, 1.0];\n        break;\n\n      case 'ease-in':\n        [x1, y1, x2, y2] = [0.42, 0.0, 1.0, 1.0];\n        break;\n\n      case 'ease-out':\n        [x1, y1, x2, y2] = [0.42, 0.0, 0.58, 1.0];\n        break;\n\n      case 'ease-in-out':\n        [x1, y1, x2, y2] = [0.0, 0.0, 0.58, 1.0];\n        break;\n\n      default:\n        {\n          var easing = args[0].split('(');\n\n          if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n            [x1, y1, x2, y2] = easing[1].split(')')[0].split(',').map(x => parseFloat(x));\n          }\n        }\n    }\n  } else if (args.length === 4) {\n    [x1, y1, x2, y2] = args;\n  }\n\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n\n  var rangeValue = value => {\n    if (value > 1) {\n      return 1;\n    }\n\n    if (value < 0) {\n      return 0;\n    }\n\n    return value;\n  };\n\n  var bezier = _t => {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n\n      x = rangeValue(x - evalT / derVal);\n    }\n\n    return curveY(x);\n  };\n\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    stiff = 100,\n    damping = 8,\n    dt = 17\n  } = config;\n\n  var stepper = (currX, destX, currV) => {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n\n    return [newX, newV];\n  };\n\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = easing => {\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n\n      case 'spring':\n        return configSpring();\n\n      default:\n        if (easing.split('(')[0] === 'cubic-bezier') {\n          return configBezier(easing);\n        }\n\n    }\n  }\n\n  if (typeof easing === 'function') {\n    return easing;\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/animation/easing.js"],"names":["ACCURACY","cubicBezierFactor","c1","c2","evaluatePolynomial","params","t","map","param","i","reduce","pre","curr","cubicBezier","derivativeCubicBezier","newParams","slice","configBezier","x1","x2","y1","y2","_len","arguments","length","args","Array","_key","easing","split","x","parseFloat","curveX","curveY","derCurveX","rangeValue","value","bezier","_t","evalT","derVal","Math","abs","isStepper","configSpring","config","undefined","stiff","damping","dt","stepper","currX","destX","currV","FSpring","FDamping","newV","newX","configEasing"],"mappings":"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","sourcesContent":["export var ACCURACY = 1e-4;\nvar cubicBezierFactor = (c1, c2) => [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\nvar evaluatePolynomial = (params, t) => params.map((param, i) => param * t ** i).reduce((pre, curr) => pre + curr);\nvar cubicBezier = (c1, c2) => t => {\n  var params = cubicBezierFactor(c1, c2);\n  return evaluatePolynomial(params, t);\n};\nvar derivativeCubicBezier = (c1, c2) => t => {\n  var params = cubicBezierFactor(c1, c2);\n  var newParams = [...params.map((param, i) => param * i).slice(1), 0];\n  return evaluatePolynomial(newParams, t);\n};\n// calculate cubic-bezier using Newton's method\nexport var configBezier = function configBezier() {\n  var x1, x2, y1, y2;\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        [x1, y1, x2, y2] = [0.0, 0.0, 1.0, 1.0];\n        break;\n      case 'ease':\n        [x1, y1, x2, y2] = [0.25, 0.1, 0.25, 1.0];\n        break;\n      case 'ease-in':\n        [x1, y1, x2, y2] = [0.42, 0.0, 1.0, 1.0];\n        break;\n      case 'ease-out':\n        [x1, y1, x2, y2] = [0.42, 0.0, 0.58, 1.0];\n        break;\n      case 'ease-in-out':\n        [x1, y1, x2, y2] = [0.0, 0.0, 0.58, 1.0];\n        break;\n      default:\n        {\n          var easing = args[0].split('(');\n          if (easing[0] === 'cubic-bezier' && easing[1].split(')')[0].split(',').length === 4) {\n            [x1, y1, x2, y2] = easing[1].split(')')[0].split(',').map(x => parseFloat(x));\n          }\n        }\n    }\n  } else if (args.length === 4) {\n    [x1, y1, x2, y2] = args;\n  }\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n  var rangeValue = value => {\n    if (value > 1) {\n      return 1;\n    }\n    if (value < 0) {\n      return 0;\n    }\n    return value;\n  };\n  var bezier = _t => {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n      x = rangeValue(x - evalT / derVal);\n    }\n    return curveY(x);\n  };\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var {\n    stiff = 100,\n    damping = 8,\n    dt = 17\n  } = config;\n  var stepper = (currX, destX, currV) => {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n    return [newX, newV];\n  };\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = easing => {\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n      case 'spring':\n        return configSpring();\n      default:\n        if (easing.split('(')[0] === 'cubic-bezier') {\n          return configBezier(easing);\n        }\n    }\n  }\n  if (typeof easing === 'function') {\n    return easing;\n  }\n  return null;\n};"]},"metadata":{},"sourceType":"module"}