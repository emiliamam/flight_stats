{"ast":null,"code":"import { createSelector } from 'reselect';\nimport sortBy from 'es-toolkit/compat/sortBy';\nimport { useAppSelector } from '../hooks';\nimport { calculateActiveTickIndex, calculateTooltipPos, getActiveCoordinate, inRange } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectTooltipAxis, selectTooltipAxisTicks, selectTooltipDisplayedData } from './tooltipSelectors';\nimport { selectChartName } from './rootPropsSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nexport var useChartName = () => {\n  return useAppSelector(selectChartName);\n};\n\nvar pickTooltipEventType = (_state, tooltipEventType) => tooltipEventType;\n\nvar pickTrigger = (_state, _tooltipEventType, trigger) => trigger;\n\nvar pickDefaultIndex = (_state, _tooltipEventType, _trigger, defaultIndex) => defaultIndex;\n\nexport var selectOrderedTooltipTicks = createSelector(selectTooltipAxisTicks, ticks => sortBy(ticks, o => o.coordinate));\nexport var selectTooltipInteractionState = createSelector([selectTooltipState, pickTooltipEventType, pickTrigger, pickDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectTooltipDataKey = (state, tooltipEventType, trigger) => {\n  if (tooltipEventType == null) {\n    return undefined;\n  }\n\n  var tooltipState = selectTooltipState(state);\n\n  if (tooltipEventType === 'axis') {\n    if (trigger === 'hover') {\n      return tooltipState.axisInteraction.hover.dataKey;\n    }\n\n    return tooltipState.axisInteraction.click.dataKey;\n  }\n\n  if (trigger === 'hover') {\n    return tooltipState.itemInteraction.hover.dataKey;\n  }\n\n  return tooltipState.itemInteraction.click.dataKey;\n};\nexport var selectTooltipPayloadConfigurations = createSelector([selectTooltipState, pickTooltipEventType, pickTrigger, pickDefaultIndex], combineTooltipPayloadConfigurations);\nexport var selectCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, pickDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveCoordinate = createSelector([selectTooltipInteractionState, selectCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  var _tooltipInteractionSt;\n\n  return (_tooltipInteractionSt = tooltipInteractionState.coordinate) !== null && _tooltipInteractionSt !== void 0 ? _tooltipInteractionSt : defaultIndexCoordinate;\n});\nexport var selectActiveLabel = createSelector(selectTooltipAxisTicks, selectActiveIndex, combineActiveLabel);\nexport var selectTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, pickTooltipEventType], combineTooltipPayload);\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => {\n  return {\n    isActive: tooltipInteractionState.active,\n    activeIndex: tooltipInteractionState.index\n  };\n});\nexport var combineActiveProps = (chartEvent, layout, polarViewBox, tooltipAxisType, tooltipAxisRange, tooltipTicks, orderedTooltipTicks, offset) => {\n  if (!chartEvent || !layout || !tooltipAxisType || !tooltipAxisRange || !tooltipTicks) {\n    return undefined;\n  }\n\n  var rangeObj = inRange(chartEvent.chartX, chartEvent.chartY, layout, polarViewBox, offset);\n\n  if (!rangeObj) {\n    return undefined;\n  }\n\n  var pos = calculateTooltipPos(rangeObj, layout);\n  var activeIndex = calculateActiveTickIndex(pos, orderedTooltipTicks, tooltipTicks, tooltipAxisType, tooltipAxisRange);\n  var activeCoordinate = getActiveCoordinate(layout, tooltipTicks, activeIndex, rangeObj);\n  return {\n    activeIndex: String(activeIndex),\n    activeCoordinate\n  };\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/selectors.js"],"names":["createSelector","sortBy","useAppSelector","calculateActiveTickIndex","calculateTooltipPos","getActiveCoordinate","inRange","selectChartDataWithIndexes","selectTooltipAxis","selectTooltipAxisTicks","selectTooltipDisplayedData","selectChartName","selectChartLayout","selectChartOffsetInternal","selectChartHeight","selectChartWidth","combineActiveLabel","combineTooltipInteractionState","combineActiveTooltipIndex","combineCoordinateForDefaultIndex","combineTooltipPayloadConfigurations","selectTooltipPayloadSearcher","selectTooltipState","combineTooltipPayload","useChartName","pickTooltipEventType","_state","tooltipEventType","pickTrigger","_tooltipEventType","trigger","pickDefaultIndex","_trigger","defaultIndex","selectOrderedTooltipTicks","ticks","o","coordinate","selectTooltipInteractionState","selectActiveIndex","selectTooltipDataKey","state","undefined","tooltipState","axisInteraction","hover","dataKey","click","itemInteraction","selectTooltipPayloadConfigurations","selectCoordinateForDefaultIndex","selectActiveCoordinate","tooltipInteractionState","defaultIndexCoordinate","_tooltipInteractionSt","selectActiveLabel","selectTooltipPayload","selectIsTooltipActive","isActive","active","activeIndex","index","combineActiveProps","chartEvent","layout","polarViewBox","tooltipAxisType","tooltipAxisRange","tooltipTicks","orderedTooltipTicks","offset","rangeObj","chartX","chartY","pos","activeCoordinate","String"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport sortBy from 'es-toolkit/compat/sortBy';\nimport { useAppSelector } from '../hooks';\nimport { calculateActiveTickIndex, calculateTooltipPos, getActiveCoordinate, inRange } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectTooltipAxis, selectTooltipAxisTicks, selectTooltipDisplayedData } from './tooltipSelectors';\nimport { selectChartName } from './rootPropsSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nexport var useChartName = () => {\n  return useAppSelector(selectChartName);\n};\nvar pickTooltipEventType = (_state, tooltipEventType) => tooltipEventType;\nvar pickTrigger = (_state, _tooltipEventType, trigger) => trigger;\nvar pickDefaultIndex = (_state, _tooltipEventType, _trigger, defaultIndex) => defaultIndex;\nexport var selectOrderedTooltipTicks = createSelector(selectTooltipAxisTicks, ticks => sortBy(ticks, o => o.coordinate));\nexport var selectTooltipInteractionState = createSelector([selectTooltipState, pickTooltipEventType, pickTrigger, pickDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectTooltipDataKey = (state, tooltipEventType, trigger) => {\n  if (tooltipEventType == null) {\n    return undefined;\n  }\n  var tooltipState = selectTooltipState(state);\n  if (tooltipEventType === 'axis') {\n    if (trigger === 'hover') {\n      return tooltipState.axisInteraction.hover.dataKey;\n    }\n    return tooltipState.axisInteraction.click.dataKey;\n  }\n  if (trigger === 'hover') {\n    return tooltipState.itemInteraction.hover.dataKey;\n  }\n  return tooltipState.itemInteraction.click.dataKey;\n};\nexport var selectTooltipPayloadConfigurations = createSelector([selectTooltipState, pickTooltipEventType, pickTrigger, pickDefaultIndex], combineTooltipPayloadConfigurations);\nexport var selectCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, pickDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveCoordinate = createSelector([selectTooltipInteractionState, selectCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  var _tooltipInteractionSt;\n  return (_tooltipInteractionSt = tooltipInteractionState.coordinate) !== null && _tooltipInteractionSt !== void 0 ? _tooltipInteractionSt : defaultIndexCoordinate;\n});\nexport var selectActiveLabel = createSelector(selectTooltipAxisTicks, selectActiveIndex, combineActiveLabel);\nexport var selectTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, pickTooltipEventType], combineTooltipPayload);\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => {\n  return {\n    isActive: tooltipInteractionState.active,\n    activeIndex: tooltipInteractionState.index\n  };\n});\nexport var combineActiveProps = (chartEvent, layout, polarViewBox, tooltipAxisType, tooltipAxisRange, tooltipTicks, orderedTooltipTicks, offset) => {\n  if (!chartEvent || !layout || !tooltipAxisType || !tooltipAxisRange || !tooltipTicks) {\n    return undefined;\n  }\n  var rangeObj = inRange(chartEvent.chartX, chartEvent.chartY, layout, polarViewBox, offset);\n  if (!rangeObj) {\n    return undefined;\n  }\n  var pos = calculateTooltipPos(rangeObj, layout);\n  var activeIndex = calculateActiveTickIndex(pos, orderedTooltipTicks, tooltipTicks, tooltipAxisType, tooltipAxisRange);\n  var activeCoordinate = getActiveCoordinate(layout, tooltipTicks, activeIndex, rangeObj);\n  return {\n    activeIndex: String(activeIndex),\n    activeCoordinate\n  };\n};"]},"metadata":{},"sourceType":"module"}