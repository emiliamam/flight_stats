{"ast":null,"code":"var _jsxFileName = \"/Users/emiliamamedova/charts/flightStats/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({\n  handleCountryChange\n}) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('/airports.json');\n        const data = await response.json();\n        setCountries(data);\n        console.log(data, 'data');\n      } catch (error) {\n        console.error('Error loading airports:', error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => handleCountryChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"), countries.map((airport, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: airport.IATA,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, airport.City, \" (\", airport.Airport, \")\"))));\n};\n\nexport default Countries;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","fetchCountries","styles","Countries","handleCountryChange","countries","setCountries","response","fetch","data","json","console","log","error","formControl","e","target","value","map","airport","i","IATA","City","Airport"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AAEA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAJ,QAAAA,YAAY,CAACG,IAAD,CAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,MAAlB;AACD,OALD,CAKE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACE,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD;AACF,KATD;;AAWAZ,IAAAA,cAAc;AACf,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEC,MAAM,CAACY,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAGC,CAAD,IAAOX,mBAAmB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFADF,EAEGZ,SAAS,CAACa,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACb;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAO,CAACE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACG,IADX,QACmBH,OAAO,CAACI,OAD3B,MADD,CAFH,CADA,CADF;AAYD,CA9BD;;AAgCA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await fetch('/airports.json');  \n        const data = await response.json();\n        setCountries(data);\n        console.log(data, 'data')\n      } catch (error) {\n        console.error('Error loading airports:', error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n    <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n      <option value=\"\">Выберите город</option>\n      {countries.map((airport, i) => (\n        <option key={i} value={airport.IATA}>\n          {airport.City} ({airport.Airport})\n        </option>\n      ))}\n    </NativeSelect>\n  </FormControl>\n  );\n};\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}