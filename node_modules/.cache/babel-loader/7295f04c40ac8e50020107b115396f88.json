{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectMargin } from './containerSelectors';\nimport { isNumber } from '../../util/DataUtils';\nexport var selectBrushSettings = state => state.brush;\nexport var selectBrushDimensions = createSelector([selectBrushSettings, selectChartOffsetInternal, selectMargin], (brushSettings, offset, margin) => ({\n  height: brushSettings.height,\n  x: isNumber(brushSettings.x) ? brushSettings.x : offset.left,\n  y: isNumber(brushSettings.y) ? brushSettings.y : offset.top + offset.height + offset.brushBottom - ((margin === null || margin === void 0 ? void 0 : margin.bottom) || 0),\n  width: isNumber(brushSettings.width) ? brushSettings.width : offset.width\n}));","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/brushSelectors.js"],"names":["createSelector","selectChartOffsetInternal","selectMargin","isNumber","selectBrushSettings","state","brush","selectBrushDimensions","brushSettings","offset","margin","height","x","left","y","top","brushBottom","bottom","width"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,IAAIC,mBAAmB,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAAzC;AACP,OAAO,IAAIC,qBAAqB,GAAGP,cAAc,CAAC,CAACI,mBAAD,EAAsBH,yBAAtB,EAAiDC,YAAjD,CAAD,EAAiE,CAACM,aAAD,EAAgBC,MAAhB,EAAwBC,MAAxB,MAAoC;AACpJC,EAAAA,MAAM,EAAEH,aAAa,CAACG,MAD8H;AAEpJC,EAAAA,CAAC,EAAET,QAAQ,CAACK,aAAa,CAACI,CAAf,CAAR,GAA4BJ,aAAa,CAACI,CAA1C,GAA8CH,MAAM,CAACI,IAF4F;AAGpJC,EAAAA,CAAC,EAAEX,QAAQ,CAACK,aAAa,CAACM,CAAf,CAAR,GAA4BN,aAAa,CAACM,CAA1C,GAA8CL,MAAM,CAACM,GAAP,GAAaN,MAAM,CAACE,MAApB,GAA6BF,MAAM,CAACO,WAApC,IAAmD,CAACN,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,MAAxD,KAAmE,CAAtH,CAHmG;AAIpJC,EAAAA,KAAK,EAAEf,QAAQ,CAACK,aAAa,CAACU,KAAf,CAAR,GAAgCV,aAAa,CAACU,KAA9C,GAAsDT,MAAM,CAACS;AAJgF,CAApC,CAAjE,CAA1C","sourcesContent":["import { createSelector } from 'reselect';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { selectMargin } from './containerSelectors';\nimport { isNumber } from '../../util/DataUtils';\nexport var selectBrushSettings = state => state.brush;\nexport var selectBrushDimensions = createSelector([selectBrushSettings, selectChartOffsetInternal, selectMargin], (brushSettings, offset, margin) => ({\n  height: brushSettings.height,\n  x: isNumber(brushSettings.x) ? brushSettings.x : offset.left,\n  y: isNumber(brushSettings.y) ? brushSettings.y : offset.top + offset.height + offset.brushBottom - ((margin === null || margin === void 0 ? void 0 : margin.bottom) || 0),\n  width: isNumber(brushSettings.width) ? brushSettings.width : offset.width\n}));"]},"metadata":{},"sourceType":"module"}