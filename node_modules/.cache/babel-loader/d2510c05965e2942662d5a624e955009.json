{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nconst getSymbols = require('../compat/_internal/getSymbols.js');\n\nconst getTag = require('../compat/_internal/getTag.js');\n\nconst tags = require('../compat/_internal/tags.js');\n\nconst isPrimitive = require('../predicate/isPrimitive.js');\n\nconst isTypedArray = require('../predicate/isTypedArray.js');\n\nfunction cloneDeepWith(obj, cloneValue) {\n  return cloneDeepWithImpl(obj, undefined, obj, new Map(), cloneValue);\n}\n\nfunction cloneDeepWithImpl(valueToClone, keyToClone, objectToClone, stack = new Map(), cloneValue = undefined) {\n  const cloned = cloneValue === null || cloneValue === void 0 ? void 0 : cloneValue(valueToClone, keyToClone, objectToClone, stack);\n\n  if (cloned != null) {\n    return cloned;\n  }\n\n  if (isPrimitive.isPrimitive(valueToClone)) {\n    return valueToClone;\n  }\n\n  if (stack.has(valueToClone)) {\n    return stack.get(valueToClone);\n  }\n\n  if (Array.isArray(valueToClone)) {\n    const result = new Array(valueToClone.length);\n    stack.set(valueToClone, result);\n\n    for (let i = 0; i < valueToClone.length; i++) {\n      result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n    }\n\n    if (Object.hasOwn(valueToClone, 'index')) {\n      result.index = valueToClone.index;\n    }\n\n    if (Object.hasOwn(valueToClone, 'input')) {\n      result.input = valueToClone.input;\n    }\n\n    return result;\n  }\n\n  if (valueToClone instanceof Date) {\n    return new Date(valueToClone.getTime());\n  }\n\n  if (valueToClone instanceof RegExp) {\n    const result = new RegExp(valueToClone.source, valueToClone.flags);\n    result.lastIndex = valueToClone.lastIndex;\n    return result;\n  }\n\n  if (valueToClone instanceof Map) {\n    const result = new Map();\n    stack.set(valueToClone, result);\n\n    for (const [key, value] of valueToClone) {\n      result.set(key, cloneDeepWithImpl(value, key, objectToClone, stack, cloneValue));\n    }\n\n    return result;\n  }\n\n  if (valueToClone instanceof Set) {\n    const result = new Set();\n    stack.set(valueToClone, result);\n\n    for (const value of valueToClone) {\n      result.add(cloneDeepWithImpl(value, undefined, objectToClone, stack, cloneValue));\n    }\n\n    return result;\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(valueToClone)) {\n    return valueToClone.subarray();\n  }\n\n  if (isTypedArray.isTypedArray(valueToClone)) {\n    const result = new (Object.getPrototypeOf(valueToClone).constructor)(valueToClone.length);\n    stack.set(valueToClone, result);\n\n    for (let i = 0; i < valueToClone.length; i++) {\n      result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n    }\n\n    return result;\n  }\n\n  if (valueToClone instanceof ArrayBuffer || typeof SharedArrayBuffer !== 'undefined' && valueToClone instanceof SharedArrayBuffer) {\n    return valueToClone.slice(0);\n  }\n\n  if (valueToClone instanceof DataView) {\n    const result = new DataView(valueToClone.buffer.slice(0), valueToClone.byteOffset, valueToClone.byteLength);\n    stack.set(valueToClone, result);\n    copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n    return result;\n  }\n\n  if (typeof File !== 'undefined' && valueToClone instanceof File) {\n    const result = new File([valueToClone], valueToClone.name, {\n      type: valueToClone.type\n    });\n    stack.set(valueToClone, result);\n    copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n    return result;\n  }\n\n  if (valueToClone instanceof Blob) {\n    const result = new Blob([valueToClone], {\n      type: valueToClone.type\n    });\n    stack.set(valueToClone, result);\n    copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n    return result;\n  }\n\n  if (valueToClone instanceof Error) {\n    const result = new valueToClone.constructor();\n    stack.set(valueToClone, result);\n    result.message = valueToClone.message;\n    result.name = valueToClone.name;\n    result.stack = valueToClone.stack;\n    result.cause = valueToClone.cause;\n    copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n    return result;\n  }\n\n  if (typeof valueToClone === 'object' && isCloneableObject(valueToClone)) {\n    const result = Object.create(Object.getPrototypeOf(valueToClone));\n    stack.set(valueToClone, result);\n    copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n    return result;\n  }\n\n  return valueToClone;\n}\n\nfunction copyProperties(target, source, objectToClone = target, stack, cloneValue) {\n  const keys = [...Object.keys(source), ...getSymbols.getSymbols(source)];\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const descriptor = Object.getOwnPropertyDescriptor(target, key);\n\n    if (descriptor == null || descriptor.writable) {\n      target[key] = cloneDeepWithImpl(source[key], key, objectToClone, stack, cloneValue);\n    }\n  }\n}\n\nfunction isCloneableObject(object) {\n  switch (getTag.getTag(object)) {\n    case tags.argumentsTag:\n    case tags.arrayTag:\n    case tags.arrayBufferTag:\n    case tags.dataViewTag:\n    case tags.booleanTag:\n    case tags.dateTag:\n    case tags.float32ArrayTag:\n    case tags.float64ArrayTag:\n    case tags.int8ArrayTag:\n    case tags.int16ArrayTag:\n    case tags.int32ArrayTag:\n    case tags.mapTag:\n    case tags.numberTag:\n    case tags.objectTag:\n    case tags.regexpTag:\n    case tags.setTag:\n    case tags.stringTag:\n    case tags.symbolTag:\n    case tags.uint8ArrayTag:\n    case tags.uint8ClampedArrayTag:\n    case tags.uint16ArrayTag:\n    case tags.uint32ArrayTag:\n      {\n        return true;\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nexports.cloneDeepWith = cloneDeepWith;\nexports.cloneDeepWithImpl = cloneDeepWithImpl;\nexports.copyProperties = copyProperties;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/es-toolkit/dist/object/cloneDeepWith.js"],"names":["Object","defineProperty","exports","Symbol","toStringTag","value","getSymbols","require","getTag","tags","isPrimitive","isTypedArray","cloneDeepWith","obj","cloneValue","cloneDeepWithImpl","undefined","Map","valueToClone","keyToClone","objectToClone","stack","cloned","has","get","Array","isArray","result","length","set","i","hasOwn","index","input","Date","getTime","RegExp","source","flags","lastIndex","key","Set","add","Buffer","isBuffer","subarray","getPrototypeOf","constructor","ArrayBuffer","SharedArrayBuffer","slice","DataView","buffer","byteOffset","byteLength","copyProperties","File","name","type","Blob","Error","message","cause","isCloneableObject","create","target","keys","descriptor","getOwnPropertyDescriptor","writable","object","argumentsTag","arrayTag","arrayBufferTag","dataViewTag","booleanTag","dateTag","float32ArrayTag","float64ArrayTag","int8ArrayTag","int16ArrayTag","int32ArrayTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","uint8ArrayTag","uint8ClampedArrayTag","uint16ArrayTag","uint32ArrayTag"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst getSymbols = require('../compat/_internal/getSymbols.js');\nconst getTag = require('../compat/_internal/getTag.js');\nconst tags = require('../compat/_internal/tags.js');\nconst isPrimitive = require('../predicate/isPrimitive.js');\nconst isTypedArray = require('../predicate/isTypedArray.js');\n\nfunction cloneDeepWith(obj, cloneValue) {\n    return cloneDeepWithImpl(obj, undefined, obj, new Map(), cloneValue);\n}\nfunction cloneDeepWithImpl(valueToClone, keyToClone, objectToClone, stack = new Map(), cloneValue = undefined) {\n    const cloned = cloneValue?.(valueToClone, keyToClone, objectToClone, stack);\n    if (cloned != null) {\n        return cloned;\n    }\n    if (isPrimitive.isPrimitive(valueToClone)) {\n        return valueToClone;\n    }\n    if (stack.has(valueToClone)) {\n        return stack.get(valueToClone);\n    }\n    if (Array.isArray(valueToClone)) {\n        const result = new Array(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        if (Object.hasOwn(valueToClone, 'index')) {\n            result.index = valueToClone.index;\n        }\n        if (Object.hasOwn(valueToClone, 'input')) {\n            result.input = valueToClone.input;\n        }\n        return result;\n    }\n    if (valueToClone instanceof Date) {\n        return new Date(valueToClone.getTime());\n    }\n    if (valueToClone instanceof RegExp) {\n        const result = new RegExp(valueToClone.source, valueToClone.flags);\n        result.lastIndex = valueToClone.lastIndex;\n        return result;\n    }\n    if (valueToClone instanceof Map) {\n        const result = new Map();\n        stack.set(valueToClone, result);\n        for (const [key, value] of valueToClone) {\n            result.set(key, cloneDeepWithImpl(value, key, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (valueToClone instanceof Set) {\n        const result = new Set();\n        stack.set(valueToClone, result);\n        for (const value of valueToClone) {\n            result.add(cloneDeepWithImpl(value, undefined, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(valueToClone)) {\n        return valueToClone.subarray();\n    }\n    if (isTypedArray.isTypedArray(valueToClone)) {\n        const result = new (Object.getPrototypeOf(valueToClone).constructor)(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        return result;\n    }\n    if (valueToClone instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && valueToClone instanceof SharedArrayBuffer)) {\n        return valueToClone.slice(0);\n    }\n    if (valueToClone instanceof DataView) {\n        const result = new DataView(valueToClone.buffer.slice(0), valueToClone.byteOffset, valueToClone.byteLength);\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof File !== 'undefined' && valueToClone instanceof File) {\n        const result = new File([valueToClone], valueToClone.name, {\n            type: valueToClone.type,\n        });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Blob) {\n        const result = new Blob([valueToClone], { type: valueToClone.type });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Error) {\n        const result = new valueToClone.constructor();\n        stack.set(valueToClone, result);\n        result.message = valueToClone.message;\n        result.name = valueToClone.name;\n        result.stack = valueToClone.stack;\n        result.cause = valueToClone.cause;\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof valueToClone === 'object' && isCloneableObject(valueToClone)) {\n        const result = Object.create(Object.getPrototypeOf(valueToClone));\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    return valueToClone;\n}\nfunction copyProperties(target, source, objectToClone = target, stack, cloneValue) {\n    const keys = [...Object.keys(source), ...getSymbols.getSymbols(source)];\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const descriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (descriptor == null || descriptor.writable) {\n            target[key] = cloneDeepWithImpl(source[key], key, objectToClone, stack, cloneValue);\n        }\n    }\n}\nfunction isCloneableObject(object) {\n    switch (getTag.getTag(object)) {\n        case tags.argumentsTag:\n        case tags.arrayTag:\n        case tags.arrayBufferTag:\n        case tags.dataViewTag:\n        case tags.booleanTag:\n        case tags.dateTag:\n        case tags.float32ArrayTag:\n        case tags.float64ArrayTag:\n        case tags.int8ArrayTag:\n        case tags.int16ArrayTag:\n        case tags.int32ArrayTag:\n        case tags.mapTag:\n        case tags.numberTag:\n        case tags.objectTag:\n        case tags.regexpTag:\n        case tags.setTag:\n        case tags.stringTag:\n        case tags.symbolTag:\n        case tags.uint8ArrayTag:\n        case tags.uint8ClampedArrayTag:\n        case tags.uint16ArrayTag:\n        case tags.uint32ArrayTag: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexports.cloneDeepWith = cloneDeepWith;\nexports.cloneDeepWithImpl = cloneDeepWithImpl;\nexports.copyProperties = copyProperties;\n"]},"metadata":{},"sourceType":"script"}