{"ast":null,"code":"function ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nexport var rectWithPoints = (_ref, _ref2) => {\n  var {\n    x: x1,\n    y: y1\n  } = _ref;\n  var {\n    x: x2,\n    y: y2\n  } = _ref2;\n  return {\n    x: Math.min(x1, x2),\n    y: Math.min(y1, y2),\n    width: Math.abs(x2 - x1),\n    height: Math.abs(y2 - y1)\n  };\n};\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */\n\nexport var rectWithCoords = _ref3 => {\n  var {\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref3;\n  return rectWithPoints({\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  });\n};\nexport class ScaleHelper {\n  static create(obj) {\n    return new ScaleHelper(obj);\n  }\n\n  constructor(scale) {\n    this.scale = scale;\n  }\n\n  get domain() {\n    return this.scale.domain;\n  }\n\n  get range() {\n    return this.scale.range;\n  }\n\n  get rangeMin() {\n    return this.range()[0];\n  }\n\n  get rangeMax() {\n    return this.range()[1];\n  }\n\n  get bandwidth() {\n    return this.scale.bandwidth;\n  }\n\n  apply(value) {\n    var {\n      bandAware,\n      position\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (value === undefined) {\n      return undefined;\n    }\n\n    if (position) {\n      switch (position) {\n        case 'start':\n          {\n            return this.scale(value);\n          }\n\n        case 'middle':\n          {\n            var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n            return this.scale(value) + offset;\n          }\n\n        case 'end':\n          {\n            var _offset = this.bandwidth ? this.bandwidth() : 0;\n\n            return this.scale(value) + _offset;\n          }\n\n        default:\n          {\n            return this.scale(value);\n          }\n      }\n    }\n\n    if (bandAware) {\n      var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n\n      return this.scale(value) + _offset2;\n    }\n\n    return this.scale(value);\n  }\n\n  isInRange(value) {\n    var range = this.range();\n    var first = range[0];\n    var last = range[range.length - 1];\n    return first <= last ? value >= first && value <= last : value >= last && value <= first;\n  }\n\n}\n\n_defineProperty(ScaleHelper, \"EPS\", 1e-4);\n\nexport var createLabeledScales = options => {\n  var scales = Object.keys(options).reduce((res, key) => _objectSpread(_objectSpread({}, res), {}, {\n    [key]: ScaleHelper.create(options[key])\n  }), {});\n  return _objectSpread(_objectSpread({}, scales), {}, {\n    apply(coord) {\n      var {\n        bandAware,\n        position\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return Object.fromEntries(Object.entries(coord).map(_ref4 => {\n        var [label, value] = _ref4;\n        return [label, scales[label].apply(value, {\n          bandAware,\n          position\n        })];\n      }));\n    },\n\n    isInRange(coord) {\n      return Object.keys(coord).every(label => scales[label].isInRange(coord[label]));\n    }\n\n  });\n};\n/** Normalizes the angle so that 0 <= angle < 180.\n * @param {number} angle Angle in degrees.\n * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */\n\nexport function normalizeAngle(angle) {\n  return (angle % 180 + 180) % 180;\n}\n/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n * @param {Object} size Width and height of the text in a horizontal position.\n * @param {number} angle Angle in degrees in which the text is displayed.\n * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n */\n\nexport var getAngledRectangleWidth = function getAngledRectangleWidth(_ref5) {\n  var {\n    width,\n    height\n  } = _ref5;\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Ensure angle is >= 0 && < 180\n\n  var normalizedAngle = normalizeAngle(angle);\n  var angleRadians = normalizedAngle * Math.PI / 180;\n  /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled\n   * width. This threshold defines when each formula should kick in. */\n\n  var angleThreshold = Math.atan(height / width);\n  var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);\n  return Math.abs(angledWidth);\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/util/CartesianUtils.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","rectWithPoints","_ref","_ref2","x","x1","y","y1","x2","y2","Math","min","width","abs","height","rectWithCoords","_ref3","ScaleHelper","create","obj","constructor","scale","domain","range","rangeMin","rangeMax","bandwidth","bandAware","position","undefined","offset","_offset","_offset2","isInRange","first","last","createLabeledScales","options","scales","reduce","res","key","coord","fromEntries","entries","map","_ref4","label","every","normalizeAngle","angle","getAngledRectangleWidth","_ref5","normalizedAngle","angleRadians","PI","angleThreshold","atan","angledWidth","sin","cos"],"mappings":"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","sourcesContent":["function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nexport var rectWithPoints = (_ref, _ref2) => {\n  var {\n    x: x1,\n    y: y1\n  } = _ref;\n  var {\n    x: x2,\n    y: y2\n  } = _ref2;\n  return {\n    x: Math.min(x1, x2),\n    y: Math.min(y1, y2),\n    width: Math.abs(x2 - x1),\n    height: Math.abs(y2 - y1)\n  };\n};\n\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */\nexport var rectWithCoords = _ref3 => {\n  var {\n    x1,\n    y1,\n    x2,\n    y2\n  } = _ref3;\n  return rectWithPoints({\n    x: x1,\n    y: y1\n  }, {\n    x: x2,\n    y: y2\n  });\n};\nexport class ScaleHelper {\n  static create(obj) {\n    return new ScaleHelper(obj);\n  }\n  constructor(scale) {\n    this.scale = scale;\n  }\n  get domain() {\n    return this.scale.domain;\n  }\n  get range() {\n    return this.scale.range;\n  }\n  get rangeMin() {\n    return this.range()[0];\n  }\n  get rangeMax() {\n    return this.range()[1];\n  }\n  get bandwidth() {\n    return this.scale.bandwidth;\n  }\n  apply(value) {\n    var {\n      bandAware,\n      position\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (value === undefined) {\n      return undefined;\n    }\n    if (position) {\n      switch (position) {\n        case 'start':\n          {\n            return this.scale(value);\n          }\n        case 'middle':\n          {\n            var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n            return this.scale(value) + offset;\n          }\n        case 'end':\n          {\n            var _offset = this.bandwidth ? this.bandwidth() : 0;\n            return this.scale(value) + _offset;\n          }\n        default:\n          {\n            return this.scale(value);\n          }\n      }\n    }\n    if (bandAware) {\n      var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n      return this.scale(value) + _offset2;\n    }\n    return this.scale(value);\n  }\n  isInRange(value) {\n    var range = this.range();\n    var first = range[0];\n    var last = range[range.length - 1];\n    return first <= last ? value >= first && value <= last : value >= last && value <= first;\n  }\n}\n_defineProperty(ScaleHelper, \"EPS\", 1e-4);\nexport var createLabeledScales = options => {\n  var scales = Object.keys(options).reduce((res, key) => _objectSpread(_objectSpread({}, res), {}, {\n    [key]: ScaleHelper.create(options[key])\n  }), {});\n  return _objectSpread(_objectSpread({}, scales), {}, {\n    apply(coord) {\n      var {\n        bandAware,\n        position\n      } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return Object.fromEntries(Object.entries(coord).map(_ref4 => {\n        var [label, value] = _ref4;\n        return [label, scales[label].apply(value, {\n          bandAware,\n          position\n        })];\n      }));\n    },\n    isInRange(coord) {\n      return Object.keys(coord).every(label => scales[label].isInRange(coord[label]));\n    }\n  });\n};\n\n/** Normalizes the angle so that 0 <= angle < 180.\n * @param {number} angle Angle in degrees.\n * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */\nexport function normalizeAngle(angle) {\n  return (angle % 180 + 180) % 180;\n}\n\n/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n * @param {Object} size Width and height of the text in a horizontal position.\n * @param {number} angle Angle in degrees in which the text is displayed.\n * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n */\nexport var getAngledRectangleWidth = function getAngledRectangleWidth(_ref5) {\n  var {\n    width,\n    height\n  } = _ref5;\n  var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Ensure angle is >= 0 && < 180\n  var normalizedAngle = normalizeAngle(angle);\n  var angleRadians = normalizedAngle * Math.PI / 180;\n\n  /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled\n   * width. This threshold defines when each formula should kick in. */\n  var angleThreshold = Math.atan(height / width);\n  var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);\n  return Math.abs(angledWidth);\n};"]},"metadata":{},"sourceType":"module"}