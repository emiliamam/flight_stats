{"ast":null,"code":"/**\n * Represents a single item in the ReactSmoothQueue.\n * The item can be:\n * - A number representing a delay in milliseconds.\n * - An object representing a style change\n * - A StartAnimationFunction that starts eased transition and calls different render\n *      because of course in Recharts we have to have three ways to do everything\n * - An arbitrary function to be executed\n */\nexport function createAnimateManager(timeoutController) {\n  var currStyle = {};\n\n  var handleChange = () => null;\n\n  var shouldStop = false;\n  var cancelTimeout = null;\n\n  var setStyle = _style => {\n    if (shouldStop) {\n      return;\n    }\n\n    if (Array.isArray(_style)) {\n      if (!_style.length) {\n        return;\n      }\n\n      var styles = _style;\n      var [curr, ...restStyles] = styles;\n\n      if (typeof curr === 'number') {\n        cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles), curr);\n        return;\n      }\n\n      setStyle(curr);\n      cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles));\n      return;\n    }\n\n    if (typeof _style === 'object') {\n      currStyle = _style;\n      handleChange(currStyle);\n    }\n\n    if (typeof _style === 'function') {\n      _style();\n    }\n  };\n\n  return {\n    stop: () => {\n      shouldStop = true;\n    },\n    start: style => {\n      shouldStop = false;\n\n      if (cancelTimeout) {\n        cancelTimeout();\n        cancelTimeout = null;\n      }\n\n      setStyle(style);\n    },\n    subscribe: _handleChange => {\n      handleChange = _handleChange;\n      return () => {\n        handleChange = () => null;\n      };\n    },\n    getTimeoutController: () => timeoutController\n  };\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/animation/AnimationManager.js"],"names":["createAnimateManager","timeoutController","currStyle","handleChange","shouldStop","cancelTimeout","setStyle","_style","Array","isArray","length","styles","curr","restStyles","setTimeout","bind","stop","start","style","subscribe","_handleChange","getTimeoutController"],"mappings":"AAAA;;;;;;;;;AAUA,OAAO,SAASA,oBAAT,CAA8BC,iBAA9B,EAAiD;AACtD,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAIC,YAAY,GAAG,MAAM,IAAzB;;AACA,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIC,aAAa,GAAG,IAApB;;AACA,MAAIC,QAAQ,GAAGC,MAAM,IAAI;AACvB,QAAIH,UAAJ,EAAgB;AACd;AACD;;AACD,QAAII,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;AACzB,UAAI,CAACA,MAAM,CAACG,MAAZ,EAAoB;AAClB;AACD;;AACD,UAAIC,MAAM,GAAGJ,MAAb;AACA,UAAI,CAACK,IAAD,EAAO,GAAGC,UAAV,IAAwBF,MAA5B;;AACA,UAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC5BP,QAAAA,aAAa,GAAGJ,iBAAiB,CAACa,UAAlB,CAA6BR,QAAQ,CAACS,IAAT,CAAc,IAAd,EAAoBF,UAApB,CAA7B,EAA8DD,IAA9D,CAAhB;AACA;AACD;;AACDN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAP,MAAAA,aAAa,GAAGJ,iBAAiB,CAACa,UAAlB,CAA6BR,QAAQ,CAACS,IAAT,CAAc,IAAd,EAAoBF,UAApB,CAA7B,CAAhB;AACA;AACD;;AACD,QAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC9BL,MAAAA,SAAS,GAAGK,MAAZ;AACAJ,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD;;AACD,QAAI,OAAOK,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,MAAAA,MAAM;AACP;AACF,GAzBD;;AA0BA,SAAO;AACLS,IAAAA,IAAI,EAAE,MAAM;AACVZ,MAAAA,UAAU,GAAG,IAAb;AACD,KAHI;AAILa,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACdd,MAAAA,UAAU,GAAG,KAAb;;AACA,UAAIC,aAAJ,EAAmB;AACjBA,QAAAA,aAAa;AACbA,QAAAA,aAAa,GAAG,IAAhB;AACD;;AACDC,MAAAA,QAAQ,CAACY,KAAD,CAAR;AACD,KAXI;AAYLC,IAAAA,SAAS,EAAEC,aAAa,IAAI;AAC1BjB,MAAAA,YAAY,GAAGiB,aAAf;AACA,aAAO,MAAM;AACXjB,QAAAA,YAAY,GAAG,MAAM,IAArB;AACD,OAFD;AAGD,KAjBI;AAkBLkB,IAAAA,oBAAoB,EAAE,MAAMpB;AAlBvB,GAAP;AAoBD","sourcesContent":["/**\n * Represents a single item in the ReactSmoothQueue.\n * The item can be:\n * - A number representing a delay in milliseconds.\n * - An object representing a style change\n * - A StartAnimationFunction that starts eased transition and calls different render\n *      because of course in Recharts we have to have three ways to do everything\n * - An arbitrary function to be executed\n */\n\nexport function createAnimateManager(timeoutController) {\n  var currStyle = {};\n  var handleChange = () => null;\n  var shouldStop = false;\n  var cancelTimeout = null;\n  var setStyle = _style => {\n    if (shouldStop) {\n      return;\n    }\n    if (Array.isArray(_style)) {\n      if (!_style.length) {\n        return;\n      }\n      var styles = _style;\n      var [curr, ...restStyles] = styles;\n      if (typeof curr === 'number') {\n        cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles), curr);\n        return;\n      }\n      setStyle(curr);\n      cancelTimeout = timeoutController.setTimeout(setStyle.bind(null, restStyles));\n      return;\n    }\n    if (typeof _style === 'object') {\n      currStyle = _style;\n      handleChange(currStyle);\n    }\n    if (typeof _style === 'function') {\n      _style();\n    }\n  };\n  return {\n    stop: () => {\n      shouldStop = true;\n    },\n    start: style => {\n      shouldStop = false;\n      if (cancelTimeout) {\n        cancelTimeout();\n        cancelTimeout = null;\n      }\n      setStyle(style);\n    },\n    subscribe: _handleChange => {\n      handleChange = _handleChange;\n      return () => {\n        handleChange = () => null;\n      };\n    },\n    getTimeoutController: () => timeoutController\n  };\n}"]},"metadata":{},"sourceType":"module"}