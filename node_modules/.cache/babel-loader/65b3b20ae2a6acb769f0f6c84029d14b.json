{"ast":null,"code":"import * as React from 'react';\nimport { useAppSelector } from '../state/hooks';\nimport { implicitXAxis, implicitYAxis, selectXAxisSettings, selectYAxisSettings } from '../state/selectors/axisSelectors';\nimport { usePlotArea } from '../hooks';\nexport function useNeedsClip(xAxisId, yAxisId) {\n  var _xAxis$allowDataOverf, _yAxis$allowDataOverf;\n\n  var xAxis = useAppSelector(state => selectXAxisSettings(state, xAxisId));\n  var yAxis = useAppSelector(state => selectYAxisSettings(state, yAxisId));\n  var needClipX = (_xAxis$allowDataOverf = xAxis === null || xAxis === void 0 ? void 0 : xAxis.allowDataOverflow) !== null && _xAxis$allowDataOverf !== void 0 ? _xAxis$allowDataOverf : implicitXAxis.allowDataOverflow;\n  var needClipY = (_yAxis$allowDataOverf = yAxis === null || yAxis === void 0 ? void 0 : yAxis.allowDataOverflow) !== null && _yAxis$allowDataOverf !== void 0 ? _yAxis$allowDataOverf : implicitYAxis.allowDataOverflow;\n  var needClip = needClipX || needClipY;\n  return {\n    needClip,\n    needClipX,\n    needClipY\n  };\n}\nexport function GraphicalItemClipPath(_ref) {\n  var {\n    xAxisId,\n    yAxisId,\n    clipPathId\n  } = _ref;\n  var plotArea = usePlotArea();\n  var {\n    needClipX,\n    needClipY,\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n\n  if (!needClip) {\n    return null;\n  }\n\n  var {\n    x,\n    y,\n    width,\n    height\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clipPath-\".concat(clipPathId)\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: needClipX ? x : x - width / 2,\n    y: needClipY ? y : y - height / 2,\n    width: needClipX ? width : width * 2,\n    height: needClipY ? height : height * 2\n  }));\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/cartesian/GraphicalItemClipPath.js"],"names":["React","useAppSelector","implicitXAxis","implicitYAxis","selectXAxisSettings","selectYAxisSettings","usePlotArea","useNeedsClip","xAxisId","yAxisId","_xAxis$allowDataOverf","_yAxis$allowDataOverf","xAxis","state","yAxis","needClipX","allowDataOverflow","needClipY","needClip","GraphicalItemClipPath","_ref","clipPathId","plotArea","x","y","width","height","createElement","id","concat"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,mBAAvC,EAA4DC,mBAA5D,QAAuF,kCAAvF;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AAC7C,MAAIC,qBAAJ,EAA2BC,qBAA3B;;AACA,MAAIC,KAAK,GAAGX,cAAc,CAACY,KAAK,IAAIT,mBAAmB,CAACS,KAAD,EAAQL,OAAR,CAA7B,CAA1B;AACA,MAAIM,KAAK,GAAGb,cAAc,CAACY,KAAK,IAAIR,mBAAmB,CAACQ,KAAD,EAAQJ,OAAR,CAA7B,CAA1B;AACA,MAAIM,SAAS,GAAG,CAACL,qBAAqB,GAAGE,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACI,iBAA7E,MAAoG,IAApG,IAA4GN,qBAAqB,KAAK,KAAK,CAA3I,GAA+IA,qBAA/I,GAAuKR,aAAa,CAACc,iBAArM;AACA,MAAIC,SAAS,GAAG,CAACN,qBAAqB,GAAGG,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACE,iBAA7E,MAAoG,IAApG,IAA4GL,qBAAqB,KAAK,KAAK,CAA3I,GAA+IA,qBAA/I,GAAuKR,aAAa,CAACa,iBAArM;AACA,MAAIE,QAAQ,GAAGH,SAAS,IAAIE,SAA5B;AACA,SAAO;AACLC,IAAAA,QADK;AAELH,IAAAA,SAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD;AACD,OAAO,SAASE,qBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,MAAI;AACFZ,IAAAA,OADE;AAEFC,IAAAA,OAFE;AAGFY,IAAAA;AAHE,MAIAD,IAJJ;AAKA,MAAIE,QAAQ,GAAGhB,WAAW,EAA1B;AACA,MAAI;AACFS,IAAAA,SADE;AAEFE,IAAAA,SAFE;AAGFC,IAAAA;AAHE,MAIAX,YAAY,CAACC,OAAD,EAAUC,OAAV,CAJhB;;AAKA,MAAI,CAACS,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AACD,MAAI;AACFK,IAAAA,CADE;AAEFC,IAAAA,CAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA;AAJE,MAKAJ,QALJ;AAMA,SAAO,aAAatB,KAAK,CAAC2B,aAAN,CAAoB,UAApB,EAAgC;AAClDC,IAAAA,EAAE,EAAE,YAAYC,MAAZ,CAAmBR,UAAnB;AAD8C,GAAhC,EAEjB,aAAarB,KAAK,CAAC2B,aAAN,CAAoB,MAApB,EAA4B;AAC1CJ,IAAAA,CAAC,EAAER,SAAS,GAAGQ,CAAH,GAAOA,CAAC,GAAGE,KAAK,GAAG,CADW;AAE1CD,IAAAA,CAAC,EAAEP,SAAS,GAAGO,CAAH,GAAOA,CAAC,GAAGE,MAAM,GAAG,CAFU;AAG1CD,IAAAA,KAAK,EAAEV,SAAS,GAAGU,KAAH,GAAWA,KAAK,GAAG,CAHO;AAI1CC,IAAAA,MAAM,EAAET,SAAS,GAAGS,MAAH,GAAYA,MAAM,GAAG;AAJI,GAA5B,CAFI,CAApB;AAQD","sourcesContent":["import * as React from 'react';\nimport { useAppSelector } from '../state/hooks';\nimport { implicitXAxis, implicitYAxis, selectXAxisSettings, selectYAxisSettings } from '../state/selectors/axisSelectors';\nimport { usePlotArea } from '../hooks';\nexport function useNeedsClip(xAxisId, yAxisId) {\n  var _xAxis$allowDataOverf, _yAxis$allowDataOverf;\n  var xAxis = useAppSelector(state => selectXAxisSettings(state, xAxisId));\n  var yAxis = useAppSelector(state => selectYAxisSettings(state, yAxisId));\n  var needClipX = (_xAxis$allowDataOverf = xAxis === null || xAxis === void 0 ? void 0 : xAxis.allowDataOverflow) !== null && _xAxis$allowDataOverf !== void 0 ? _xAxis$allowDataOverf : implicitXAxis.allowDataOverflow;\n  var needClipY = (_yAxis$allowDataOverf = yAxis === null || yAxis === void 0 ? void 0 : yAxis.allowDataOverflow) !== null && _yAxis$allowDataOverf !== void 0 ? _yAxis$allowDataOverf : implicitYAxis.allowDataOverflow;\n  var needClip = needClipX || needClipY;\n  return {\n    needClip,\n    needClipX,\n    needClipY\n  };\n}\nexport function GraphicalItemClipPath(_ref) {\n  var {\n    xAxisId,\n    yAxisId,\n    clipPathId\n  } = _ref;\n  var plotArea = usePlotArea();\n  var {\n    needClipX,\n    needClipY,\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  if (!needClip) {\n    return null;\n  }\n  var {\n    x,\n    y,\n    width,\n    height\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clipPath-\".concat(clipPathId)\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: needClipX ? x : x - width / 2,\n    y: needClipY ? y : y - height / 2,\n    width: needClipX ? width : width * 2,\n    height: needClipY ? height : height * 2\n  }));\n}"]},"metadata":{},"sourceType":"module"}