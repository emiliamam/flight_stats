{"ast":null,"code":"import { clsx } from 'clsx';\nimport { isNumber } from '../DataUtils';\nvar CSS_CLASS_PREFIX = 'recharts-tooltip-wrapper';\nvar TOOLTIP_HIDDEN = {\n  visibility: 'hidden'\n};\nexport function getTooltipCSSClassName(_ref) {\n  var {\n    coordinate,\n    translateX,\n    translateY\n  } = _ref;\n  return clsx(CSS_CLASS_PREFIX, {\n    [\"\".concat(CSS_CLASS_PREFIX, \"-right\")]: isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX >= coordinate.x,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-left\")]: isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX < coordinate.x,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-bottom\")]: isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY >= coordinate.y,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-top\")]: isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY < coordinate.y\n  });\n}\nexport function getTooltipTranslateXY(_ref2) {\n  var {\n    allowEscapeViewBox,\n    coordinate,\n    key,\n    offsetTopLeft,\n    position,\n    reverseDirection,\n    tooltipDimension,\n    viewBox,\n    viewBoxDimension\n  } = _ref2;\n\n  if (position && isNumber(position[key])) {\n    return position[key];\n  }\n\n  var negative = coordinate[key] - tooltipDimension - (offsetTopLeft > 0 ? offsetTopLeft : 0);\n  var positive = coordinate[key] + offsetTopLeft;\n\n  if (allowEscapeViewBox[key]) {\n    return reverseDirection[key] ? negative : positive;\n  }\n\n  var viewBoxKey = viewBox[key];\n\n  if (viewBoxKey == null) {\n    return 0;\n  }\n\n  if (reverseDirection[key]) {\n    var _tooltipBoundary = negative;\n    var _viewBoxBoundary = viewBoxKey;\n\n    if (_tooltipBoundary < _viewBoxBoundary) {\n      return Math.max(positive, viewBoxKey);\n    }\n\n    return Math.max(negative, viewBoxKey);\n  }\n\n  if (viewBoxDimension == null) {\n    return 0;\n  }\n\n  var tooltipBoundary = positive + tooltipDimension;\n  var viewBoxBoundary = viewBoxKey + viewBoxDimension;\n\n  if (tooltipBoundary > viewBoxBoundary) {\n    return Math.max(negative, viewBoxKey);\n  }\n\n  return Math.max(positive, viewBoxKey);\n}\nexport function getTransformStyle(_ref3) {\n  var {\n    translateX,\n    translateY,\n    useTranslate3d\n  } = _ref3;\n  return {\n    transform: useTranslate3d ? \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\") : \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\")\n  };\n}\nexport function getTooltipTranslate(_ref4) {\n  var {\n    allowEscapeViewBox,\n    coordinate,\n    offsetTopLeft,\n    position,\n    reverseDirection,\n    tooltipBox,\n    useTranslate3d,\n    viewBox\n  } = _ref4;\n  var cssProperties, translateX, translateY;\n\n  if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {\n    translateX = getTooltipTranslateXY({\n      allowEscapeViewBox,\n      coordinate,\n      key: 'x',\n      offsetTopLeft,\n      position,\n      reverseDirection,\n      tooltipDimension: tooltipBox.width,\n      viewBox,\n      viewBoxDimension: viewBox.width\n    });\n    translateY = getTooltipTranslateXY({\n      allowEscapeViewBox,\n      coordinate,\n      key: 'y',\n      offsetTopLeft,\n      position,\n      reverseDirection,\n      tooltipDimension: tooltipBox.height,\n      viewBox,\n      viewBoxDimension: viewBox.height\n    });\n    cssProperties = getTransformStyle({\n      translateX,\n      translateY,\n      useTranslate3d\n    });\n  } else {\n    cssProperties = TOOLTIP_HIDDEN;\n  }\n\n  return {\n    cssProperties,\n    cssClasses: getTooltipCSSClassName({\n      translateX,\n      translateY,\n      coordinate\n    })\n  };\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/util/tooltip/translate.js"],"names":["clsx","isNumber","CSS_CLASS_PREFIX","TOOLTIP_HIDDEN","visibility","getTooltipCSSClassName","_ref","coordinate","translateX","translateY","concat","x","y","getTooltipTranslateXY","_ref2","allowEscapeViewBox","key","offsetTopLeft","position","reverseDirection","tooltipDimension","viewBox","viewBoxDimension","negative","positive","viewBoxKey","_tooltipBoundary","_viewBoxBoundary","Math","max","tooltipBoundary","viewBoxBoundary","getTransformStyle","_ref3","useTranslate3d","transform","getTooltipTranslate","_ref4","tooltipBox","cssProperties","height","width","cssClasses"],"mappings":"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","sourcesContent":["import { clsx } from 'clsx';\nimport { isNumber } from '../DataUtils';\nvar CSS_CLASS_PREFIX = 'recharts-tooltip-wrapper';\nvar TOOLTIP_HIDDEN = {\n  visibility: 'hidden'\n};\nexport function getTooltipCSSClassName(_ref) {\n  var {\n    coordinate,\n    translateX,\n    translateY\n  } = _ref;\n  return clsx(CSS_CLASS_PREFIX, {\n    [\"\".concat(CSS_CLASS_PREFIX, \"-right\")]: isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX >= coordinate.x,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-left\")]: isNumber(translateX) && coordinate && isNumber(coordinate.x) && translateX < coordinate.x,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-bottom\")]: isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY >= coordinate.y,\n    [\"\".concat(CSS_CLASS_PREFIX, \"-top\")]: isNumber(translateY) && coordinate && isNumber(coordinate.y) && translateY < coordinate.y\n  });\n}\nexport function getTooltipTranslateXY(_ref2) {\n  var {\n    allowEscapeViewBox,\n    coordinate,\n    key,\n    offsetTopLeft,\n    position,\n    reverseDirection,\n    tooltipDimension,\n    viewBox,\n    viewBoxDimension\n  } = _ref2;\n  if (position && isNumber(position[key])) {\n    return position[key];\n  }\n  var negative = coordinate[key] - tooltipDimension - (offsetTopLeft > 0 ? offsetTopLeft : 0);\n  var positive = coordinate[key] + offsetTopLeft;\n  if (allowEscapeViewBox[key]) {\n    return reverseDirection[key] ? negative : positive;\n  }\n  var viewBoxKey = viewBox[key];\n  if (viewBoxKey == null) {\n    return 0;\n  }\n  if (reverseDirection[key]) {\n    var _tooltipBoundary = negative;\n    var _viewBoxBoundary = viewBoxKey;\n    if (_tooltipBoundary < _viewBoxBoundary) {\n      return Math.max(positive, viewBoxKey);\n    }\n    return Math.max(negative, viewBoxKey);\n  }\n  if (viewBoxDimension == null) {\n    return 0;\n  }\n  var tooltipBoundary = positive + tooltipDimension;\n  var viewBoxBoundary = viewBoxKey + viewBoxDimension;\n  if (tooltipBoundary > viewBoxBoundary) {\n    return Math.max(negative, viewBoxKey);\n  }\n  return Math.max(positive, viewBoxKey);\n}\nexport function getTransformStyle(_ref3) {\n  var {\n    translateX,\n    translateY,\n    useTranslate3d\n  } = _ref3;\n  return {\n    transform: useTranslate3d ? \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\") : \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\")\n  };\n}\nexport function getTooltipTranslate(_ref4) {\n  var {\n    allowEscapeViewBox,\n    coordinate,\n    offsetTopLeft,\n    position,\n    reverseDirection,\n    tooltipBox,\n    useTranslate3d,\n    viewBox\n  } = _ref4;\n  var cssProperties, translateX, translateY;\n  if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {\n    translateX = getTooltipTranslateXY({\n      allowEscapeViewBox,\n      coordinate,\n      key: 'x',\n      offsetTopLeft,\n      position,\n      reverseDirection,\n      tooltipDimension: tooltipBox.width,\n      viewBox,\n      viewBoxDimension: viewBox.width\n    });\n    translateY = getTooltipTranslateXY({\n      allowEscapeViewBox,\n      coordinate,\n      key: 'y',\n      offsetTopLeft,\n      position,\n      reverseDirection,\n      tooltipDimension: tooltipBox.height,\n      viewBox,\n      viewBoxDimension: viewBox.height\n    });\n    cssProperties = getTransformStyle({\n      translateX,\n      translateY,\n      useTranslate3d\n    });\n  } else {\n    cssProperties = TOOLTIP_HIDDEN;\n  }\n  return {\n    cssProperties,\n    cssClasses: getTooltipCSSClassName({\n      translateX,\n      translateY,\n      coordinate\n    })\n  };\n}"]},"metadata":{},"sourceType":"module"}