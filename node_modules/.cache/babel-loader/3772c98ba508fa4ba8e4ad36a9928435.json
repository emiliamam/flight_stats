{"ast":null,"code":"function ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nimport { createSelector } from 'reselect';\nimport { computeRadialBarDataItems } from '../../polar/RadialBar';\nimport { selectChartDataAndAlwaysIgnoreIndexes, selectChartDataWithIndexes } from './dataSelectors';\nimport { selectPolarAxisScale, selectPolarAxisTicks, selectPolarGraphicalItemAxisTicks } from './polarScaleSelectors';\nimport { combineStackGroups } from './axisSelectors';\nimport { selectAngleAxis, selectPolarViewBox, selectRadiusAxis } from './polarAxisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { getBandSizeOfAxis, getBaseValueOfBar, isCategoricalAxis } from '../../util/ChartUtils';\nimport { combineAllBarPositions, combineBarSizeList, combineStackedData } from './barSelectors';\nimport { selectBarCategoryGap, selectBarGap, selectRootBarSize, selectRootMaxBarSize, selectStackOffsetType } from './rootPropsSelectors';\nimport { selectPolarDisplayedData, selectPolarItemsSettings, selectUnfilteredPolarItems } from './polarSelectors';\nimport { isNullish } from '../../util/DataUtils';\n\nvar selectRadiusAxisForRadialBar = (state, radiusAxisId) => selectRadiusAxis(state, radiusAxisId);\n\nvar selectRadiusAxisScaleForRadar = (state, radiusAxisId) => selectPolarAxisScale(state, 'radiusAxis', radiusAxisId);\n\nexport var selectRadiusAxisWithScale = createSelector([selectRadiusAxisForRadialBar, selectRadiusAxisScaleForRadar], (axis, scale) => {\n  if (axis == null || scale == null) {\n    return undefined;\n  }\n\n  return _objectSpread(_objectSpread({}, axis), {}, {\n    scale\n  });\n});\nexport var selectRadiusAxisTicks = (state, radiusAxisId, _angleAxisId, isPanorama) => {\n  return selectPolarGraphicalItemAxisTicks(state, 'radiusAxis', radiusAxisId, isPanorama);\n};\n\nvar selectAngleAxisForRadialBar = (state, _radiusAxisId, angleAxisId) => selectAngleAxis(state, angleAxisId);\n\nvar selectAngleAxisScaleForRadialBar = (state, _radiusAxisId, angleAxisId) => selectPolarAxisScale(state, 'angleAxis', angleAxisId);\n\nexport var selectAngleAxisWithScale = createSelector([selectAngleAxisForRadialBar, selectAngleAxisScaleForRadialBar], (axis, scale) => {\n  if (axis == null || scale == null) {\n    return undefined;\n  }\n\n  return _objectSpread(_objectSpread({}, axis), {}, {\n    scale\n  });\n});\n\nvar selectAngleAxisTicks = (state, _radiusAxisId, angleAxisId, isPanorama) => {\n  return selectPolarAxisTicks(state, 'angleAxis', angleAxisId, isPanorama);\n};\n\nvar pickRadialBarSettings = (_state, _radiusAxisId, _angleAxisId, radialBarSettings) => radialBarSettings;\n\nvar selectSynchronisedRadialBarSettings = createSelector([selectUnfilteredPolarItems, pickRadialBarSettings], (graphicalItems, radialBarSettingsFromProps) => {\n  if (graphicalItems.some(pgis => pgis.type === 'radialBar' && radialBarSettingsFromProps.dataKey === pgis.dataKey && radialBarSettingsFromProps.stackId === pgis.stackId)) {\n    return radialBarSettingsFromProps;\n  }\n\n  return undefined;\n});\nexport var selectBandSizeOfPolarAxis = createSelector([selectChartLayout, selectRadiusAxisWithScale, selectRadiusAxisTicks, selectAngleAxisWithScale, selectAngleAxisTicks], (layout, radiusAxis, radiusAxisTicks, angleAxis, angleAxisTicks) => {\n  if (isCategoricalAxis(layout, 'radiusAxis')) {\n    return getBandSizeOfAxis(radiusAxis, radiusAxisTicks, false);\n  }\n\n  return getBandSizeOfAxis(angleAxis, angleAxisTicks, false);\n});\nexport var selectBaseValue = createSelector([selectAngleAxisWithScale, selectRadiusAxisWithScale, selectChartLayout], (angleAxis, radiusAxis, layout) => {\n  var numericAxis = layout === 'radial' ? angleAxis : radiusAxis;\n\n  if (numericAxis == null || numericAxis.scale == null) {\n    return undefined;\n  }\n\n  return getBaseValueOfBar({\n    numericAxis\n  });\n});\n\nvar pickCells = (_state, _radiusAxisId, _angleAxisId, _radialBarSettings, cells) => cells;\n\nvar pickAngleAxisId = (_state, _radiusAxisId, angleAxisId, _radialBarSettings, _cells) => angleAxisId;\n\nvar pickRadiusAxisId = (_state, radiusAxisId, _angleAxisId, _radialBarSettings, _cells) => radiusAxisId;\n\nexport var pickMaxBarSize = (_state, _radiusAxisId, _angleAxisId, radialBarSettings, _cells) => radialBarSettings.maxBarSize;\nvar selectAllVisibleRadialBars = createSelector([selectChartLayout, selectUnfilteredPolarItems, pickAngleAxisId, pickRadiusAxisId], (layout, allItems, angleAxisId, radiusAxisId) => {\n  return allItems.filter(i => {\n    if (layout === 'centric') {\n      return i.angleAxisId === angleAxisId;\n    }\n\n    return i.radiusAxisId === radiusAxisId;\n  }).filter(i => i.hide === false).filter(i => i.type === 'radialBar');\n});\n/**\n * The generator never returned the totalSize which means that barSize in polar chart can not support percent values.\n * We can add that if we want to I suppose.\n * @returns undefined - but it should be a total size of numerical axis in polar chart\n */\n\nvar selectPolarBarAxisSize = () => undefined;\n\nexport var selectPolarBarSizeList = createSelector([selectAllVisibleRadialBars, selectRootBarSize, selectPolarBarAxisSize], combineBarSizeList);\nexport var selectPolarBarBandSize = createSelector([selectChartLayout, selectRootMaxBarSize, selectAngleAxisWithScale, selectAngleAxisTicks, selectRadiusAxisWithScale, selectRadiusAxisTicks, pickMaxBarSize], (layout, globalMaxBarSize, angleAxis, angleAxisTicks, radiusAxis, radiusAxisTicks, childMaxBarSize) => {\n  var _ref2, _getBandSizeOfAxis2;\n\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n\n  if (layout === 'centric') {\n    var _ref, _getBandSizeOfAxis;\n\n    return (_ref = (_getBandSizeOfAxis = getBandSizeOfAxis(angleAxis, angleAxisTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref !== void 0 ? _ref : 0;\n  }\n\n  return (_ref2 = (_getBandSizeOfAxis2 = getBandSizeOfAxis(radiusAxis, radiusAxisTicks, true)) !== null && _getBandSizeOfAxis2 !== void 0 ? _getBandSizeOfAxis2 : maxBarSize) !== null && _ref2 !== void 0 ? _ref2 : 0;\n});\nexport var selectAllPolarBarPositions = createSelector([selectPolarBarSizeList, selectRootMaxBarSize, selectBarGap, selectBarCategoryGap, selectPolarBarBandSize, selectBandSizeOfPolarAxis, pickMaxBarSize], combineAllBarPositions);\nexport var selectPolarBarPosition = createSelector([selectAllPolarBarPositions, selectSynchronisedRadialBarSettings], (allBarPositions, barSettings) => {\n  if (allBarPositions == null || barSettings == null) {\n    return undefined;\n  }\n\n  var position = allBarPositions.find(p => p.stackId === barSettings.stackId && barSettings.dataKey != null && p.dataKeys.includes(barSettings.dataKey));\n\n  if (position == null) {\n    return undefined;\n  }\n\n  return position.position;\n});\nvar selectStackGroups = createSelector([selectPolarDisplayedData, selectPolarItemsSettings, selectStackOffsetType], combineStackGroups);\n\nvar selectRadialBarStackGroups = (state, radiusAxisId, angleAxisId) => {\n  var layout = selectChartLayout(state);\n\n  if (layout === 'centric') {\n    return selectStackGroups(state, 'radiusAxis', radiusAxisId);\n  }\n\n  return selectStackGroups(state, 'angleAxis', angleAxisId);\n};\n\nvar selectPolarStackedData = createSelector([selectRadialBarStackGroups, selectSynchronisedRadialBarSettings], combineStackedData);\nexport var selectRadialBarSectors = createSelector([selectAngleAxisWithScale, selectAngleAxisTicks, selectRadiusAxisWithScale, selectRadiusAxisTicks, selectChartDataWithIndexes, selectSynchronisedRadialBarSettings, selectBandSizeOfPolarAxis, selectChartLayout, selectBaseValue, selectPolarViewBox, pickCells, selectPolarBarPosition, selectPolarStackedData], (angleAxis, angleAxisTicks, radiusAxis, radiusAxisTicks, _ref3, radialBarSettings, bandSize, layout, baseValue, polarViewBox, cells, pos, stackedData) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref3;\n\n  if (radialBarSettings == null || radiusAxis == null || angleAxis == null || chartData == null || bandSize == null || pos == null || layout !== 'centric' && layout !== 'radial' || radiusAxisTicks == null) {\n    return [];\n  }\n\n  var {\n    dataKey,\n    minPointSize\n  } = radialBarSettings;\n  var {\n    cx,\n    cy,\n    startAngle,\n    endAngle\n  } = polarViewBox;\n  var displayedData = chartData.slice(dataStartIndex, dataEndIndex + 1);\n  var numericAxis = layout === 'centric' ? radiusAxis : angleAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  return computeRadialBarDataItems({\n    angleAxis,\n    angleAxisTicks,\n    bandSize,\n    baseValue,\n    cells,\n    cx,\n    cy,\n    dataKey,\n    dataStartIndex,\n    displayedData,\n    endAngle,\n    layout,\n    minPointSize,\n    pos,\n    radiusAxis,\n    radiusAxisTicks,\n    stackedData,\n    stackedDomain,\n    startAngle\n  });\n});\nexport var selectRadialBarLegendPayload = createSelector([selectChartDataAndAlwaysIgnoreIndexes, (_s, l) => l], (_ref4, legendType) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref4;\n\n  if (chartData == null) {\n    return [];\n  }\n\n  var displayedData = chartData.slice(dataStartIndex, dataEndIndex + 1);\n\n  if (displayedData.length === 0) {\n    return [];\n  }\n\n  return displayedData.map(entry => {\n    return {\n      type: legendType,\n      // @ts-expect-error we need a better typing for our data inputs\n      value: entry.name,\n      // @ts-expect-error we need a better typing for our data inputs\n      color: entry.fill,\n      payload: entry\n    };\n  });\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/selectors/radialBarSelectors.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","createSelector","computeRadialBarDataItems","selectChartDataAndAlwaysIgnoreIndexes","selectChartDataWithIndexes","selectPolarAxisScale","selectPolarAxisTicks","selectPolarGraphicalItemAxisTicks","combineStackGroups","selectAngleAxis","selectPolarViewBox","selectRadiusAxis","selectChartLayout","getBandSizeOfAxis","getBaseValueOfBar","isCategoricalAxis","combineAllBarPositions","combineBarSizeList","combineStackedData","selectBarCategoryGap","selectBarGap","selectRootBarSize","selectRootMaxBarSize","selectStackOffsetType","selectPolarDisplayedData","selectPolarItemsSettings","selectUnfilteredPolarItems","isNullish","selectRadiusAxisForRadialBar","state","radiusAxisId","selectRadiusAxisScaleForRadar","selectRadiusAxisWithScale","axis","scale","undefined","selectRadiusAxisTicks","_angleAxisId","isPanorama","selectAngleAxisForRadialBar","_radiusAxisId","angleAxisId","selectAngleAxisScaleForRadialBar","selectAngleAxisWithScale","selectAngleAxisTicks","pickRadialBarSettings","_state","radialBarSettings","selectSynchronisedRadialBarSettings","graphicalItems","radialBarSettingsFromProps","some","pgis","type","dataKey","stackId","selectBandSizeOfPolarAxis","layout","radiusAxis","radiusAxisTicks","angleAxis","angleAxisTicks","selectBaseValue","numericAxis","pickCells","_radialBarSettings","cells","pickAngleAxisId","_cells","pickRadiusAxisId","pickMaxBarSize","maxBarSize","selectAllVisibleRadialBars","allItems","hide","selectPolarBarAxisSize","selectPolarBarSizeList","selectPolarBarBandSize","globalMaxBarSize","childMaxBarSize","_ref2","_getBandSizeOfAxis2","_ref","_getBandSizeOfAxis","selectAllPolarBarPositions","selectPolarBarPosition","allBarPositions","barSettings","position","find","p","dataKeys","includes","selectStackGroups","selectRadialBarStackGroups","selectPolarStackedData","selectRadialBarSectors","_ref3","bandSize","baseValue","polarViewBox","pos","stackedData","chartData","dataStartIndex","dataEndIndex","minPointSize","cx","cy","startAngle","endAngle","displayedData","slice","stackedDomain","domain","selectRadialBarLegendPayload","_s","l","_ref4","legendType","map","entry","name","color","fill","payload"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AAAE,MAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAR;;AAAwB,MAAIG,MAAM,CAACE,qBAAX,EAAkC;AAAE,QAAIC,CAAC,GAAGH,MAAM,CAACE,qBAAP,CAA6BL,CAA7B,CAAR;AAAyCC,IAAAA,CAAC,KAAKK,CAAC,GAAGA,CAAC,CAACC,MAAF,CAAS,UAAUN,CAAV,EAAa;AAAE,aAAOE,MAAM,CAACK,wBAAP,CAAgCR,CAAhC,EAAmCC,CAAnC,EAAsCQ,UAA7C;AAA0D,KAAlF,CAAT,CAAD,EAAgGP,CAAC,CAACQ,IAAF,CAAOC,KAAP,CAAaT,CAAb,EAAgBI,CAAhB,CAAhG;AAAqH;;AAAC,SAAOJ,CAAP;AAAW;;AAC/P,SAASU,aAAT,CAAuBZ,CAAvB,EAA0B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,SAAS,CAACC,MAA9B,EAAsCb,CAAC,EAAvC,EAA2C;AAAE,QAAIC,CAAC,GAAG,QAAQW,SAAS,CAACZ,CAAD,CAAjB,GAAuBY,SAAS,CAACZ,CAAD,CAAhC,GAAsC,EAA9C;AAAkDA,IAAAA,CAAC,GAAG,CAAJ,GAAQF,OAAO,CAACI,MAAM,CAACD,CAAD,CAAP,EAAY,CAAC,CAAb,CAAP,CAAuBa,OAAvB,CAA+B,UAAUd,CAAV,EAAa;AAAEe,MAAAA,eAAe,CAAChB,CAAD,EAAIC,CAAJ,EAAOC,CAAC,CAACD,CAAD,CAAR,CAAf;AAA8B,KAA5E,CAAR,GAAwFE,MAAM,CAACc,yBAAP,GAAmCd,MAAM,CAACe,gBAAP,CAAwBlB,CAAxB,EAA2BG,MAAM,CAACc,yBAAP,CAAiCf,CAAjC,CAA3B,CAAnC,GAAqGH,OAAO,CAACI,MAAM,CAACD,CAAD,CAAP,CAAP,CAAmBa,OAAnB,CAA2B,UAAUd,CAAV,EAAa;AAAEE,MAAAA,MAAM,CAACgB,cAAP,CAAsBnB,CAAtB,EAAyBC,CAAzB,EAA4BE,MAAM,CAACK,wBAAP,CAAgCN,CAAhC,EAAmCD,CAAnC,CAA5B;AAAqE,KAA/G,CAA7L;AAAgT;;AAAC,SAAOD,CAAP;AAAW;;AACvb,SAASgB,eAAT,CAAyBhB,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;AAAE,SAAO,CAACD,CAAC,GAAGmB,cAAc,CAACnB,CAAD,CAAnB,KAA2BD,CAA3B,GAA+BG,MAAM,CAACgB,cAAP,CAAsBnB,CAAtB,EAAyBC,CAAzB,EAA4B;AAAEoB,IAAAA,KAAK,EAAEnB,CAAT;AAAYO,IAAAA,UAAU,EAAE,CAAC,CAAzB;AAA4Ba,IAAAA,YAAY,EAAE,CAAC,CAA3C;AAA8CC,IAAAA,QAAQ,EAAE,CAAC;AAAzD,GAA5B,CAA/B,GAA2HvB,CAAC,CAACC,CAAD,CAAD,GAAOC,CAAlI,EAAqIF,CAA5I;AAAgJ;;AACpL,SAASoB,cAAT,CAAwBlB,CAAxB,EAA2B;AAAE,MAAIsB,CAAC,GAAGC,YAAY,CAACvB,CAAD,EAAI,QAAJ,CAApB;;AAAmC,SAAO,YAAY,OAAOsB,CAAnB,GAAuBA,CAAvB,GAA2BA,CAAC,GAAG,EAAtC;AAA2C;;AAC3G,SAASC,YAAT,CAAsBvB,CAAtB,EAAyBD,CAAzB,EAA4B;AAAE,MAAI,YAAY,OAAOC,CAAnB,IAAwB,CAACA,CAA7B,EAAgC,OAAOA,CAAP;AAAU,MAAIF,CAAC,GAAGE,CAAC,CAACwB,MAAM,CAACC,WAAR,CAAT;;AAA+B,MAAI,KAAK,CAAL,KAAW3B,CAAf,EAAkB;AAAE,QAAIwB,CAAC,GAAGxB,CAAC,CAAC4B,IAAF,CAAO1B,CAAP,EAAUD,CAAC,IAAI,SAAf,CAAR;AAAmC,QAAI,YAAY,OAAOuB,CAAvB,EAA0B,OAAOA,CAAP;AAAU,UAAM,IAAIK,SAAJ,CAAc,8CAAd,CAAN;AAAsE;;AAAC,SAAO,CAAC,aAAa5B,CAAb,GAAiB6B,MAAjB,GAA0BC,MAA3B,EAAmC7B,CAAnC,CAAP;AAA+C;;AACxT,SAAS8B,cAAT,QAA+B,UAA/B;AACA,SAASC,yBAAT,QAA0C,uBAA1C;AACA,SAASC,qCAAT,EAAgDC,0BAAhD,QAAkF,iBAAlF;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,iCAArD,QAA8F,uBAA9F;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,gBAA9C,QAAsE,sBAAtE;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,iBAA/C,QAAwE,uBAAxE;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,EAAqDC,kBAArD,QAA+E,gBAA/E;AACA,SAASC,oBAAT,EAA+BC,YAA/B,EAA6CC,iBAA7C,EAAgEC,oBAAhE,EAAsFC,qBAAtF,QAAmH,sBAAnH;AACA,SAASC,wBAAT,EAAmCC,wBAAnC,EAA6DC,0BAA7D,QAA+F,kBAA/F;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AACA,IAAIC,4BAA4B,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyBnB,gBAAgB,CAACkB,KAAD,EAAQC,YAAR,CAA5E;;AACA,IAAIC,6BAA6B,GAAG,CAACF,KAAD,EAAQC,YAAR,KAAyBzB,oBAAoB,CAACwB,KAAD,EAAQ,YAAR,EAAsBC,YAAtB,CAAjF;;AACA,OAAO,IAAIE,yBAAyB,GAAG/B,cAAc,CAAC,CAAC2B,4BAAD,EAA+BG,6BAA/B,CAAD,EAAgE,CAACE,IAAD,EAAOC,KAAP,KAAiB;AACpI,MAAID,IAAI,IAAI,IAAR,IAAgBC,KAAK,IAAI,IAA7B,EAAmC;AACjC,WAAOC,SAAP;AACD;;AACD,SAAOtD,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKoD,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AAChDC,IAAAA;AADgD,GAA9B,CAApB;AAGD,CAPoD,CAA9C;AAQP,OAAO,IAAIE,qBAAqB,GAAG,CAACP,KAAD,EAAQC,YAAR,EAAsBO,YAAtB,EAAoCC,UAApC,KAAmD;AACpF,SAAO/B,iCAAiC,CAACsB,KAAD,EAAQ,YAAR,EAAsBC,YAAtB,EAAoCQ,UAApC,CAAxC;AACD,CAFM;;AAGP,IAAIC,2BAA2B,GAAG,CAACV,KAAD,EAAQW,aAAR,EAAuBC,WAAvB,KAAuChC,eAAe,CAACoB,KAAD,EAAQY,WAAR,CAAxF;;AACA,IAAIC,gCAAgC,GAAG,CAACb,KAAD,EAAQW,aAAR,EAAuBC,WAAvB,KAAuCpC,oBAAoB,CAACwB,KAAD,EAAQ,WAAR,EAAqBY,WAArB,CAAlG;;AACA,OAAO,IAAIE,wBAAwB,GAAG1C,cAAc,CAAC,CAACsC,2BAAD,EAA8BG,gCAA9B,CAAD,EAAkE,CAACT,IAAD,EAAOC,KAAP,KAAiB;AACrI,MAAID,IAAI,IAAI,IAAR,IAAgBC,KAAK,IAAI,IAA7B,EAAmC;AACjC,WAAOC,SAAP;AACD;;AACD,SAAOtD,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKoD,IAAL,CAAd,EAA0B,EAA1B,EAA8B;AAChDC,IAAAA;AADgD,GAA9B,CAApB;AAGD,CAPmD,CAA7C;;AAQP,IAAIU,oBAAoB,GAAG,CAACf,KAAD,EAAQW,aAAR,EAAuBC,WAAvB,EAAoCH,UAApC,KAAmD;AAC5E,SAAOhC,oBAAoB,CAACuB,KAAD,EAAQ,WAAR,EAAqBY,WAArB,EAAkCH,UAAlC,CAA3B;AACD,CAFD;;AAGA,IAAIO,qBAAqB,GAAG,CAACC,MAAD,EAASN,aAAT,EAAwBH,YAAxB,EAAsCU,iBAAtC,KAA4DA,iBAAxF;;AACA,IAAIC,mCAAmC,GAAG/C,cAAc,CAAC,CAACyB,0BAAD,EAA6BmB,qBAA7B,CAAD,EAAsD,CAACI,cAAD,EAAiBC,0BAAjB,KAAgD;AAC5J,MAAID,cAAc,CAACE,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,WAAd,IAA6BH,0BAA0B,CAACI,OAA3B,KAAuCF,IAAI,CAACE,OAAzE,IAAoFJ,0BAA0B,CAACK,OAA3B,KAAuCH,IAAI,CAACG,OAA5J,CAAJ,EAA0K;AACxK,WAAOL,0BAAP;AACD;;AACD,SAAOf,SAAP;AACD,CALuD,CAAxD;AAMA,OAAO,IAAIqB,yBAAyB,GAAGvD,cAAc,CAAC,CAACW,iBAAD,EAAoBoB,yBAApB,EAA+CI,qBAA/C,EAAsEO,wBAAtE,EAAgGC,oBAAhG,CAAD,EAAwH,CAACa,MAAD,EAASC,UAAT,EAAqBC,eAArB,EAAsCC,SAAtC,EAAiDC,cAAjD,KAAoE;AAC/O,MAAI9C,iBAAiB,CAAC0C,MAAD,EAAS,YAAT,CAArB,EAA6C;AAC3C,WAAO5C,iBAAiB,CAAC6C,UAAD,EAAaC,eAAb,EAA8B,KAA9B,CAAxB;AACD;;AACD,SAAO9C,iBAAiB,CAAC+C,SAAD,EAAYC,cAAZ,EAA4B,KAA5B,CAAxB;AACD,CALoD,CAA9C;AAMP,OAAO,IAAIC,eAAe,GAAG7D,cAAc,CAAC,CAAC0C,wBAAD,EAA2BX,yBAA3B,EAAsDpB,iBAAtD,CAAD,EAA2E,CAACgD,SAAD,EAAYF,UAAZ,EAAwBD,MAAxB,KAAmC;AACvJ,MAAIM,WAAW,GAAGN,MAAM,KAAK,QAAX,GAAsBG,SAAtB,GAAkCF,UAApD;;AACA,MAAIK,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAAC7B,KAAZ,IAAqB,IAAhD,EAAsD;AACpD,WAAOC,SAAP;AACD;;AACD,SAAOrB,iBAAiB,CAAC;AACvBiD,IAAAA;AADuB,GAAD,CAAxB;AAGD,CAR0C,CAApC;;AASP,IAAIC,SAAS,GAAG,CAAClB,MAAD,EAASN,aAAT,EAAwBH,YAAxB,EAAsC4B,kBAAtC,EAA0DC,KAA1D,KAAoEA,KAApF;;AACA,IAAIC,eAAe,GAAG,CAACrB,MAAD,EAASN,aAAT,EAAwBC,WAAxB,EAAqCwB,kBAArC,EAAyDG,MAAzD,KAAoE3B,WAA1F;;AACA,IAAI4B,gBAAgB,GAAG,CAACvB,MAAD,EAAShB,YAAT,EAAuBO,YAAvB,EAAqC4B,kBAArC,EAAyDG,MAAzD,KAAoEtC,YAA3F;;AACA,OAAO,IAAIwC,cAAc,GAAG,CAACxB,MAAD,EAASN,aAAT,EAAwBH,YAAxB,EAAsCU,iBAAtC,EAAyDqB,MAAzD,KAAoErB,iBAAiB,CAACwB,UAA3G;AACP,IAAIC,0BAA0B,GAAGvE,cAAc,CAAC,CAACW,iBAAD,EAAoBc,0BAApB,EAAgDyC,eAAhD,EAAiEE,gBAAjE,CAAD,EAAqF,CAACZ,MAAD,EAASgB,QAAT,EAAmBhC,WAAnB,EAAgCX,YAAhC,KAAiD;AACnL,SAAO2C,QAAQ,CAACjG,MAAT,CAAgBiB,CAAC,IAAI;AAC1B,QAAIgE,MAAM,KAAK,SAAf,EAA0B;AACxB,aAAOhE,CAAC,CAACgD,WAAF,KAAkBA,WAAzB;AACD;;AACD,WAAOhD,CAAC,CAACqC,YAAF,KAAmBA,YAA1B;AACD,GALM,EAKJtD,MALI,CAKGiB,CAAC,IAAIA,CAAC,CAACiF,IAAF,KAAW,KALnB,EAK0BlG,MAL1B,CAKiCiB,CAAC,IAAIA,CAAC,CAAC4D,IAAF,KAAW,WALjD,CAAP;AAMD,CAP8C,CAA/C;AASA;;;;;;AAKA,IAAIsB,sBAAsB,GAAG,MAAMxC,SAAnC;;AACA,OAAO,IAAIyC,sBAAsB,GAAG3E,cAAc,CAAC,CAACuE,0BAAD,EAA6BnD,iBAA7B,EAAgDsD,sBAAhD,CAAD,EAA0E1D,kBAA1E,CAA3C;AACP,OAAO,IAAI4D,sBAAsB,GAAG5E,cAAc,CAAC,CAACW,iBAAD,EAAoBU,oBAApB,EAA0CqB,wBAA1C,EAAoEC,oBAApE,EAA0FZ,yBAA1F,EAAqHI,qBAArH,EAA4IkC,cAA5I,CAAD,EAA8J,CAACb,MAAD,EAASqB,gBAAT,EAA2BlB,SAA3B,EAAsCC,cAAtC,EAAsDH,UAAtD,EAAkEC,eAAlE,EAAmFoB,eAAnF,KAAuG;AACrT,MAAIC,KAAJ,EAAWC,mBAAX;;AACA,MAAIV,UAAU,GAAG5C,SAAS,CAACoD,eAAD,CAAT,GAA6BD,gBAA7B,GAAgDC,eAAjE;;AACA,MAAItB,MAAM,KAAK,SAAf,EAA0B;AACxB,QAAIyB,IAAJ,EAAUC,kBAAV;;AACA,WAAO,CAACD,IAAI,GAAG,CAACC,kBAAkB,GAAGtE,iBAAiB,CAAC+C,SAAD,EAAYC,cAAZ,EAA4B,IAA5B,CAAvC,MAA8E,IAA9E,IAAsFsB,kBAAkB,KAAK,KAAK,CAAlH,GAAsHA,kBAAtH,GAA2IZ,UAAnJ,MAAmK,IAAnK,IAA2KW,IAAI,KAAK,KAAK,CAAzL,GAA6LA,IAA7L,GAAoM,CAA3M;AACD;;AACD,SAAO,CAACF,KAAK,GAAG,CAACC,mBAAmB,GAAGpE,iBAAiB,CAAC6C,UAAD,EAAaC,eAAb,EAA8B,IAA9B,CAAxC,MAAiF,IAAjF,IAAyFsB,mBAAmB,KAAK,KAAK,CAAtH,GAA0HA,mBAA1H,GAAgJV,UAAzJ,MAAyK,IAAzK,IAAiLS,KAAK,KAAK,KAAK,CAAhM,GAAoMA,KAApM,GAA4M,CAAnN;AACD,CARiD,CAA3C;AASP,OAAO,IAAII,0BAA0B,GAAGnF,cAAc,CAAC,CAAC2E,sBAAD,EAAyBtD,oBAAzB,EAA+CF,YAA/C,EAA6DD,oBAA7D,EAAmF0D,sBAAnF,EAA2GrB,yBAA3G,EAAsIc,cAAtI,CAAD,EAAwJtD,sBAAxJ,CAA/C;AACP,OAAO,IAAIqE,sBAAsB,GAAGpF,cAAc,CAAC,CAACmF,0BAAD,EAA6BpC,mCAA7B,CAAD,EAAoE,CAACsC,eAAD,EAAkBC,WAAlB,KAAkC;AACtJ,MAAID,eAAe,IAAI,IAAnB,IAA2BC,WAAW,IAAI,IAA9C,EAAoD;AAClD,WAAOpD,SAAP;AACD;;AACD,MAAIqD,QAAQ,GAAGF,eAAe,CAACG,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACnC,OAAF,KAAcgC,WAAW,CAAChC,OAA1B,IAAqCgC,WAAW,CAACjC,OAAZ,IAAuB,IAA5D,IAAoEoC,CAAC,CAACC,QAAF,CAAWC,QAAX,CAAoBL,WAAW,CAACjC,OAAhC,CAA9F,CAAf;;AACA,MAAIkC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOrD,SAAP;AACD;;AACD,SAAOqD,QAAQ,CAACA,QAAhB;AACD,CATiD,CAA3C;AAUP,IAAIK,iBAAiB,GAAG5F,cAAc,CAAC,CAACuB,wBAAD,EAA2BC,wBAA3B,EAAqDF,qBAArD,CAAD,EAA8Ef,kBAA9E,CAAtC;;AACA,IAAIsF,0BAA0B,GAAG,CAACjE,KAAD,EAAQC,YAAR,EAAsBW,WAAtB,KAAsC;AACrE,MAAIgB,MAAM,GAAG7C,iBAAiB,CAACiB,KAAD,CAA9B;;AACA,MAAI4B,MAAM,KAAK,SAAf,EAA0B;AACxB,WAAOoC,iBAAiB,CAAChE,KAAD,EAAQ,YAAR,EAAsBC,YAAtB,CAAxB;AACD;;AACD,SAAO+D,iBAAiB,CAAChE,KAAD,EAAQ,WAAR,EAAqBY,WAArB,CAAxB;AACD,CAND;;AAOA,IAAIsD,sBAAsB,GAAG9F,cAAc,CAAC,CAAC6F,0BAAD,EAA6B9C,mCAA7B,CAAD,EAAoE9B,kBAApE,CAA3C;AACA,OAAO,IAAI8E,sBAAsB,GAAG/F,cAAc,CAAC,CAAC0C,wBAAD,EAA2BC,oBAA3B,EAAiDZ,yBAAjD,EAA4EI,qBAA5E,EAAmGhC,0BAAnG,EAA+H4C,mCAA/H,EAAoKQ,yBAApK,EAA+L5C,iBAA/L,EAAkNkD,eAAlN,EAAmOpD,kBAAnO,EAAuPsD,SAAvP,EAAkQqB,sBAAlQ,EAA0RU,sBAA1R,CAAD,EAAoT,CAACnC,SAAD,EAAYC,cAAZ,EAA4BH,UAA5B,EAAwCC,eAAxC,EAAyDsC,KAAzD,EAAgElD,iBAAhE,EAAmFmD,QAAnF,EAA6FzC,MAA7F,EAAqG0C,SAArG,EAAgHC,YAAhH,EAA8HlC,KAA9H,EAAqImC,GAArI,EAA0IC,WAA1I,KAA0J;AAC9f,MAAI;AACFC,IAAAA,SADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA;AAHE,MAIAR,KAJJ;;AAKA,MAAIlD,iBAAiB,IAAI,IAArB,IAA6BW,UAAU,IAAI,IAA3C,IAAmDE,SAAS,IAAI,IAAhE,IAAwE2C,SAAS,IAAI,IAArF,IAA6FL,QAAQ,IAAI,IAAzG,IAAiHG,GAAG,IAAI,IAAxH,IAAgI5C,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,QAAnK,IAA+KE,eAAe,IAAI,IAAtM,EAA4M;AAC1M,WAAO,EAAP;AACD;;AACD,MAAI;AACFL,IAAAA,OADE;AAEFoD,IAAAA;AAFE,MAGA3D,iBAHJ;AAIA,MAAI;AACF4D,IAAAA,EADE;AAEFC,IAAAA,EAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA;AAJE,MAKAV,YALJ;AAMA,MAAIW,aAAa,GAAGR,SAAS,CAACS,KAAV,CAAgBR,cAAhB,EAAgCC,YAAY,GAAG,CAA/C,CAApB;AACA,MAAI1C,WAAW,GAAGN,MAAM,KAAK,SAAX,GAAuBC,UAAvB,GAAoCE,SAAtD;AACA,MAAIqD,aAAa,GAAGX,WAAW,GAAGvC,WAAW,CAAC7B,KAAZ,CAAkBgF,MAAlB,EAAH,GAAgC,IAA/D;AACA,SAAOhH,yBAAyB,CAAC;AAC/B0D,IAAAA,SAD+B;AAE/BC,IAAAA,cAF+B;AAG/BqC,IAAAA,QAH+B;AAI/BC,IAAAA,SAJ+B;AAK/BjC,IAAAA,KAL+B;AAM/ByC,IAAAA,EAN+B;AAO/BC,IAAAA,EAP+B;AAQ/BtD,IAAAA,OAR+B;AAS/BkD,IAAAA,cAT+B;AAU/BO,IAAAA,aAV+B;AAW/BD,IAAAA,QAX+B;AAY/BrD,IAAAA,MAZ+B;AAa/BiD,IAAAA,YAb+B;AAc/BL,IAAAA,GAd+B;AAe/B3C,IAAAA,UAf+B;AAgB/BC,IAAAA,eAhB+B;AAiB/B2C,IAAAA,WAjB+B;AAkB/BW,IAAAA,aAlB+B;AAmB/BJ,IAAAA;AAnB+B,GAAD,CAAhC;AAqBD,CA3CiD,CAA3C;AA4CP,OAAO,IAAIM,4BAA4B,GAAGlH,cAAc,CAAC,CAACE,qCAAD,EAAwC,CAACiH,EAAD,EAAKC,CAAL,KAAWA,CAAnD,CAAD,EAAwD,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACrI,MAAI;AACFhB,IAAAA,SADE;AAEFC,IAAAA,cAFE;AAGFC,IAAAA;AAHE,MAIAa,KAJJ;;AAKA,MAAIf,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,EAAP;AACD;;AACD,MAAIQ,aAAa,GAAGR,SAAS,CAACS,KAAV,CAAgBR,cAAhB,EAAgCC,YAAY,GAAG,CAA/C,CAApB;;AACA,MAAIM,aAAa,CAAChI,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,WAAO,EAAP;AACD;;AACD,SAAOgI,aAAa,CAACS,GAAd,CAAkBC,KAAK,IAAI;AAChC,WAAO;AACLpE,MAAAA,IAAI,EAAEkE,UADD;AAEL;AACAjI,MAAAA,KAAK,EAAEmI,KAAK,CAACC,IAHR;AAIL;AACAC,MAAAA,KAAK,EAAEF,KAAK,CAACG,IALR;AAMLC,MAAAA,OAAO,EAAEJ;AANJ,KAAP;AAQD,GATM,CAAP;AAUD,CAvBuD,CAAjD","sourcesContent":["function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { createSelector } from 'reselect';\nimport { computeRadialBarDataItems } from '../../polar/RadialBar';\nimport { selectChartDataAndAlwaysIgnoreIndexes, selectChartDataWithIndexes } from './dataSelectors';\nimport { selectPolarAxisScale, selectPolarAxisTicks, selectPolarGraphicalItemAxisTicks } from './polarScaleSelectors';\nimport { combineStackGroups } from './axisSelectors';\nimport { selectAngleAxis, selectPolarViewBox, selectRadiusAxis } from './polarAxisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { getBandSizeOfAxis, getBaseValueOfBar, isCategoricalAxis } from '../../util/ChartUtils';\nimport { combineAllBarPositions, combineBarSizeList, combineStackedData } from './barSelectors';\nimport { selectBarCategoryGap, selectBarGap, selectRootBarSize, selectRootMaxBarSize, selectStackOffsetType } from './rootPropsSelectors';\nimport { selectPolarDisplayedData, selectPolarItemsSettings, selectUnfilteredPolarItems } from './polarSelectors';\nimport { isNullish } from '../../util/DataUtils';\nvar selectRadiusAxisForRadialBar = (state, radiusAxisId) => selectRadiusAxis(state, radiusAxisId);\nvar selectRadiusAxisScaleForRadar = (state, radiusAxisId) => selectPolarAxisScale(state, 'radiusAxis', radiusAxisId);\nexport var selectRadiusAxisWithScale = createSelector([selectRadiusAxisForRadialBar, selectRadiusAxisScaleForRadar], (axis, scale) => {\n  if (axis == null || scale == null) {\n    return undefined;\n  }\n  return _objectSpread(_objectSpread({}, axis), {}, {\n    scale\n  });\n});\nexport var selectRadiusAxisTicks = (state, radiusAxisId, _angleAxisId, isPanorama) => {\n  return selectPolarGraphicalItemAxisTicks(state, 'radiusAxis', radiusAxisId, isPanorama);\n};\nvar selectAngleAxisForRadialBar = (state, _radiusAxisId, angleAxisId) => selectAngleAxis(state, angleAxisId);\nvar selectAngleAxisScaleForRadialBar = (state, _radiusAxisId, angleAxisId) => selectPolarAxisScale(state, 'angleAxis', angleAxisId);\nexport var selectAngleAxisWithScale = createSelector([selectAngleAxisForRadialBar, selectAngleAxisScaleForRadialBar], (axis, scale) => {\n  if (axis == null || scale == null) {\n    return undefined;\n  }\n  return _objectSpread(_objectSpread({}, axis), {}, {\n    scale\n  });\n});\nvar selectAngleAxisTicks = (state, _radiusAxisId, angleAxisId, isPanorama) => {\n  return selectPolarAxisTicks(state, 'angleAxis', angleAxisId, isPanorama);\n};\nvar pickRadialBarSettings = (_state, _radiusAxisId, _angleAxisId, radialBarSettings) => radialBarSettings;\nvar selectSynchronisedRadialBarSettings = createSelector([selectUnfilteredPolarItems, pickRadialBarSettings], (graphicalItems, radialBarSettingsFromProps) => {\n  if (graphicalItems.some(pgis => pgis.type === 'radialBar' && radialBarSettingsFromProps.dataKey === pgis.dataKey && radialBarSettingsFromProps.stackId === pgis.stackId)) {\n    return radialBarSettingsFromProps;\n  }\n  return undefined;\n});\nexport var selectBandSizeOfPolarAxis = createSelector([selectChartLayout, selectRadiusAxisWithScale, selectRadiusAxisTicks, selectAngleAxisWithScale, selectAngleAxisTicks], (layout, radiusAxis, radiusAxisTicks, angleAxis, angleAxisTicks) => {\n  if (isCategoricalAxis(layout, 'radiusAxis')) {\n    return getBandSizeOfAxis(radiusAxis, radiusAxisTicks, false);\n  }\n  return getBandSizeOfAxis(angleAxis, angleAxisTicks, false);\n});\nexport var selectBaseValue = createSelector([selectAngleAxisWithScale, selectRadiusAxisWithScale, selectChartLayout], (angleAxis, radiusAxis, layout) => {\n  var numericAxis = layout === 'radial' ? angleAxis : radiusAxis;\n  if (numericAxis == null || numericAxis.scale == null) {\n    return undefined;\n  }\n  return getBaseValueOfBar({\n    numericAxis\n  });\n});\nvar pickCells = (_state, _radiusAxisId, _angleAxisId, _radialBarSettings, cells) => cells;\nvar pickAngleAxisId = (_state, _radiusAxisId, angleAxisId, _radialBarSettings, _cells) => angleAxisId;\nvar pickRadiusAxisId = (_state, radiusAxisId, _angleAxisId, _radialBarSettings, _cells) => radiusAxisId;\nexport var pickMaxBarSize = (_state, _radiusAxisId, _angleAxisId, radialBarSettings, _cells) => radialBarSettings.maxBarSize;\nvar selectAllVisibleRadialBars = createSelector([selectChartLayout, selectUnfilteredPolarItems, pickAngleAxisId, pickRadiusAxisId], (layout, allItems, angleAxisId, radiusAxisId) => {\n  return allItems.filter(i => {\n    if (layout === 'centric') {\n      return i.angleAxisId === angleAxisId;\n    }\n    return i.radiusAxisId === radiusAxisId;\n  }).filter(i => i.hide === false).filter(i => i.type === 'radialBar');\n});\n\n/**\n * The generator never returned the totalSize which means that barSize in polar chart can not support percent values.\n * We can add that if we want to I suppose.\n * @returns undefined - but it should be a total size of numerical axis in polar chart\n */\nvar selectPolarBarAxisSize = () => undefined;\nexport var selectPolarBarSizeList = createSelector([selectAllVisibleRadialBars, selectRootBarSize, selectPolarBarAxisSize], combineBarSizeList);\nexport var selectPolarBarBandSize = createSelector([selectChartLayout, selectRootMaxBarSize, selectAngleAxisWithScale, selectAngleAxisTicks, selectRadiusAxisWithScale, selectRadiusAxisTicks, pickMaxBarSize], (layout, globalMaxBarSize, angleAxis, angleAxisTicks, radiusAxis, radiusAxisTicks, childMaxBarSize) => {\n  var _ref2, _getBandSizeOfAxis2;\n  var maxBarSize = isNullish(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n  if (layout === 'centric') {\n    var _ref, _getBandSizeOfAxis;\n    return (_ref = (_getBandSizeOfAxis = getBandSizeOfAxis(angleAxis, angleAxisTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref !== void 0 ? _ref : 0;\n  }\n  return (_ref2 = (_getBandSizeOfAxis2 = getBandSizeOfAxis(radiusAxis, radiusAxisTicks, true)) !== null && _getBandSizeOfAxis2 !== void 0 ? _getBandSizeOfAxis2 : maxBarSize) !== null && _ref2 !== void 0 ? _ref2 : 0;\n});\nexport var selectAllPolarBarPositions = createSelector([selectPolarBarSizeList, selectRootMaxBarSize, selectBarGap, selectBarCategoryGap, selectPolarBarBandSize, selectBandSizeOfPolarAxis, pickMaxBarSize], combineAllBarPositions);\nexport var selectPolarBarPosition = createSelector([selectAllPolarBarPositions, selectSynchronisedRadialBarSettings], (allBarPositions, barSettings) => {\n  if (allBarPositions == null || barSettings == null) {\n    return undefined;\n  }\n  var position = allBarPositions.find(p => p.stackId === barSettings.stackId && barSettings.dataKey != null && p.dataKeys.includes(barSettings.dataKey));\n  if (position == null) {\n    return undefined;\n  }\n  return position.position;\n});\nvar selectStackGroups = createSelector([selectPolarDisplayedData, selectPolarItemsSettings, selectStackOffsetType], combineStackGroups);\nvar selectRadialBarStackGroups = (state, radiusAxisId, angleAxisId) => {\n  var layout = selectChartLayout(state);\n  if (layout === 'centric') {\n    return selectStackGroups(state, 'radiusAxis', radiusAxisId);\n  }\n  return selectStackGroups(state, 'angleAxis', angleAxisId);\n};\nvar selectPolarStackedData = createSelector([selectRadialBarStackGroups, selectSynchronisedRadialBarSettings], combineStackedData);\nexport var selectRadialBarSectors = createSelector([selectAngleAxisWithScale, selectAngleAxisTicks, selectRadiusAxisWithScale, selectRadiusAxisTicks, selectChartDataWithIndexes, selectSynchronisedRadialBarSettings, selectBandSizeOfPolarAxis, selectChartLayout, selectBaseValue, selectPolarViewBox, pickCells, selectPolarBarPosition, selectPolarStackedData], (angleAxis, angleAxisTicks, radiusAxis, radiusAxisTicks, _ref3, radialBarSettings, bandSize, layout, baseValue, polarViewBox, cells, pos, stackedData) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref3;\n  if (radialBarSettings == null || radiusAxis == null || angleAxis == null || chartData == null || bandSize == null || pos == null || layout !== 'centric' && layout !== 'radial' || radiusAxisTicks == null) {\n    return [];\n  }\n  var {\n    dataKey,\n    minPointSize\n  } = radialBarSettings;\n  var {\n    cx,\n    cy,\n    startAngle,\n    endAngle\n  } = polarViewBox;\n  var displayedData = chartData.slice(dataStartIndex, dataEndIndex + 1);\n  var numericAxis = layout === 'centric' ? radiusAxis : angleAxis;\n  var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n  return computeRadialBarDataItems({\n    angleAxis,\n    angleAxisTicks,\n    bandSize,\n    baseValue,\n    cells,\n    cx,\n    cy,\n    dataKey,\n    dataStartIndex,\n    displayedData,\n    endAngle,\n    layout,\n    minPointSize,\n    pos,\n    radiusAxis,\n    radiusAxisTicks,\n    stackedData,\n    stackedDomain,\n    startAngle\n  });\n});\nexport var selectRadialBarLegendPayload = createSelector([selectChartDataAndAlwaysIgnoreIndexes, (_s, l) => l], (_ref4, legendType) => {\n  var {\n    chartData,\n    dataStartIndex,\n    dataEndIndex\n  } = _ref4;\n  if (chartData == null) {\n    return [];\n  }\n  var displayedData = chartData.slice(dataStartIndex, dataEndIndex + 1);\n  if (displayedData.length === 0) {\n    return [];\n  }\n  return displayedData.map(entry => {\n    return {\n      type: legendType,\n      // @ts-expect-error we need a better typing for our data inputs\n      value: entry.name,\n      // @ts-expect-error we need a better typing for our data inputs\n      color: entry.fill,\n      payload: entry\n    };\n  });\n});"]},"metadata":{},"sourceType":"module"}