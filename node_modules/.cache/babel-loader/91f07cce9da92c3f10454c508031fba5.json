{"ast":null,"code":"function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n\n    return n;\n  }, _extends.apply(null, arguments);\n}\n/**\n * @fileOverview Rectangle\n */\n\n\nimport * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { filterProps } from '../util/ReactUtils';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { Animate } from '../animation/Animate';\n\nvar getTrapezoidPath = (x, y, upperWidth, lowerWidth, height) => {\n  var widthGap = upperWidth - lowerWidth;\n  var path;\n  path = \"M \".concat(x, \",\").concat(y);\n  path += \"L \".concat(x + upperWidth, \",\").concat(y);\n  path += \"L \".concat(x + upperWidth - widthGap / 2, \",\").concat(y + height);\n  path += \"L \".concat(x + upperWidth - widthGap / 2 - lowerWidth, \",\").concat(y + height);\n  path += \"L \".concat(x, \",\").concat(y, \" Z\");\n  return path;\n};\n\nvar defaultProps = {\n  x: 0,\n  y: 0,\n  upperWidth: 0,\n  lowerWidth: 0,\n  height: 0,\n  isUpdateAnimationActive: false,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease'\n};\nexport var Trapezoid = props => {\n  var trapezoidProps = resolveDefaultProps(props, defaultProps);\n  var pathRef = useRef();\n  var [totalLength, setTotalLength] = useState(-1);\n  useEffect(() => {\n    if (pathRef.current && pathRef.current.getTotalLength) {\n      try {\n        var pathTotalLength = pathRef.current.getTotalLength();\n\n        if (pathTotalLength) {\n          setTotalLength(pathTotalLength);\n        }\n      } catch (_unused) {// calculate total length error\n      }\n    }\n  }, []);\n  var {\n    x,\n    y,\n    upperWidth,\n    lowerWidth,\n    height,\n    className\n  } = trapezoidProps;\n  var {\n    animationEasing,\n    animationDuration,\n    animationBegin,\n    isUpdateAnimationActive\n  } = trapezoidProps;\n\n  if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {\n    return null;\n  }\n\n  var layerClass = clsx('recharts-trapezoid', className);\n\n  if (!isUpdateAnimationActive) {\n    return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(trapezoidProps, true), {\n      className: layerClass,\n      d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(Animate, {\n    canBegin: totalLength > 0,\n    from: {\n      upperWidth: 0,\n      lowerWidth: 0,\n      height,\n      x,\n      y\n    },\n    to: {\n      upperWidth,\n      lowerWidth,\n      height,\n      x,\n      y\n    },\n    duration: animationDuration // @ts-expect-error TODO - fix the type error\n    ,\n    animationEasing: animationEasing,\n    isActive: isUpdateAnimationActive\n  }, _ref => {\n    var {\n      upperWidth: currUpperWidth,\n      lowerWidth: currLowerWidth,\n      height: currHeight,\n      x: currX,\n      y: currY\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Animate, {\n      canBegin: totalLength > 0 // @ts-expect-error TODO - fix the type error\n      ,\n      from: \"0px \".concat(totalLength === -1 ? 1 : totalLength, \"px\") // @ts-expect-error TODO - fix the type error\n      ,\n      to: \"\".concat(totalLength, \"px 0px\"),\n      attributeName: \"strokeDasharray\",\n      begin: animationBegin,\n      duration: animationDuration,\n      easing: animationEasing\n    }, /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(trapezoidProps, true), {\n      className: layerClass,\n      d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),\n      ref: pathRef\n    })));\n  });\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/shape/Trapezoid.js"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","React","useEffect","useRef","useState","clsx","filterProps","resolveDefaultProps","Animate","getTrapezoidPath","x","y","upperWidth","lowerWidth","height","widthGap","path","concat","defaultProps","isUpdateAnimationActive","animationBegin","animationDuration","animationEasing","Trapezoid","props","trapezoidProps","pathRef","totalLength","setTotalLength","current","getTotalLength","pathTotalLength","_unused","className","layerClass","createElement","d","canBegin","from","to","duration","isActive","_ref","currUpperWidth","currLowerWidth","currHeight","currX","currY","attributeName","begin","easing","ref"],"mappings":"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","sourcesContent":["function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/**\n * @fileOverview Rectangle\n */\nimport * as React from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { filterProps } from '../util/ReactUtils';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { Animate } from '../animation/Animate';\nvar getTrapezoidPath = (x, y, upperWidth, lowerWidth, height) => {\n  var widthGap = upperWidth - lowerWidth;\n  var path;\n  path = \"M \".concat(x, \",\").concat(y);\n  path += \"L \".concat(x + upperWidth, \",\").concat(y);\n  path += \"L \".concat(x + upperWidth - widthGap / 2, \",\").concat(y + height);\n  path += \"L \".concat(x + upperWidth - widthGap / 2 - lowerWidth, \",\").concat(y + height);\n  path += \"L \".concat(x, \",\").concat(y, \" Z\");\n  return path;\n};\nvar defaultProps = {\n  x: 0,\n  y: 0,\n  upperWidth: 0,\n  lowerWidth: 0,\n  height: 0,\n  isUpdateAnimationActive: false,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease'\n};\nexport var Trapezoid = props => {\n  var trapezoidProps = resolveDefaultProps(props, defaultProps);\n  var pathRef = useRef();\n  var [totalLength, setTotalLength] = useState(-1);\n  useEffect(() => {\n    if (pathRef.current && pathRef.current.getTotalLength) {\n      try {\n        var pathTotalLength = pathRef.current.getTotalLength();\n        if (pathTotalLength) {\n          setTotalLength(pathTotalLength);\n        }\n      } catch (_unused) {\n        // calculate total length error\n      }\n    }\n  }, []);\n  var {\n    x,\n    y,\n    upperWidth,\n    lowerWidth,\n    height,\n    className\n  } = trapezoidProps;\n  var {\n    animationEasing,\n    animationDuration,\n    animationBegin,\n    isUpdateAnimationActive\n  } = trapezoidProps;\n  if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {\n    return null;\n  }\n  var layerClass = clsx('recharts-trapezoid', className);\n  if (!isUpdateAnimationActive) {\n    return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(trapezoidProps, true), {\n      className: layerClass,\n      d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)\n    })));\n  }\n  return /*#__PURE__*/React.createElement(Animate, {\n    canBegin: totalLength > 0,\n    from: {\n      upperWidth: 0,\n      lowerWidth: 0,\n      height,\n      x,\n      y\n    },\n    to: {\n      upperWidth,\n      lowerWidth,\n      height,\n      x,\n      y\n    },\n    duration: animationDuration\n    // @ts-expect-error TODO - fix the type error\n    ,\n    animationEasing: animationEasing,\n    isActive: isUpdateAnimationActive\n  }, _ref => {\n    var {\n      upperWidth: currUpperWidth,\n      lowerWidth: currLowerWidth,\n      height: currHeight,\n      x: currX,\n      y: currY\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Animate, {\n      canBegin: totalLength > 0\n      // @ts-expect-error TODO - fix the type error\n      ,\n      from: \"0px \".concat(totalLength === -1 ? 1 : totalLength, \"px\")\n      // @ts-expect-error TODO - fix the type error\n      ,\n      to: \"\".concat(totalLength, \"px 0px\"),\n      attributeName: \"strokeDasharray\",\n      begin: animationBegin,\n      duration: animationDuration,\n      easing: animationEasing\n    }, /*#__PURE__*/React.createElement(\"path\", _extends({}, filterProps(trapezoidProps, true), {\n      className: layerClass,\n      d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),\n      ref: pathRef\n    })));\n  });\n};"]},"metadata":{},"sourceType":"module"}