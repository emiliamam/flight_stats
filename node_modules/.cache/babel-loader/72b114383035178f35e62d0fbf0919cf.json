{"ast":null,"code":"import { createAction, createListenerMiddleware } from '@reduxjs/toolkit';\nimport { selectActiveLabel, selectActiveTooltipCoordinate, selectActiveTooltipDataKey, selectActiveTooltipIndex, selectIsTooltipActive } from './selectors/tooltipSelectors';\nexport var externalEventAction = createAction('externalEvent');\nexport var externalEventsMiddleware = createListenerMiddleware();\nexternalEventsMiddleware.startListening({\n  actionCreator: externalEventAction,\n  effect: (action, listenerApi) => {\n    if (action.payload.handler == null) {\n      return;\n    }\n\n    var state = listenerApi.getState();\n    var nextState = {\n      activeCoordinate: selectActiveTooltipCoordinate(state),\n      activeDataKey: selectActiveTooltipDataKey(state),\n      activeIndex: selectActiveTooltipIndex(state),\n      activeLabel: selectActiveLabel(state),\n      activeTooltipIndex: selectActiveTooltipIndex(state),\n      isTooltipActive: selectIsTooltipActive(state)\n    };\n    action.payload.handler(nextState, action.payload.reactEvent);\n  }\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/externalEventsMiddleware.js"],"names":["createAction","createListenerMiddleware","selectActiveLabel","selectActiveTooltipCoordinate","selectActiveTooltipDataKey","selectActiveTooltipIndex","selectIsTooltipActive","externalEventAction","externalEventsMiddleware","startListening","actionCreator","effect","action","listenerApi","payload","handler","state","getState","nextState","activeCoordinate","activeDataKey","activeIndex","activeLabel","activeTooltipIndex","isTooltipActive","reactEvent"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,wBAAvB,QAAuD,kBAAvD;AACA,SAASC,iBAAT,EAA4BC,6BAA5B,EAA2DC,0BAA3D,EAAuFC,wBAAvF,EAAiHC,qBAAjH,QAA8I,8BAA9I;AACA,OAAO,IAAIC,mBAAmB,GAAGP,YAAY,CAAC,eAAD,CAAtC;AACP,OAAO,IAAIQ,wBAAwB,GAAGP,wBAAwB,EAAvD;AACPO,wBAAwB,CAACC,cAAzB,CAAwC;AACtCC,EAAAA,aAAa,EAAEH,mBADuB;AAEtCI,EAAAA,MAAM,EAAE,CAACC,MAAD,EAASC,WAAT,KAAyB;AAC/B,QAAID,MAAM,CAACE,OAAP,CAAeC,OAAf,IAA0B,IAA9B,EAAoC;AAClC;AACD;;AACD,QAAIC,KAAK,GAAGH,WAAW,CAACI,QAAZ,EAAZ;AACA,QAAIC,SAAS,GAAG;AACdC,MAAAA,gBAAgB,EAAEhB,6BAA6B,CAACa,KAAD,CADjC;AAEdI,MAAAA,aAAa,EAAEhB,0BAA0B,CAACY,KAAD,CAF3B;AAGdK,MAAAA,WAAW,EAAEhB,wBAAwB,CAACW,KAAD,CAHvB;AAIdM,MAAAA,WAAW,EAAEpB,iBAAiB,CAACc,KAAD,CAJhB;AAKdO,MAAAA,kBAAkB,EAAElB,wBAAwB,CAACW,KAAD,CAL9B;AAMdQ,MAAAA,eAAe,EAAElB,qBAAqB,CAACU,KAAD;AANxB,KAAhB;AAQAJ,IAAAA,MAAM,CAACE,OAAP,CAAeC,OAAf,CAAuBG,SAAvB,EAAkCN,MAAM,CAACE,OAAP,CAAeW,UAAjD;AACD;AAhBqC,CAAxC","sourcesContent":["import { createAction, createListenerMiddleware } from '@reduxjs/toolkit';\nimport { selectActiveLabel, selectActiveTooltipCoordinate, selectActiveTooltipDataKey, selectActiveTooltipIndex, selectIsTooltipActive } from './selectors/tooltipSelectors';\nexport var externalEventAction = createAction('externalEvent');\nexport var externalEventsMiddleware = createListenerMiddleware();\nexternalEventsMiddleware.startListening({\n  actionCreator: externalEventAction,\n  effect: (action, listenerApi) => {\n    if (action.payload.handler == null) {\n      return;\n    }\n    var state = listenerApi.getState();\n    var nextState = {\n      activeCoordinate: selectActiveTooltipCoordinate(state),\n      activeDataKey: selectActiveTooltipDataKey(state),\n      activeIndex: selectActiveTooltipIndex(state),\n      activeLabel: selectActiveLabel(state),\n      activeTooltipIndex: selectActiveTooltipIndex(state),\n      isTooltipActive: selectIsTooltipActive(state)\n    };\n    action.payload.handler(nextState, action.payload.reactEvent);\n  }\n});"]},"metadata":{},"sourceType":"module"}