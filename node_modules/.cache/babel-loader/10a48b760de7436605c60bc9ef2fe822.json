{"ast":null,"code":"import { createAction, createListenerMiddleware } from '@reduxjs/toolkit';\nimport { mouseLeaveChart, setMouseClickAxisIndex, setMouseOverAxisIndex } from './tooltipSlice';\nimport { selectActivePropsFromChartPointer } from './selectors/selectActivePropsFromChartPointer';\nimport { selectTooltipEventType } from './selectors/selectTooltipEventType';\nimport { getChartPointer } from '../util/getChartPointer';\nexport var mouseClickAction = createAction('mouseClick');\nexport var mouseClickMiddleware = createListenerMiddleware(); // TODO: there's a bug here when you click the chart the activeIndex resets to zero\n\nmouseClickMiddleware.startListening({\n  actionCreator: mouseClickAction,\n  effect: (action, listenerApi) => {\n    var mousePointer = action.payload;\n    var activeProps = selectActivePropsFromChartPointer(listenerApi.getState(), getChartPointer(mousePointer));\n\n    if ((activeProps === null || activeProps === void 0 ? void 0 : activeProps.activeIndex) != null) {\n      listenerApi.dispatch(setMouseClickAxisIndex({\n        activeIndex: activeProps.activeIndex,\n        activeDataKey: undefined,\n        activeCoordinate: activeProps.activeCoordinate\n      }));\n    }\n  }\n});\nexport var mouseMoveAction = createAction('mouseMove');\nexport var mouseMoveMiddleware = createListenerMiddleware();\nmouseMoveMiddleware.startListening({\n  actionCreator: mouseMoveAction,\n  effect: (action, listenerApi) => {\n    var mousePointer = action.payload;\n    var state = listenerApi.getState();\n    var tooltipEventType = selectTooltipEventType(state, state.tooltip.settings.shared);\n    var activeProps = selectActivePropsFromChartPointer(state, getChartPointer(mousePointer)); // this functionality only applies to charts that have axes\n\n    if (tooltipEventType === 'axis') {\n      if ((activeProps === null || activeProps === void 0 ? void 0 : activeProps.activeIndex) != null) {\n        listenerApi.dispatch(setMouseOverAxisIndex({\n          activeIndex: activeProps.activeIndex,\n          activeDataKey: undefined,\n          activeCoordinate: activeProps.activeCoordinate\n        }));\n      } else {\n        // this is needed to clear tooltip state when the mouse moves out of the inRange (svg - offset) function, but not yet out of the svg\n        listenerApi.dispatch(mouseLeaveChart());\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/mouseEventsMiddleware.js"],"names":["createAction","createListenerMiddleware","mouseLeaveChart","setMouseClickAxisIndex","setMouseOverAxisIndex","selectActivePropsFromChartPointer","selectTooltipEventType","getChartPointer","mouseClickAction","mouseClickMiddleware","startListening","actionCreator","effect","action","listenerApi","mousePointer","payload","activeProps","getState","activeIndex","dispatch","activeDataKey","undefined","activeCoordinate","mouseMoveAction","mouseMoveMiddleware","state","tooltipEventType","tooltip","settings","shared"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,wBAAvB,QAAuD,kBAAvD;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,qBAAlD,QAA+E,gBAA/E;AACA,SAASC,iCAAT,QAAkD,+CAAlD;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,IAAIC,gBAAgB,GAAGR,YAAY,CAAC,YAAD,CAAnC;AACP,OAAO,IAAIS,oBAAoB,GAAGR,wBAAwB,EAAnD,C,CAEP;;AACAQ,oBAAoB,CAACC,cAArB,CAAoC;AAClCC,EAAAA,aAAa,EAAEH,gBADmB;AAElCI,EAAAA,MAAM,EAAE,CAACC,MAAD,EAASC,WAAT,KAAyB;AAC/B,QAAIC,YAAY,GAAGF,MAAM,CAACG,OAA1B;AACA,QAAIC,WAAW,GAAGZ,iCAAiC,CAACS,WAAW,CAACI,QAAZ,EAAD,EAAyBX,eAAe,CAACQ,YAAD,CAAxC,CAAnD;;AACA,QAAI,CAACE,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACE,WAAvE,KAAuF,IAA3F,EAAiG;AAC/FL,MAAAA,WAAW,CAACM,QAAZ,CAAqBjB,sBAAsB,CAAC;AAC1CgB,QAAAA,WAAW,EAAEF,WAAW,CAACE,WADiB;AAE1CE,QAAAA,aAAa,EAAEC,SAF2B;AAG1CC,QAAAA,gBAAgB,EAAEN,WAAW,CAACM;AAHY,OAAD,CAA3C;AAKD;AACF;AAZiC,CAApC;AAcA,OAAO,IAAIC,eAAe,GAAGxB,YAAY,CAAC,WAAD,CAAlC;AACP,OAAO,IAAIyB,mBAAmB,GAAGxB,wBAAwB,EAAlD;AACPwB,mBAAmB,CAACf,cAApB,CAAmC;AACjCC,EAAAA,aAAa,EAAEa,eADkB;AAEjCZ,EAAAA,MAAM,EAAE,CAACC,MAAD,EAASC,WAAT,KAAyB;AAC/B,QAAIC,YAAY,GAAGF,MAAM,CAACG,OAA1B;AACA,QAAIU,KAAK,GAAGZ,WAAW,CAACI,QAAZ,EAAZ;AACA,QAAIS,gBAAgB,GAAGrB,sBAAsB,CAACoB,KAAD,EAAQA,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuBC,MAA/B,CAA7C;AACA,QAAIb,WAAW,GAAGZ,iCAAiC,CAACqB,KAAD,EAAQnB,eAAe,CAACQ,YAAD,CAAvB,CAAnD,CAJ+B,CAM/B;;AACA,QAAIY,gBAAgB,KAAK,MAAzB,EAAiC;AAC/B,UAAI,CAACV,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACE,WAAvE,KAAuF,IAA3F,EAAiG;AAC/FL,QAAAA,WAAW,CAACM,QAAZ,CAAqBhB,qBAAqB,CAAC;AACzCe,UAAAA,WAAW,EAAEF,WAAW,CAACE,WADgB;AAEzCE,UAAAA,aAAa,EAAEC,SAF0B;AAGzCC,UAAAA,gBAAgB,EAAEN,WAAW,CAACM;AAHW,SAAD,CAA1C;AAKD,OAND,MAMO;AACL;AACAT,QAAAA,WAAW,CAACM,QAAZ,CAAqBlB,eAAe,EAApC;AACD;AACF;AACF;AArBgC,CAAnC","sourcesContent":["import { createAction, createListenerMiddleware } from '@reduxjs/toolkit';\nimport { mouseLeaveChart, setMouseClickAxisIndex, setMouseOverAxisIndex } from './tooltipSlice';\nimport { selectActivePropsFromChartPointer } from './selectors/selectActivePropsFromChartPointer';\nimport { selectTooltipEventType } from './selectors/selectTooltipEventType';\nimport { getChartPointer } from '../util/getChartPointer';\nexport var mouseClickAction = createAction('mouseClick');\nexport var mouseClickMiddleware = createListenerMiddleware();\n\n// TODO: there's a bug here when you click the chart the activeIndex resets to zero\nmouseClickMiddleware.startListening({\n  actionCreator: mouseClickAction,\n  effect: (action, listenerApi) => {\n    var mousePointer = action.payload;\n    var activeProps = selectActivePropsFromChartPointer(listenerApi.getState(), getChartPointer(mousePointer));\n    if ((activeProps === null || activeProps === void 0 ? void 0 : activeProps.activeIndex) != null) {\n      listenerApi.dispatch(setMouseClickAxisIndex({\n        activeIndex: activeProps.activeIndex,\n        activeDataKey: undefined,\n        activeCoordinate: activeProps.activeCoordinate\n      }));\n    }\n  }\n});\nexport var mouseMoveAction = createAction('mouseMove');\nexport var mouseMoveMiddleware = createListenerMiddleware();\nmouseMoveMiddleware.startListening({\n  actionCreator: mouseMoveAction,\n  effect: (action, listenerApi) => {\n    var mousePointer = action.payload;\n    var state = listenerApi.getState();\n    var tooltipEventType = selectTooltipEventType(state, state.tooltip.settings.shared);\n    var activeProps = selectActivePropsFromChartPointer(state, getChartPointer(mousePointer));\n\n    // this functionality only applies to charts that have axes\n    if (tooltipEventType === 'axis') {\n      if ((activeProps === null || activeProps === void 0 ? void 0 : activeProps.activeIndex) != null) {\n        listenerApi.dispatch(setMouseOverAxisIndex({\n          activeIndex: activeProps.activeIndex,\n          activeDataKey: undefined,\n          activeCoordinate: activeProps.activeCoordinate\n        }));\n      } else {\n        // this is needed to clear tooltip state when the mouse moves out of the inRange (svg - offset) function, but not yet out of the svg\n        listenerApi.dispatch(mouseLeaveChart());\n      }\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}