{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nvar selectAllTooltipPayloadConfiguration = createSelector([selectTooltipState], tooltipState => tooltipState.tooltipItemPayloads);\nexport var selectTooltipCoordinate = createSelector([selectAllTooltipPayloadConfiguration, selectTooltipPayloadSearcher, (_state, tooltipIndex, _dataKey) => tooltipIndex, (_state, _tooltipIndex, dataKey) => dataKey], (allTooltipConfigurations, tooltipPayloadSearcher, tooltipIndex, dataKey) => {\n  var mostRelevantTooltipConfiguration = allTooltipConfigurations.find(tooltipConfiguration => {\n    return tooltipConfiguration.settings.dataKey === dataKey;\n  });\n\n  if (mostRelevantTooltipConfiguration == null) {\n    return undefined;\n  }\n\n  var {\n    positions\n  } = mostRelevantTooltipConfiguration;\n\n  if (positions == null) {\n    return undefined;\n  } // @ts-expect-error tooltipPayloadSearcher is not typed well\n\n\n  var maybePosition = tooltipPayloadSearcher(positions, tooltipIndex);\n  return maybePosition;\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/selectors/touchSelectors.js"],"names":["createSelector","selectTooltipPayloadSearcher","selectTooltipState","selectAllTooltipPayloadConfiguration","tooltipState","tooltipItemPayloads","selectTooltipCoordinate","_state","tooltipIndex","_dataKey","_tooltipIndex","dataKey","allTooltipConfigurations","tooltipPayloadSearcher","mostRelevantTooltipConfiguration","find","tooltipConfiguration","settings","undefined","positions","maybePosition"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,IAAIC,oCAAoC,GAAGH,cAAc,CAAC,CAACE,kBAAD,CAAD,EAAuBE,YAAY,IAAIA,YAAY,CAACC,mBAApD,CAAzD;AACA,OAAO,IAAIC,uBAAuB,GAAGN,cAAc,CAAC,CAACG,oCAAD,EAAuCF,4BAAvC,EAAqE,CAACM,MAAD,EAASC,YAAT,EAAuBC,QAAvB,KAAoCD,YAAzG,EAAuH,CAACD,MAAD,EAASG,aAAT,EAAwBC,OAAxB,KAAoCA,OAA3J,CAAD,EAAsK,CAACC,wBAAD,EAA2BC,sBAA3B,EAAmDL,YAAnD,EAAiEG,OAAjE,KAA6E;AACpS,MAAIG,gCAAgC,GAAGF,wBAAwB,CAACG,IAAzB,CAA8BC,oBAAoB,IAAI;AAC3F,WAAOA,oBAAoB,CAACC,QAArB,CAA8BN,OAA9B,KAA0CA,OAAjD;AACD,GAFsC,CAAvC;;AAGA,MAAIG,gCAAgC,IAAI,IAAxC,EAA8C;AAC5C,WAAOI,SAAP;AACD;;AACD,MAAI;AACFC,IAAAA;AADE,MAEAL,gCAFJ;;AAGA,MAAIK,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAOD,SAAP;AACD,GAZmS,CAapS;;;AACA,MAAIE,aAAa,GAAGP,sBAAsB,CAACM,SAAD,EAAYX,YAAZ,CAA1C;AACA,SAAOY,aAAP;AACD,CAhBkD,CAA5C","sourcesContent":["import { createSelector } from 'reselect';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nvar selectAllTooltipPayloadConfiguration = createSelector([selectTooltipState], tooltipState => tooltipState.tooltipItemPayloads);\nexport var selectTooltipCoordinate = createSelector([selectAllTooltipPayloadConfiguration, selectTooltipPayloadSearcher, (_state, tooltipIndex, _dataKey) => tooltipIndex, (_state, _tooltipIndex, dataKey) => dataKey], (allTooltipConfigurations, tooltipPayloadSearcher, tooltipIndex, dataKey) => {\n  var mostRelevantTooltipConfiguration = allTooltipConfigurations.find(tooltipConfiguration => {\n    return tooltipConfiguration.settings.dataKey === dataKey;\n  });\n  if (mostRelevantTooltipConfiguration == null) {\n    return undefined;\n  }\n  var {\n    positions\n  } = mostRelevantTooltipConfiguration;\n  if (positions == null) {\n    return undefined;\n  }\n  // @ts-expect-error tooltipPayloadSearcher is not typed well\n  var maybePosition = tooltipPayloadSearcher(positions, tooltipIndex);\n  return maybePosition;\n});"]},"metadata":{},"sourceType":"module"}