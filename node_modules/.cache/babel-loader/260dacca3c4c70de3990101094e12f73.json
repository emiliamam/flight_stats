{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../state/hooks';\nimport { selectContainerScale } from '../state/selectors/containerSelectors';\nimport { setScale } from '../state/layoutSlice';\nimport { isWellBehavedNumber } from './isWellBehavedNumber';\nexport function useReportScale() {\n  var dispatch = useAppDispatch();\n  var [ref, setRef] = useState(null);\n  var scale = useAppSelector(selectContainerScale);\n  useEffect(() => {\n    if (ref == null) {\n      return;\n    }\n\n    var rect = ref.getBoundingClientRect();\n    var newScale = rect.width / ref.offsetWidth;\n\n    if (isWellBehavedNumber(newScale) && newScale !== scale) {\n      dispatch(setScale(newScale));\n    }\n  }, [ref, dispatch, scale]);\n  return setRef;\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/util/useReportScale.js"],"names":["useEffect","useState","useAppDispatch","useAppSelector","selectContainerScale","setScale","isWellBehavedNumber","useReportScale","dispatch","ref","setRef","scale","rect","getBoundingClientRect","newScale","width","offsetWidth"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,gBAA/C;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAIC,QAAQ,GAAGN,cAAc,EAA7B;AACA,MAAI,CAACO,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,IAAD,CAA5B;AACA,MAAIU,KAAK,GAAGR,cAAc,CAACC,oBAAD,CAA1B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,GAAG,IAAI,IAAX,EAAiB;AACf;AACD;;AACD,QAAIG,IAAI,GAAGH,GAAG,CAACI,qBAAJ,EAAX;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,KAAL,GAAaN,GAAG,CAACO,WAAhC;;AACA,QAAIV,mBAAmB,CAACQ,QAAD,CAAnB,IAAiCA,QAAQ,KAAKH,KAAlD,EAAyD;AACvDH,MAAAA,QAAQ,CAACH,QAAQ,CAACS,QAAD,CAAT,CAAR;AACD;AACF,GATQ,EASN,CAACL,GAAD,EAAMD,QAAN,EAAgBG,KAAhB,CATM,CAAT;AAUA,SAAOD,MAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../state/hooks';\nimport { selectContainerScale } from '../state/selectors/containerSelectors';\nimport { setScale } from '../state/layoutSlice';\nimport { isWellBehavedNumber } from './isWellBehavedNumber';\nexport function useReportScale() {\n  var dispatch = useAppDispatch();\n  var [ref, setRef] = useState(null);\n  var scale = useAppSelector(selectContainerScale);\n  useEffect(() => {\n    if (ref == null) {\n      return;\n    }\n    var rect = ref.getBoundingClientRect();\n    var newScale = rect.width / ref.offsetWidth;\n    if (isWellBehavedNumber(newScale) && newScale !== scale) {\n      dispatch(setScale(newScale));\n    }\n  }, [ref, dispatch, scale]);\n  return setRef;\n}"]},"metadata":{},"sourceType":"module"}