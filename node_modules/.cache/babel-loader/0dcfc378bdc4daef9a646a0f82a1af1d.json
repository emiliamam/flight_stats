{"ast":null,"code":"import { useEffect } from 'react';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectChartLayout } from '../context/chartLayoutContext';\nimport { useAppDispatch, useAppSelector } from './hooks';\nimport { addLegendPayload, removeLegendPayload } from './legendSlice';\n\nvar noop = () => {};\n\nexport function SetLegendPayload(_ref) {\n  var {\n    legendPayload\n  } = _ref;\n  var dispatch = useAppDispatch();\n  var isPanorama = useIsPanorama();\n  useEffect(() => {\n    if (isPanorama) {\n      return noop;\n    }\n\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, isPanorama, legendPayload]);\n  return null;\n}\nexport function SetPolarLegendPayload(_ref2) {\n  var {\n    legendPayload\n  } = _ref2;\n  var dispatch = useAppDispatch();\n  var layout = useAppSelector(selectChartLayout);\n  useEffect(() => {\n    if (layout !== 'centric' && layout !== 'radial') {\n      return noop;\n    }\n\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, layout, legendPayload]);\n  return null;\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/SetLegendPayload.js"],"names":["useEffect","useIsPanorama","selectChartLayout","useAppDispatch","useAppSelector","addLegendPayload","removeLegendPayload","noop","SetLegendPayload","_ref","legendPayload","dispatch","isPanorama","SetPolarLegendPayload","_ref2","layout"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,SAA/C;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,eAAtD;;AACA,IAAIC,IAAI,GAAG,MAAM,CAAE,CAAnB;;AACA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AACrC,MAAI;AACFC,IAAAA;AADE,MAEAD,IAFJ;AAGA,MAAIE,QAAQ,GAAGR,cAAc,EAA7B;AACA,MAAIS,UAAU,GAAGX,aAAa,EAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,UAAJ,EAAgB;AACd,aAAOL,IAAP;AACD;;AACDI,IAAAA,QAAQ,CAACN,gBAAgB,CAACK,aAAD,CAAjB,CAAR;AACA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACL,mBAAmB,CAACI,aAAD,CAApB,CAAR;AACD,KAFD;AAGD,GARQ,EAQN,CAACC,QAAD,EAAWC,UAAX,EAAuBF,aAAvB,CARM,CAAT;AASA,SAAO,IAAP;AACD;AACD,OAAO,SAASG,qBAAT,CAA+BC,KAA/B,EAAsC;AAC3C,MAAI;AACFJ,IAAAA;AADE,MAEAI,KAFJ;AAGA,MAAIH,QAAQ,GAAGR,cAAc,EAA7B;AACA,MAAIY,MAAM,GAAGX,cAAc,CAACF,iBAAD,CAA3B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,QAAvC,EAAiD;AAC/C,aAAOR,IAAP;AACD;;AACDI,IAAAA,QAAQ,CAACN,gBAAgB,CAACK,aAAD,CAAjB,CAAR;AACA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACL,mBAAmB,CAACI,aAAD,CAApB,CAAR;AACD,KAFD;AAGD,GARQ,EAQN,CAACC,QAAD,EAAWI,MAAX,EAAmBL,aAAnB,CARM,CAAT;AASA,SAAO,IAAP;AACD","sourcesContent":["import { useEffect } from 'react';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectChartLayout } from '../context/chartLayoutContext';\nimport { useAppDispatch, useAppSelector } from './hooks';\nimport { addLegendPayload, removeLegendPayload } from './legendSlice';\nvar noop = () => {};\nexport function SetLegendPayload(_ref) {\n  var {\n    legendPayload\n  } = _ref;\n  var dispatch = useAppDispatch();\n  var isPanorama = useIsPanorama();\n  useEffect(() => {\n    if (isPanorama) {\n      return noop;\n    }\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, isPanorama, legendPayload]);\n  return null;\n}\nexport function SetPolarLegendPayload(_ref2) {\n  var {\n    legendPayload\n  } = _ref2;\n  var dispatch = useAppDispatch();\n  var layout = useAppSelector(selectChartLayout);\n  useEffect(() => {\n    if (layout !== 'centric' && layout !== 'radial') {\n      return noop;\n    }\n    dispatch(addLegendPayload(legendPayload));\n    return () => {\n      dispatch(removeLegendPayload(legendPayload));\n    };\n  }, [dispatch, layout, legendPayload]);\n  return null;\n}"]},"metadata":{},"sourceType":"module"}