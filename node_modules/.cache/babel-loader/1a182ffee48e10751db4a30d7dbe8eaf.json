{"ast":null,"code":"import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n/**\n * ErrorBars have lot more settings but all the others are scoped to the component itself.\n * Only some of them required to be reported to the global store because XAxis and YAxis need to know\n * if the error bar is contributing to extending the axis domain.\n */\n\nvar initialState = {\n  countOfBars: 0,\n  cartesianItems: [],\n  polarItems: []\n};\nvar graphicalItemsSlice = createSlice({\n  name: 'graphicalItems',\n  initialState,\n  reducers: {\n    addBar(state) {\n      state.countOfBars += 1;\n    },\n\n    removeBar(state) {\n      state.countOfBars -= 1;\n    },\n\n    addCartesianGraphicalItem(state, action) {\n      state.cartesianItems.push(castDraft(action.payload));\n    },\n\n    replaceCartesianGraphicalItem(state, action) {\n      var {\n        prev,\n        next\n      } = action.payload;\n      var index = current(state).cartesianItems.indexOf(castDraft(prev));\n\n      if (index > -1) {\n        state.cartesianItems[index] = castDraft(next);\n      }\n    },\n\n    removeCartesianGraphicalItem(state, action) {\n      var index = current(state).cartesianItems.indexOf(castDraft(action.payload));\n\n      if (index > -1) {\n        state.cartesianItems.splice(index, 1);\n      }\n    },\n\n    addPolarGraphicalItem(state, action) {\n      state.polarItems.push(castDraft(action.payload));\n    },\n\n    removePolarGraphicalItem(state, action) {\n      var index = current(state).polarItems.indexOf(castDraft(action.payload));\n\n      if (index > -1) {\n        state.polarItems.splice(index, 1);\n      }\n    }\n\n  }\n});\nexport var {\n  addBar,\n  removeBar,\n  addCartesianGraphicalItem,\n  replaceCartesianGraphicalItem,\n  removeCartesianGraphicalItem,\n  addPolarGraphicalItem,\n  removePolarGraphicalItem\n} = graphicalItemsSlice.actions;\nexport var graphicalItemsReducer = graphicalItemsSlice.reducer;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/graphicalItemsSlice.js"],"names":["createSlice","current","castDraft","initialState","countOfBars","cartesianItems","polarItems","graphicalItemsSlice","name","reducers","addBar","state","removeBar","addCartesianGraphicalItem","action","push","payload","replaceCartesianGraphicalItem","prev","next","index","indexOf","removeCartesianGraphicalItem","splice","addPolarGraphicalItem","removePolarGraphicalItem","actions","graphicalItemsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA;;;;;;AAMA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,CADI;AAEjBC,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAAnB;AAKA,IAAIC,mBAAmB,GAAGP,WAAW,CAAC;AACpCQ,EAAAA,IAAI,EAAE,gBAD8B;AAEpCL,EAAAA,YAFoC;AAGpCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACP,WAAN,IAAqB,CAArB;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,WAAN,IAAqB,CAArB;AACD,KANO;;AAORS,IAAAA,yBAAyB,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvCH,MAAAA,KAAK,CAACN,cAAN,CAAqBU,IAArB,CAA0Bb,SAAS,CAACY,MAAM,CAACE,OAAR,CAAnC;AACD,KATO;;AAURC,IAAAA,6BAA6B,CAACN,KAAD,EAAQG,MAAR,EAAgB;AAC3C,UAAI;AACFI,QAAAA,IADE;AAEFC,QAAAA;AAFE,UAGAL,MAAM,CAACE,OAHX;AAIA,UAAII,KAAK,GAAGnB,OAAO,CAACU,KAAD,CAAP,CAAeN,cAAf,CAA8BgB,OAA9B,CAAsCnB,SAAS,CAACgB,IAAD,CAA/C,CAAZ;;AACA,UAAIE,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdT,QAAAA,KAAK,CAACN,cAAN,CAAqBe,KAArB,IAA8BlB,SAAS,CAACiB,IAAD,CAAvC;AACD;AACF,KAnBO;;AAoBRG,IAAAA,4BAA4B,CAACX,KAAD,EAAQG,MAAR,EAAgB;AAC1C,UAAIM,KAAK,GAAGnB,OAAO,CAACU,KAAD,CAAP,CAAeN,cAAf,CAA8BgB,OAA9B,CAAsCnB,SAAS,CAACY,MAAM,CAACE,OAAR,CAA/C,CAAZ;;AACA,UAAII,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdT,QAAAA,KAAK,CAACN,cAAN,CAAqBkB,MAArB,CAA4BH,KAA5B,EAAmC,CAAnC;AACD;AACF,KAzBO;;AA0BRI,IAAAA,qBAAqB,CAACb,KAAD,EAAQG,MAAR,EAAgB;AACnCH,MAAAA,KAAK,CAACL,UAAN,CAAiBS,IAAjB,CAAsBb,SAAS,CAACY,MAAM,CAACE,OAAR,CAA/B;AACD,KA5BO;;AA6BRS,IAAAA,wBAAwB,CAACd,KAAD,EAAQG,MAAR,EAAgB;AACtC,UAAIM,KAAK,GAAGnB,OAAO,CAACU,KAAD,CAAP,CAAeL,UAAf,CAA0Be,OAA1B,CAAkCnB,SAAS,CAACY,MAAM,CAACE,OAAR,CAA3C,CAAZ;;AACA,UAAII,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdT,QAAAA,KAAK,CAACL,UAAN,CAAiBiB,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B;AACD;AACF;;AAlCO;AAH0B,CAAD,CAArC;AAwCA,OAAO,IAAI;AACTV,EAAAA,MADS;AAETE,EAAAA,SAFS;AAGTC,EAAAA,yBAHS;AAITI,EAAAA,6BAJS;AAKTK,EAAAA,4BALS;AAMTE,EAAAA,qBANS;AAOTC,EAAAA;AAPS,IAQPlB,mBAAmB,CAACmB,OARjB;AASP,OAAO,IAAIC,qBAAqB,GAAGpB,mBAAmB,CAACqB,OAAhD","sourcesContent":["import { createSlice, current } from '@reduxjs/toolkit';\nimport { castDraft } from 'immer';\n\n/**\n * ErrorBars have lot more settings but all the others are scoped to the component itself.\n * Only some of them required to be reported to the global store because XAxis and YAxis need to know\n * if the error bar is contributing to extending the axis domain.\n */\n\nvar initialState = {\n  countOfBars: 0,\n  cartesianItems: [],\n  polarItems: []\n};\nvar graphicalItemsSlice = createSlice({\n  name: 'graphicalItems',\n  initialState,\n  reducers: {\n    addBar(state) {\n      state.countOfBars += 1;\n    },\n    removeBar(state) {\n      state.countOfBars -= 1;\n    },\n    addCartesianGraphicalItem(state, action) {\n      state.cartesianItems.push(castDraft(action.payload));\n    },\n    replaceCartesianGraphicalItem(state, action) {\n      var {\n        prev,\n        next\n      } = action.payload;\n      var index = current(state).cartesianItems.indexOf(castDraft(prev));\n      if (index > -1) {\n        state.cartesianItems[index] = castDraft(next);\n      }\n    },\n    removeCartesianGraphicalItem(state, action) {\n      var index = current(state).cartesianItems.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.cartesianItems.splice(index, 1);\n      }\n    },\n    addPolarGraphicalItem(state, action) {\n      state.polarItems.push(castDraft(action.payload));\n    },\n    removePolarGraphicalItem(state, action) {\n      var index = current(state).polarItems.indexOf(castDraft(action.payload));\n      if (index > -1) {\n        state.polarItems.splice(index, 1);\n      }\n    }\n  }\n});\nexport var {\n  addBar,\n  removeBar,\n  addCartesianGraphicalItem,\n  replaceCartesianGraphicalItem,\n  removeCartesianGraphicalItem,\n  addPolarGraphicalItem,\n  removePolarGraphicalItem\n} = graphicalItemsSlice.actions;\nexport var graphicalItemsReducer = graphicalItemsSlice.reducer;"]},"metadata":{},"sourceType":"module"}