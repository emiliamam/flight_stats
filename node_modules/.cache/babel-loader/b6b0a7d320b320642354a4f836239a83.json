{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { optionsReducer } from './optionsSlice';\nimport { tooltipReducer } from './tooltipSlice';\nimport { chartDataReducer } from './chartDataSlice';\nimport { chartLayoutReducer } from './layoutSlice';\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\nimport { referenceElementsReducer } from './referenceElementsSlice';\nimport { brushReducer } from './brushSlice';\nimport { legendReducer } from './legendSlice';\nimport { rootPropsReducer } from './rootPropsSlice';\nimport { polarAxisReducer } from './polarAxisSlice';\nimport { polarOptionsReducer } from './polarOptionsSlice';\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\nimport { touchEventMiddleware } from './touchEventsMiddleware';\nvar rootReducer = combineReducers({\n  brush: brushReducer,\n  cartesianAxis: cartesianAxisReducer,\n  chartData: chartDataReducer,\n  graphicalItems: graphicalItemsReducer,\n  layout: chartLayoutReducer,\n  legend: legendReducer,\n  options: optionsReducer,\n  polarAxis: polarAxisReducer,\n  polarOptions: polarOptionsReducer,\n  referenceElements: referenceElementsReducer,\n  rootProps: rootPropsReducer,\n  tooltip: tooltipReducer\n});\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\n  return configureStore({\n    reducer: rootReducer,\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\n    preloadedState: preloadedState,\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\n    devTools: {\n      serialize: {\n        replacer: reduxDevtoolsJsonStringifyReplacer\n      },\n      name: \"recharts-\".concat(chartName)\n    }\n  });\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/store.js"],"names":["combineReducers","configureStore","optionsReducer","tooltipReducer","chartDataReducer","chartLayoutReducer","mouseClickMiddleware","mouseMoveMiddleware","reduxDevtoolsJsonStringifyReplacer","cartesianAxisReducer","graphicalItemsReducer","referenceElementsReducer","brushReducer","legendReducer","rootPropsReducer","polarAxisReducer","polarOptionsReducer","keyboardEventsMiddleware","externalEventsMiddleware","touchEventMiddleware","rootReducer","brush","cartesianAxis","chartData","graphicalItems","layout","legend","options","polarAxis","polarOptions","referenceElements","rootProps","tooltip","createRechartsStore","preloadedState","chartName","arguments","length","undefined","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","devTools","serialize","replacer","name"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,yBAA1D;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,wBAAT,QAAyC,0BAAzC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,IAAIC,WAAW,GAAGpB,eAAe,CAAC;AAChCqB,EAAAA,KAAK,EAAET,YADyB;AAEhCU,EAAAA,aAAa,EAAEb,oBAFiB;AAGhCc,EAAAA,SAAS,EAAEnB,gBAHqB;AAIhCoB,EAAAA,cAAc,EAAEd,qBAJgB;AAKhCe,EAAAA,MAAM,EAAEpB,kBALwB;AAMhCqB,EAAAA,MAAM,EAAEb,aANwB;AAOhCc,EAAAA,OAAO,EAAEzB,cAPuB;AAQhC0B,EAAAA,SAAS,EAAEb,gBARqB;AAShCc,EAAAA,YAAY,EAAEb,mBATkB;AAUhCc,EAAAA,iBAAiB,EAAEnB,wBAVa;AAWhCoB,EAAAA,SAAS,EAAEjB,gBAXqB;AAYhCkB,EAAAA,OAAO,EAAE7B;AAZuB,CAAD,CAAjC;AAcA,OAAO,IAAI8B,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,cAA7B,EAA6C;AAC5E,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,OAApF;AACA,SAAOnC,cAAc,CAAC;AACpBsC,IAAAA,OAAO,EAAEnB,WADW;AAEpB;AACAc,IAAAA,cAAc,EAAEA,cAHI;AAIpB;AACAM,IAAAA,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,CAAC;AACvDC,MAAAA,iBAAiB,EAAE;AADoC,KAAD,CAApB,CAEjCC,MAFiC,CAE1B,CAACrC,oBAAoB,CAACkC,UAAtB,EAAkCjC,mBAAmB,CAACiC,UAAtD,EAAkEvB,wBAAwB,CAACuB,UAA3F,EAAuGtB,wBAAwB,CAACsB,UAAhI,EAA4IrB,oBAAoB,CAACqB,UAAjK,CAF0B,CALhB;AAQpBI,IAAAA,QAAQ,EAAE;AACRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAEtC;AADD,OADH;AAIRuC,MAAAA,IAAI,EAAE,YAAYJ,MAAZ,CAAmBR,SAAnB;AAJE;AARU,GAAD,CAArB;AAeD,CAjBM","sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { optionsReducer } from './optionsSlice';\nimport { tooltipReducer } from './tooltipSlice';\nimport { chartDataReducer } from './chartDataSlice';\nimport { chartLayoutReducer } from './layoutSlice';\nimport { mouseClickMiddleware, mouseMoveMiddleware } from './mouseEventsMiddleware';\nimport { reduxDevtoolsJsonStringifyReplacer } from './reduxDevtoolsJsonStringifyReplacer';\nimport { cartesianAxisReducer } from './cartesianAxisSlice';\nimport { graphicalItemsReducer } from './graphicalItemsSlice';\nimport { referenceElementsReducer } from './referenceElementsSlice';\nimport { brushReducer } from './brushSlice';\nimport { legendReducer } from './legendSlice';\nimport { rootPropsReducer } from './rootPropsSlice';\nimport { polarAxisReducer } from './polarAxisSlice';\nimport { polarOptionsReducer } from './polarOptionsSlice';\nimport { keyboardEventsMiddleware } from './keyboardEventsMiddleware';\nimport { externalEventsMiddleware } from './externalEventsMiddleware';\nimport { touchEventMiddleware } from './touchEventsMiddleware';\nvar rootReducer = combineReducers({\n  brush: brushReducer,\n  cartesianAxis: cartesianAxisReducer,\n  chartData: chartDataReducer,\n  graphicalItems: graphicalItemsReducer,\n  layout: chartLayoutReducer,\n  legend: legendReducer,\n  options: optionsReducer,\n  polarAxis: polarAxisReducer,\n  polarOptions: polarOptionsReducer,\n  referenceElements: referenceElementsReducer,\n  rootProps: rootPropsReducer,\n  tooltip: tooltipReducer\n});\nexport var createRechartsStore = function createRechartsStore(preloadedState) {\n  var chartName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Chart';\n  return configureStore({\n    reducer: rootReducer,\n    // redux-toolkit v1 types are unhappy with the preloadedState type. Remove the `as any` when bumping to v2\n    preloadedState: preloadedState,\n    // @ts-expect-error redux-toolkit v1 types are unhappy with the middleware array. Remove this comment when bumping to v2\n    middleware: getDefaultMiddleware => getDefaultMiddleware({\n      serializableCheck: false\n    }).concat([mouseClickMiddleware.middleware, mouseMoveMiddleware.middleware, keyboardEventsMiddleware.middleware, externalEventsMiddleware.middleware, touchEventMiddleware.middleware]),\n    devTools: {\n      serialize: {\n        replacer: reduxDevtoolsJsonStringifyReplacer\n      },\n      name: \"recharts-\".concat(chartName)\n    }\n  });\n};"]},"metadata":{},"sourceType":"module"}