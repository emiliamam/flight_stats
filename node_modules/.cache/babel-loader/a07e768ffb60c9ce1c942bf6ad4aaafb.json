{"ast":null,"code":"var _jsxFileName = \"/Users/emiliamamedova/charts/project_corona_tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\n\nconst Analytics = () => {\n  const [activeTab, setActiveTab] = useState('top3');\n  const [top3Data, setTop3Data] = useState([]);\n  const [directionData, setDirectionData] = useState([]);\n  const [punctualityData, setPunctualityData] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/get_top3').then(res => res.json()).then(data => setTop3Data(data)).catch(console.error);\n    fetch('http://localhost:8000/get_all_direction').then(res => res.json()).then(data => setDirectionData(data)).catch(console.error);\n    fetch('http://localhost:8000/get_airline_punctuality').then(res => res.json()).then(data => setPunctualityData(data)).catch(console.error);\n  }, []);\n  console.log(top3Data, 'top3Data');\n  console.log(directionData, 'directionData');\n  console.log(punctualityData, 'punctualityData'); // 1. Топ 3 авиакомпании - Bar chart\n  // Топ 3 авиакомпании\n\n  const top3ChartData = {\n    labels: top3Data.map(a => a.airline_name || a['Авиакомпания']),\n    datasets: [{\n      label: 'Пунктуальность вылета',\n      backgroundColor: 'rgba(75,192,192,0.6)',\n      data: top3Data.map(a => {\n        var _a$rating_departure;\n\n        return (_a$rating_departure = a.rating_departure) !== null && _a$rating_departure !== void 0 ? _a$rating_departure : a['Отправление'];\n      })\n    }, {\n      label: 'Пунктуальность прилёта',\n      backgroundColor: 'rgba(153,102,255,0.6)',\n      data: top3Data.map(a => {\n        var _a$rating_arrival;\n\n        return (_a$rating_arrival = a.rating_arrival) !== null && _a$rating_arrival !== void 0 ? _a$rating_arrival : a['Прибытие'];\n      })\n    }]\n  }; // Направления - ограничим топ-10\n\n  const topDirections = [...directionData].sort((a, b) => b.total_flights - a.total_flights).slice(0, 10);\n  const directionsLabels = topDirections.map(d => `${d.airport1} → ${d.airport2}`);\n  const directionsCounts = topDirections.map(d => d.total_flights);\n  const directionsChartData = {\n    labels: directionsLabels,\n    datasets: [{\n      label: 'Количество рейсов',\n      data: directionsCounts,\n      backgroundColor: directionsLabels.map(() => `hsl(${Math.floor(Math.random() * 360)}, 70%, 70%)`)\n    }]\n  }; // Пунктуальность - если даты нет, просто покажем среднюю пунктуальность по авиакомпаниям\n\n  const airlines = [...new Set(punctualityData.map(d => d['Авиакомпания']))];\n  const punctualityChartData = {\n    labels: airlines,\n    datasets: [{\n      label: 'Пунктуальность отправления (%)',\n      data: airlines.map(airline => {\n        const rec = punctualityData.find(d => d['Авиакомпания'] === airline);\n        return rec ? rec['Отправление'] : 0;\n      }),\n      backgroundColor: 'rgba(75,192,192,0.6)'\n    }, {\n      label: 'Пунктуальность прибытия (%)',\n      data: airlines.map(airline => {\n        const rec = punctualityData.find(d => d['Авиакомпания'] === airline);\n        return rec ? rec['Прибытие'] : 0;\n      }),\n      backgroundColor: 'rgba(153,102,255,0.6)'\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setActiveTab('top3'),\n    disabled: activeTab === 'top3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"\\u0422\\u043E\\u043F 3 \\u0430\\u0432\\u0438\\u0430\\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setActiveTab('directions'),\n    disabled: activeTab === 'directions',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"\\u041D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setActiveTab('punctuality'),\n    disabled: activeTab === 'punctuality',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"\\u041F\\u0443\\u043D\\u043A\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\")), activeTab === 'top3' && /*#__PURE__*/React.createElement(Bar, {\n    data: top3ChartData,\n    options: {\n      responsive: true,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Топ 3 авиакомпании по пунктуальности'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }), activeTab === 'directions' && /*#__PURE__*/React.createElement(Pie, {\n    data: directionsChartData,\n    options: {\n      responsive: true,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Распределение рейсов по направлениям (топ 10)'\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }), activeTab === 'punctuality' && /*#__PURE__*/React.createElement(Bar, {\n    data: punctualityChartData,\n    options: {\n      responsive: true,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Пунктуальность авиакомпаний'\n        }\n      },\n      scales: {\n        y: {\n          min: 0,\n          max: 1000,\n          title: {\n            display: true,\n            text: 'Пунктуальность (%)'\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: 'Авиакомпания'\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Bar","Pie","Line","Analytics","activeTab","setActiveTab","top3Data","setTop3Data","directionData","setDirectionData","punctualityData","setPunctualityData","fetch","then","res","json","data","catch","console","error","log","top3ChartData","labels","map","a","airline_name","datasets","label","backgroundColor","rating_departure","rating_arrival","topDirections","sort","b","total_flights","slice","directionsLabels","d","airport1","airport2","directionsCounts","directionsChartData","Math","floor","random","airlines","Set","punctualityChartData","airline","rec","find","marginBottom","responsive","plugins","title","display","text","scales","y","min","max","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\n\nconst Analytics = () => {\n  const [activeTab, setActiveTab] = useState('top3');\n  const [top3Data, setTop3Data] = useState([]);\n  const [directionData, setDirectionData] = useState([]);\n  const [punctualityData, setPunctualityData] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/get_top3')\n      .then(res => res.json())\n      .then(data => setTop3Data(data))\n      .catch(console.error);\n\n    fetch('http://localhost:8000/get_all_direction')\n      .then(res => res.json())\n      .then(data => setDirectionData(data))\n      .catch(console.error);\n\n    fetch('http://localhost:8000/get_airline_punctuality')\n      .then(res => res.json())\n      .then(data => setPunctualityData(data))\n      .catch(console.error);\n  }, []);\n\n  console.log(top3Data, 'top3Data')\n  console.log(directionData, 'directionData')\n  console.log(punctualityData, 'punctualityData')\n\n  // 1. Топ 3 авиакомпании - Bar chart\n  // Топ 3 авиакомпании\nconst top3ChartData = {\n  labels: top3Data.map(a => a.airline_name || a['Авиакомпания']),\n  datasets: [\n    {\n      label: 'Пунктуальность вылета',\n      backgroundColor: 'rgba(75,192,192,0.6)',\n      data: top3Data.map(a => a.rating_departure ?? a['Отправление']),\n    },\n    {\n      label: 'Пунктуальность прилёта',\n      backgroundColor: 'rgba(153,102,255,0.6)',\n      data: top3Data.map(a => a.rating_arrival ?? a['Прибытие']),\n    },\n  ],\n};\n\n// Направления - ограничим топ-10\nconst topDirections = [...directionData]\n  .sort((a, b) => b.total_flights - a.total_flights)\n  .slice(0, 10);\n\nconst directionsLabels = topDirections.map(d => `${d.airport1} → ${d.airport2}`);\nconst directionsCounts = topDirections.map(d => d.total_flights);\n\nconst directionsChartData = {\n  labels: directionsLabels,\n  datasets: [\n    {\n      label: 'Количество рейсов',\n      data: directionsCounts,\n      backgroundColor: directionsLabels.map(\n        () => `hsl(${Math.floor(Math.random() * 360)}, 70%, 70%)`\n      ),\n    },\n  ],\n};\n\n// Пунктуальность - если даты нет, просто покажем среднюю пунктуальность по авиакомпаниям\nconst airlines = [...new Set(punctualityData.map(d => d['Авиакомпания']))];\n\nconst punctualityChartData = {\n  labels: airlines,\n  datasets: [\n    {\n      label: 'Пунктуальность отправления (%)',\n      data: airlines.map(airline => {\n        const rec = punctualityData.find(d => d['Авиакомпания'] === airline);\n        return rec ? rec['Отправление'] : 0;\n      }),\n      backgroundColor: 'rgba(75,192,192,0.6)',\n    },\n    {\n      label: 'Пунктуальность прибытия (%)',\n      data: airlines.map(airline => {\n        const rec = punctualityData.find(d => d['Авиакомпания'] === airline);\n        return rec ? rec['Прибытие'] : 0;\n      }),\n      backgroundColor: 'rgba(153,102,255,0.6)',\n    },\n  ],\n};\n\n\n  return (\n    <div>\n      <div style={{ marginBottom: 20 }}>\n        <button onClick={() => setActiveTab('top3')} disabled={activeTab === 'top3'}>\n          Топ 3 авиакомпании\n        </button>\n        <button onClick={() => setActiveTab('directions')} disabled={activeTab === 'directions'}>\n          Направления\n        </button>\n        <button onClick={() => setActiveTab('punctuality')} disabled={activeTab === 'punctuality'}>\n          Пунктуальность\n        </button>\n      </div>\n\n      {activeTab === 'top3' && (\n  <Bar\n    data={top3ChartData}\n    options={{\n      responsive: true,\n      plugins: {\n        title: { display: true, text: 'Топ 3 авиакомпании по пунктуальности' },\n      },\n    }}\n  />\n)}\n\n{activeTab === 'directions' && (\n  <Pie\n    data={directionsChartData}\n    options={{\n      responsive: true,\n      plugins: {\n        title: { display: true, text: 'Распределение рейсов по направлениям (топ 10)' },\n      },\n    }}\n  />\n)}\n\n{activeTab === 'punctuality' && (\n  <Bar\n    data={punctualityChartData}\n    options={{\n      responsive: true,\n      plugins: {\n        title: { display: true, text: 'Пунктуальность авиакомпаний' },\n      },\n      scales: {\n        y: { min: 0, max: 1000, title: { display: true, text: 'Пунктуальность (%)' } },\n        x: { title: { display: true, text: 'Авиакомпания' } },\n      },\n    }}\n  />\n)}\n    </div>\n  );\n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}