{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { selectPolarAxisTicks } from './polarScaleSelectors';\n\nvar selectAngleAxisTicks = (state, anglexisId) => selectPolarAxisTicks(state, 'angleAxis', anglexisId, false);\n\nexport var selectPolarGridAngles = createSelector([selectAngleAxisTicks], ticks => {\n  if (!ticks) {\n    return undefined;\n  }\n\n  return ticks.map(tick => tick.coordinate);\n});\n\nvar selectRadiusAxisTicks = (state, radiusAxisId) => selectPolarAxisTicks(state, 'radiusAxis', radiusAxisId, false);\n\nexport var selectPolarGridRadii = createSelector([selectRadiusAxisTicks], ticks => {\n  if (!ticks) {\n    return undefined;\n  }\n\n  return ticks.map(tick => tick.coordinate);\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/polarGridSelectors.js"],"names":["createSelector","selectPolarAxisTicks","selectAngleAxisTicks","state","anglexisId","selectPolarGridAngles","ticks","undefined","map","tick","coordinate","selectRadiusAxisTicks","radiusAxisId","selectPolarGridRadii"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,oBAAT,QAAqC,uBAArC;;AACA,IAAIC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuBH,oBAAoB,CAACE,KAAD,EAAQ,WAAR,EAAqBC,UAArB,EAAiC,KAAjC,CAAtE;;AACA,OAAO,IAAIC,qBAAqB,GAAGL,cAAc,CAAC,CAACE,oBAAD,CAAD,EAAyBI,KAAK,IAAI;AACjF,MAAI,CAACA,KAAL,EAAY;AACV,WAAOC,SAAP;AACD;;AACD,SAAOD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,UAAvB,CAAP;AACD,CALgD,CAA1C;;AAMP,IAAIC,qBAAqB,GAAG,CAACR,KAAD,EAAQS,YAAR,KAAyBX,oBAAoB,CAACE,KAAD,EAAQ,YAAR,EAAsBS,YAAtB,EAAoC,KAApC,CAAzE;;AACA,OAAO,IAAIC,oBAAoB,GAAGb,cAAc,CAAC,CAACW,qBAAD,CAAD,EAA0BL,KAAK,IAAI;AACjF,MAAI,CAACA,KAAL,EAAY;AACV,WAAOC,SAAP;AACD;;AACD,SAAOD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,UAAvB,CAAP;AACD,CAL+C,CAAzC","sourcesContent":["import { createSelector } from 'reselect';\nimport { selectPolarAxisTicks } from './polarScaleSelectors';\nvar selectAngleAxisTicks = (state, anglexisId) => selectPolarAxisTicks(state, 'angleAxis', anglexisId, false);\nexport var selectPolarGridAngles = createSelector([selectAngleAxisTicks], ticks => {\n  if (!ticks) {\n    return undefined;\n  }\n  return ticks.map(tick => tick.coordinate);\n});\nvar selectRadiusAxisTicks = (state, radiusAxisId) => selectPolarAxisTicks(state, 'radiusAxis', radiusAxisId, false);\nexport var selectPolarGridRadii = createSelector([selectRadiusAxisTicks], ticks => {\n  if (!ticks) {\n    return undefined;\n  }\n  return ticks.map(tick => tick.coordinate);\n});"]},"metadata":{},"sourceType":"module"}