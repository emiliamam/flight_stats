{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nconst iteratee = require('../util/iteratee.js');\n\nfunction sumBy(array, iteratee$1) {\n  if (!array || !array.length) {\n    return 0;\n  }\n\n  if (iteratee$1 != null) {\n    iteratee$1 = iteratee.iteratee(iteratee$1);\n  }\n\n  let result = undefined;\n\n  for (let i = 0; i < array.length; i++) {\n    const current = iteratee$1 ? iteratee$1(array[i]) : array[i];\n\n    if (current !== undefined) {\n      if (result === undefined) {\n        result = current;\n      } else {\n        result += current;\n      }\n    }\n  }\n\n  return result;\n}\n\nexports.sumBy = sumBy;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/es-toolkit/dist/compat/math/sumBy.js"],"names":["Object","defineProperty","exports","Symbol","toStringTag","value","iteratee","require","sumBy","array","iteratee$1","length","result","undefined","i","current"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+BC,MAAM,CAACC,WAAtC,EAAmD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnD;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAxB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,UAAtB,EAAkC;AAC9B,MAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,MAArB,EAA6B;AACzB,WAAO,CAAP;AACH;;AACD,MAAID,UAAU,IAAI,IAAlB,EAAwB;AACpBA,IAAAA,UAAU,GAAGJ,QAAQ,CAACA,QAAT,CAAkBI,UAAlB,CAAb;AACH;;AACD,MAAIE,MAAM,GAAGC,SAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACE,MAA1B,EAAkCG,CAAC,EAAnC,EAAuC;AACnC,UAAMC,OAAO,GAAGL,UAAU,GAAGA,UAAU,CAACD,KAAK,CAACK,CAAD,CAAN,CAAb,GAA0BL,KAAK,CAACK,CAAD,CAAzD;;AACA,QAAIC,OAAO,KAAKF,SAAhB,EAA2B;AACvB,UAAID,MAAM,KAAKC,SAAf,EAA0B;AACtBD,QAAAA,MAAM,GAAGG,OAAT;AACH,OAFD,MAGK;AACDH,QAAAA,MAAM,IAAIG,OAAV;AACH;AACJ;AACJ;;AACD,SAAOH,MAAP;AACH;;AAEDV,OAAO,CAACM,KAAR,GAAgBA,KAAhB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst iteratee = require('../util/iteratee.js');\n\nfunction sumBy(array, iteratee$1) {\n    if (!array || !array.length) {\n        return 0;\n    }\n    if (iteratee$1 != null) {\n        iteratee$1 = iteratee.iteratee(iteratee$1);\n    }\n    let result = undefined;\n    for (let i = 0; i < array.length; i++) {\n        const current = iteratee$1 ? iteratee$1(array[i]) : array[i];\n        if (current !== undefined) {\n            if (result === undefined) {\n                result = current;\n            }\n            else {\n                result += current;\n            }\n        }\n    }\n    return result;\n}\n\nexports.sumBy = sumBy;\n"]},"metadata":{},"sourceType":"script"}