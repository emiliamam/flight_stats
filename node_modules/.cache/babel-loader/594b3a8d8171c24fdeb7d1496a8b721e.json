{"ast":null,"code":"function ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nimport { findEntryInArray } from '../../../util/DataUtils';\nimport { getTooltipEntry, getValueByDataKey } from '../../../util/ChartUtils';\n\nfunction getSliced(arr, startIndex, endIndex) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  if (arr && startIndex + endIndex !== 0) {\n    return arr.slice(startIndex, endIndex + 1);\n  }\n\n  return arr;\n}\n\nfunction selectFinalData(dataDefinedOnItem, dataDefinedOnChart) {\n  /*\n   * If a payload has data specified directly from the graphical item, prefer that.\n   * Otherwise, fill in data from the chart level, using the same index.\n   */\n  if (dataDefinedOnItem != null) {\n    return dataDefinedOnItem;\n  }\n\n  return dataDefinedOnChart;\n}\n\nexport var combineTooltipPayload = (tooltipPayloadConfigurations, activeIndex, chartDataState, tooltipAxis, activeLabel, tooltipPayloadSearcher, tooltipEventType) => {\n  if (activeIndex == null || tooltipPayloadSearcher == null) {\n    return undefined;\n  }\n\n  var {\n    chartData,\n    computedData,\n    dataStartIndex,\n    dataEndIndex\n  } = chartDataState;\n  var init = [];\n  return tooltipPayloadConfigurations.reduce((agg, _ref) => {\n    var _settings$dataKey;\n\n    var {\n      dataDefinedOnItem,\n      settings\n    } = _ref;\n    var finalData = selectFinalData(dataDefinedOnItem, chartData);\n    var sliced = getSliced(finalData, dataStartIndex, dataEndIndex);\n    var finalDataKey = (_settings$dataKey = settings === null || settings === void 0 ? void 0 : settings.dataKey) !== null && _settings$dataKey !== void 0 ? _settings$dataKey : tooltipAxis === null || tooltipAxis === void 0 ? void 0 : tooltipAxis.dataKey; // BaseAxisProps does not support nameKey but it could!\n\n    var finalNameKey = settings === null || settings === void 0 ? void 0 : settings.nameKey; // ?? tooltipAxis?.nameKey;\n\n    var tooltipPayload;\n\n    if (tooltipAxis !== null && tooltipAxis !== void 0 && tooltipAxis.dataKey && Array.isArray(sliced) &&\n    /*\n     * findEntryInArray won't work for Scatter because Scatter provides an array of arrays\n     * as tooltip payloads and findEntryInArray is not prepared to handle that.\n     * Sad but also ScatterChart only allows 'item' tooltipEventType\n     * and also this is only a problem if there are multiple Scatters and each has its own data array\n     * so let's fix that some other time.\n     */\n    !Array.isArray(sliced[0]) &&\n    /*\n     * If the tooltipEventType is 'axis', we should search for the dataKey in the sliced data\n     * because thanks to allowDuplicatedCategory=false, the order of elements in the array\n     * no longer matches the order of elements in the original data\n     * and so we need to search by the active dataKey + label rather than by index.\n     *\n     * The same happens if multiple graphical items are present in the chart\n     * and each of them has its own data array. Those arrays get concatenated\n     * and again the tooltip index no longer matches the original data.\n     *\n     * On the other hand the tooltipEventType 'item' should always search by index\n     * because we get the index from interacting over the individual elements\n     * which is always accurate, irrespective of the allowDuplicatedCategory setting.\n     */\n    tooltipEventType === 'axis') {\n      tooltipPayload = findEntryInArray(sliced, tooltipAxis.dataKey, activeLabel);\n    } else {\n      /*\n       * This is a problem because it assumes that the index is pointing to the displayed data\n       * which it isn't because the index is pointing to the tooltip ticks array.\n       * The above approach (with findEntryInArray) is the correct one, but it only works\n       * if the axis dataKey is defined explicitly, and if the data is an array of objects.\n       */\n      tooltipPayload = tooltipPayloadSearcher(sliced, activeIndex, computedData, finalNameKey);\n    }\n\n    if (Array.isArray(tooltipPayload)) {\n      tooltipPayload.forEach(item => {\n        var newSettings = _objectSpread(_objectSpread({}, settings), {}, {\n          name: item.name,\n          unit: item.unit,\n          // color and fill are erased to keep 100% the identical behaviour to recharts 2.x - but there's nothing stopping us from returning them here. It's technically a breaking change.\n          color: undefined,\n          // color and fill are erased to keep 100% the identical behaviour to recharts 2.x - but there's nothing stopping us from returning them here. It's technically a breaking change.\n          fill: undefined\n        });\n\n        agg.push(getTooltipEntry({\n          tooltipEntrySettings: newSettings,\n          dataKey: item.dataKey,\n          payload: item.payload,\n          // @ts-expect-error getValueByDataKey does not validate the output type\n          value: getValueByDataKey(item.payload, item.dataKey),\n          name: item.name\n        }));\n      });\n    } else {\n      var _getValueByDataKey; // I am not quite sure why these two branches (Array vs Array of Arrays) have to behave differently - I imagine we should unify these. 3.x breaking change?\n\n\n      agg.push(getTooltipEntry({\n        tooltipEntrySettings: settings,\n        dataKey: finalDataKey,\n        payload: tooltipPayload,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        value: getValueByDataKey(tooltipPayload, finalDataKey),\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        name: (_getValueByDataKey = getValueByDataKey(tooltipPayload, finalNameKey)) !== null && _getValueByDataKey !== void 0 ? _getValueByDataKey : settings === null || settings === void 0 ? void 0 : settings.name\n      }));\n    }\n\n    return agg;\n  }, init);\n};","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/recharts/es6/state/selectors/combiners/combineTooltipPayload.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","findEntryInArray","getTooltipEntry","getValueByDataKey","getSliced","arr","startIndex","endIndex","Array","isArray","slice","selectFinalData","dataDefinedOnItem","dataDefinedOnChart","combineTooltipPayload","tooltipPayloadConfigurations","activeIndex","chartDataState","tooltipAxis","activeLabel","tooltipPayloadSearcher","tooltipEventType","undefined","chartData","computedData","dataStartIndex","dataEndIndex","init","reduce","agg","_ref","_settings$dataKey","settings","finalData","sliced","finalDataKey","dataKey","finalNameKey","nameKey","tooltipPayload","item","newSettings","name","unit","color","fill","tooltipEntrySettings","payload","_getValueByDataKey"],"mappings":"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","sourcesContent":["function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { findEntryInArray } from '../../../util/DataUtils';\nimport { getTooltipEntry, getValueByDataKey } from '../../../util/ChartUtils';\nfunction getSliced(arr, startIndex, endIndex) {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n  if (arr && startIndex + endIndex !== 0) {\n    return arr.slice(startIndex, endIndex + 1);\n  }\n  return arr;\n}\nfunction selectFinalData(dataDefinedOnItem, dataDefinedOnChart) {\n  /*\n   * If a payload has data specified directly from the graphical item, prefer that.\n   * Otherwise, fill in data from the chart level, using the same index.\n   */\n  if (dataDefinedOnItem != null) {\n    return dataDefinedOnItem;\n  }\n  return dataDefinedOnChart;\n}\nexport var combineTooltipPayload = (tooltipPayloadConfigurations, activeIndex, chartDataState, tooltipAxis, activeLabel, tooltipPayloadSearcher, tooltipEventType) => {\n  if (activeIndex == null || tooltipPayloadSearcher == null) {\n    return undefined;\n  }\n  var {\n    chartData,\n    computedData,\n    dataStartIndex,\n    dataEndIndex\n  } = chartDataState;\n  var init = [];\n  return tooltipPayloadConfigurations.reduce((agg, _ref) => {\n    var _settings$dataKey;\n    var {\n      dataDefinedOnItem,\n      settings\n    } = _ref;\n    var finalData = selectFinalData(dataDefinedOnItem, chartData);\n    var sliced = getSliced(finalData, dataStartIndex, dataEndIndex);\n    var finalDataKey = (_settings$dataKey = settings === null || settings === void 0 ? void 0 : settings.dataKey) !== null && _settings$dataKey !== void 0 ? _settings$dataKey : tooltipAxis === null || tooltipAxis === void 0 ? void 0 : tooltipAxis.dataKey;\n    // BaseAxisProps does not support nameKey but it could!\n    var finalNameKey = settings === null || settings === void 0 ? void 0 : settings.nameKey; // ?? tooltipAxis?.nameKey;\n    var tooltipPayload;\n    if (tooltipAxis !== null && tooltipAxis !== void 0 && tooltipAxis.dataKey && Array.isArray(sliced) &&\n    /*\n     * findEntryInArray won't work for Scatter because Scatter provides an array of arrays\n     * as tooltip payloads and findEntryInArray is not prepared to handle that.\n     * Sad but also ScatterChart only allows 'item' tooltipEventType\n     * and also this is only a problem if there are multiple Scatters and each has its own data array\n     * so let's fix that some other time.\n     */\n    !Array.isArray(sliced[0]) &&\n    /*\n     * If the tooltipEventType is 'axis', we should search for the dataKey in the sliced data\n     * because thanks to allowDuplicatedCategory=false, the order of elements in the array\n     * no longer matches the order of elements in the original data\n     * and so we need to search by the active dataKey + label rather than by index.\n     *\n     * The same happens if multiple graphical items are present in the chart\n     * and each of them has its own data array. Those arrays get concatenated\n     * and again the tooltip index no longer matches the original data.\n     *\n     * On the other hand the tooltipEventType 'item' should always search by index\n     * because we get the index from interacting over the individual elements\n     * which is always accurate, irrespective of the allowDuplicatedCategory setting.\n     */\n    tooltipEventType === 'axis') {\n      tooltipPayload = findEntryInArray(sliced, tooltipAxis.dataKey, activeLabel);\n    } else {\n      /*\n       * This is a problem because it assumes that the index is pointing to the displayed data\n       * which it isn't because the index is pointing to the tooltip ticks array.\n       * The above approach (with findEntryInArray) is the correct one, but it only works\n       * if the axis dataKey is defined explicitly, and if the data is an array of objects.\n       */\n      tooltipPayload = tooltipPayloadSearcher(sliced, activeIndex, computedData, finalNameKey);\n    }\n    if (Array.isArray(tooltipPayload)) {\n      tooltipPayload.forEach(item => {\n        var newSettings = _objectSpread(_objectSpread({}, settings), {}, {\n          name: item.name,\n          unit: item.unit,\n          // color and fill are erased to keep 100% the identical behaviour to recharts 2.x - but there's nothing stopping us from returning them here. It's technically a breaking change.\n          color: undefined,\n          // color and fill are erased to keep 100% the identical behaviour to recharts 2.x - but there's nothing stopping us from returning them here. It's technically a breaking change.\n          fill: undefined\n        });\n        agg.push(getTooltipEntry({\n          tooltipEntrySettings: newSettings,\n          dataKey: item.dataKey,\n          payload: item.payload,\n          // @ts-expect-error getValueByDataKey does not validate the output type\n          value: getValueByDataKey(item.payload, item.dataKey),\n          name: item.name\n        }));\n      });\n    } else {\n      var _getValueByDataKey;\n      // I am not quite sure why these two branches (Array vs Array of Arrays) have to behave differently - I imagine we should unify these. 3.x breaking change?\n      agg.push(getTooltipEntry({\n        tooltipEntrySettings: settings,\n        dataKey: finalDataKey,\n        payload: tooltipPayload,\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        value: getValueByDataKey(tooltipPayload, finalDataKey),\n        // @ts-expect-error getValueByDataKey does not validate the output type\n        name: (_getValueByDataKey = getValueByDataKey(tooltipPayload, finalNameKey)) !== null && _getValueByDataKey !== void 0 ? _getValueByDataKey : settings === null || settings === void 0 ? void 0 : settings.name\n      }));\n    }\n    return agg;\n  }, init);\n};"]},"metadata":{},"sourceType":"module"}