{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { combineAppliedNumericalValuesIncludingErrorValues, combineAppliedValues, combineAreasDomain, combineAxisDomain, combineAxisDomainWithNiceTicks, combineCategoricalDomain, combineDisplayedData, combineDomainOfStackGroups, combineDotsDomain, combineDuplicateDomain, combineGraphicalItemsData, combineGraphicalItemsSettings, combineLinesDomain, combineNiceTicks, combineNumericalDomain, combineRealScaleType, combineScaleFunction, combineStackGroups, filterGraphicalNotStackedItems, filterReferenceElements, getDomainDefinition, itemAxisPredicate, mergeDomains, selectAxisRange, selectAxisSettings, selectHasBar, selectReferenceAreas, selectReferenceDots, selectReferenceLines } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { isCategoricalAxis } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectChartName, selectStackOffsetType } from './rootPropsSelectors';\nimport { mathSign } from '../../util/DataUtils';\nimport { combineAxisRangeWithReverse } from './combiners/combineAxisRangeWithReverse';\nimport { combineTooltipEventType, selectDefaultTooltipEventType, selectValidateTooltipEventTypes } from './selectTooltipEventType';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { selectTooltipSettings } from './selectTooltipSettings';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nexport var selectTooltipAxisType = state => {\n  var layout = selectChartLayout(state);\n\n  if (layout === 'horizontal') {\n    return 'xAxis';\n  }\n\n  if (layout === 'vertical') {\n    return 'yAxis';\n  }\n\n  if (layout === 'centric') {\n    return 'angleAxis';\n  }\n\n  return 'radiusAxis';\n};\nexport var selectTooltipAxisId = state => state.tooltip.settings.axisId;\nexport var selectTooltipAxis = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  return selectAxisSettings(state, axisType, axisId);\n};\nexport var selectTooltipAxisRealScaleType = createSelector([selectTooltipAxis, selectChartLayout, selectHasBar, selectChartName, selectTooltipAxisType], combineRealScaleType);\nexport var selectAllUnfilteredGraphicalItems = createSelector([state => state.graphicalItems.cartesianItems, state => state.graphicalItems.polarItems], (cartesianItems, polarItems) => [...cartesianItems, ...polarItems]);\nvar selectTooltipAxisPredicate = createSelector([selectTooltipAxisType, selectTooltipAxisId], itemAxisPredicate);\nexport var selectAllGraphicalItemsSettings = createSelector([selectAllUnfilteredGraphicalItems, selectTooltipAxis, selectTooltipAxisPredicate], combineGraphicalItemsSettings);\nexport var selectTooltipGraphicalItemsData = createSelector([selectAllGraphicalItemsSettings], combineGraphicalItemsData);\n/**\n * Data for tooltip always use the data with indexes set by a Brush,\n * and never accept the isPanorama flag:\n * because Tooltip never displays inside the panorama anyway\n * so we don't need to worry what would happen there.\n */\n\nexport var selectTooltipDisplayedData = createSelector([selectTooltipGraphicalItemsData, selectChartDataWithIndexes], combineDisplayedData);\nvar selectAllTooltipAppliedValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectAllGraphicalItemsSettings], combineAppliedValues);\nvar selectTooltipAxisDomainDefinition = createSelector([selectTooltipAxis], getDomainDefinition);\nvar selectTooltipStackGroups = createSelector([selectTooltipDisplayedData, selectAllGraphicalItemsSettings, selectStackOffsetType], combineStackGroups);\nvar selectTooltipDomainOfStackGroups = createSelector([selectTooltipStackGroups, selectChartDataWithIndexes, selectTooltipAxisType], combineDomainOfStackGroups);\nvar selectTooltipItemsSettingsExceptStacked = createSelector([selectAllGraphicalItemsSettings], filterGraphicalNotStackedItems);\nvar selectTooltipAllAppliedNumericalValuesIncludingErrorValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectTooltipItemsSettingsExceptStacked, selectTooltipAxisType], combineAppliedNumericalValuesIncludingErrorValues);\nvar selectReferenceDotsByTooltipAxis = createSelector([selectReferenceDots, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceDotsDomain = createSelector([selectReferenceDotsByTooltipAxis, selectTooltipAxisType], combineDotsDomain);\nvar selectReferenceAreasByTooltipAxis = createSelector([selectReferenceAreas, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceAreasDomain = createSelector([selectReferenceAreasByTooltipAxis, selectTooltipAxisType], combineAreasDomain);\nvar selectReferenceLinesByTooltipAxis = createSelector([selectReferenceLines, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceLinesDomain = createSelector([selectReferenceLinesByTooltipAxis, selectTooltipAxisType], combineLinesDomain);\nvar selectTooltipReferenceElementsDomain = createSelector([selectTooltipReferenceDotsDomain, selectTooltipReferenceLinesDomain, selectTooltipReferenceAreasDomain], mergeDomains);\nvar selectTooltipNumericalDomain = createSelector([selectTooltipAxis, selectTooltipAxisDomainDefinition, selectTooltipDomainOfStackGroups, selectTooltipAllAppliedNumericalValuesIncludingErrorValues, selectTooltipReferenceElementsDomain], combineNumericalDomain);\nexport var selectTooltipAxisDomain = createSelector([selectTooltipAxis, selectChartLayout, selectTooltipDisplayedData, selectAllTooltipAppliedValues, selectStackOffsetType, selectTooltipAxisType, selectTooltipNumericalDomain], combineAxisDomain);\nvar selectTooltipNiceTicks = createSelector([selectTooltipAxisDomain, selectTooltipAxis, selectTooltipAxisRealScaleType], combineNiceTicks);\nexport var selectTooltipAxisDomainIncludingNiceTicks = createSelector([selectTooltipAxis, selectTooltipAxisDomain, selectTooltipNiceTicks, selectTooltipAxisType], combineAxisDomainWithNiceTicks);\n\nvar selectTooltipAxisRange = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  var isPanorama = false; // Tooltip never displays in panorama so this is safe to assume\n\n  return selectAxisRange(state, axisType, axisId, isPanorama);\n};\n\nexport var selectTooltipAxisRangeWithReverse = createSelector([selectTooltipAxis, selectTooltipAxisRange], combineAxisRangeWithReverse);\nexport var selectTooltipAxisScale = createSelector([selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisDomainIncludingNiceTicks, selectTooltipAxisRangeWithReverse], combineScaleFunction);\nvar selectTooltipDuplicateDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineDuplicateDomain);\nexport var selectTooltipCategoricalDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineCategoricalDomain);\n\nvar combineTicksOfTooltipAxis = (layout, axis, realScaleType, scale, range, duplicateDomain, categoricalDomain, axisType) => {\n  if (!axis) {\n    return undefined;\n  }\n\n  var {\n    type\n  } = axis;\n  var isCategorical = isCategoricalAxis(layout, axisType);\n\n  if (!scale) {\n    return undefined;\n  }\n\n  var offsetForBand = realScaleType === 'scaleBand' && scale.bandwidth ? scale.bandwidth() / 2 : 2;\n  var offset = type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axisType === 'angleAxis' && range != null && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset; // When axis is a categorical axis, but the type of axis is number or the scale of axis is not \"auto\"\n\n  if (isCategorical && categoricalDomain) {\n    return categoricalDomain.map((entry, index) => ({\n      coordinate: scale(entry) + offset,\n      value: entry,\n      index,\n      offset\n    }));\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map((entry, index) => ({\n    coordinate: scale(entry) + offset,\n    value: duplicateDomain ? duplicateDomain[entry] : entry,\n    index,\n    offset\n  }));\n};\n\nexport var selectTooltipAxisTicks = createSelector([selectChartLayout, selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisScale, selectTooltipAxisRange, selectTooltipDuplicateDomain, selectTooltipCategoricalDomain, selectTooltipAxisType], combineTicksOfTooltipAxis);\nvar selectTooltipEventType = createSelector([selectDefaultTooltipEventType, selectValidateTooltipEventTypes, selectTooltipSettings], (defaultTooltipEventType, validateTooltipEventType, settings) => combineTooltipEventType(settings.shared, defaultTooltipEventType, validateTooltipEventType));\n\nvar selectTooltipTrigger = state => state.tooltip.settings.trigger;\n\nvar selectDefaultIndex = state => state.tooltip.settings.defaultIndex;\n\nvar selectTooltipInteractionState = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveTooltipIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectActiveLabel = createSelector([selectTooltipAxisTicks, selectActiveTooltipIndex], combineActiveLabel);\nexport var selectActiveTooltipDataKey = createSelector([selectTooltipInteractionState], tooltipInteraction => {\n  if (!tooltipInteraction) {\n    return undefined;\n  }\n\n  return tooltipInteraction.dataKey;\n});\nvar selectTooltipPayloadConfigurations = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipPayloadConfigurations);\nvar selectTooltipCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, selectDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveTooltipCoordinate = createSelector([selectTooltipInteractionState, selectTooltipCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  if (tooltipInteractionState !== null && tooltipInteractionState !== void 0 && tooltipInteractionState.coordinate) {\n    return tooltipInteractionState.coordinate;\n  }\n\n  return defaultIndexCoordinate;\n});\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => tooltipInteractionState.active);\nexport var selectActiveTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveTooltipIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, selectTooltipEventType], combineTooltipPayload);\nexport var selectActiveTooltipDataPoints = createSelector([selectActiveTooltipPayload], payload => {\n  if (payload == null) {\n    return undefined;\n  }\n\n  var dataPoints = payload.map(p => p.payload).filter(p => p != null);\n  return Array.from(new Set(dataPoints));\n});","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/state/selectors/tooltipSelectors.js"],"names":["createSelector","combineAppliedNumericalValuesIncludingErrorValues","combineAppliedValues","combineAreasDomain","combineAxisDomain","combineAxisDomainWithNiceTicks","combineCategoricalDomain","combineDisplayedData","combineDomainOfStackGroups","combineDotsDomain","combineDuplicateDomain","combineGraphicalItemsData","combineGraphicalItemsSettings","combineLinesDomain","combineNiceTicks","combineNumericalDomain","combineRealScaleType","combineScaleFunction","combineStackGroups","filterGraphicalNotStackedItems","filterReferenceElements","getDomainDefinition","itemAxisPredicate","mergeDomains","selectAxisRange","selectAxisSettings","selectHasBar","selectReferenceAreas","selectReferenceDots","selectReferenceLines","selectChartLayout","isCategoricalAxis","selectChartDataWithIndexes","selectChartName","selectStackOffsetType","mathSign","combineAxisRangeWithReverse","combineTooltipEventType","selectDefaultTooltipEventType","selectValidateTooltipEventTypes","combineActiveLabel","selectTooltipSettings","combineTooltipInteractionState","combineActiveTooltipIndex","combineCoordinateForDefaultIndex","selectChartHeight","selectChartWidth","selectChartOffsetInternal","combineTooltipPayloadConfigurations","selectTooltipPayloadSearcher","selectTooltipState","combineTooltipPayload","selectTooltipAxisType","state","layout","selectTooltipAxisId","tooltip","settings","axisId","selectTooltipAxis","axisType","selectTooltipAxisRealScaleType","selectAllUnfilteredGraphicalItems","graphicalItems","cartesianItems","polarItems","selectTooltipAxisPredicate","selectAllGraphicalItemsSettings","selectTooltipGraphicalItemsData","selectTooltipDisplayedData","selectAllTooltipAppliedValues","selectTooltipAxisDomainDefinition","selectTooltipStackGroups","selectTooltipDomainOfStackGroups","selectTooltipItemsSettingsExceptStacked","selectTooltipAllAppliedNumericalValuesIncludingErrorValues","selectReferenceDotsByTooltipAxis","selectTooltipReferenceDotsDomain","selectReferenceAreasByTooltipAxis","selectTooltipReferenceAreasDomain","selectReferenceLinesByTooltipAxis","selectTooltipReferenceLinesDomain","selectTooltipReferenceElementsDomain","selectTooltipNumericalDomain","selectTooltipAxisDomain","selectTooltipNiceTicks","selectTooltipAxisDomainIncludingNiceTicks","selectTooltipAxisRange","isPanorama","selectTooltipAxisRangeWithReverse","selectTooltipAxisScale","selectTooltipDuplicateDomain","selectTooltipCategoricalDomain","combineTicksOfTooltipAxis","axis","realScaleType","scale","range","duplicateDomain","categoricalDomain","undefined","type","isCategorical","offsetForBand","bandwidth","offset","length","map","entry","index","coordinate","value","domain","selectTooltipAxisTicks","selectTooltipEventType","defaultTooltipEventType","validateTooltipEventType","shared","selectTooltipTrigger","trigger","selectDefaultIndex","defaultIndex","selectTooltipInteractionState","selectActiveTooltipIndex","selectActiveLabel","selectActiveTooltipDataKey","tooltipInteraction","dataKey","selectTooltipPayloadConfigurations","selectTooltipCoordinateForDefaultIndex","selectActiveTooltipCoordinate","tooltipInteractionState","defaultIndexCoordinate","selectIsTooltipActive","active","selectActiveTooltipPayload","selectActiveTooltipDataPoints","payload","dataPoints","p","filter","Array","from","Set"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport { combineAppliedNumericalValuesIncludingErrorValues, combineAppliedValues, combineAreasDomain, combineAxisDomain, combineAxisDomainWithNiceTicks, combineCategoricalDomain, combineDisplayedData, combineDomainOfStackGroups, combineDotsDomain, combineDuplicateDomain, combineGraphicalItemsData, combineGraphicalItemsSettings, combineLinesDomain, combineNiceTicks, combineNumericalDomain, combineRealScaleType, combineScaleFunction, combineStackGroups, filterGraphicalNotStackedItems, filterReferenceElements, getDomainDefinition, itemAxisPredicate, mergeDomains, selectAxisRange, selectAxisSettings, selectHasBar, selectReferenceAreas, selectReferenceDots, selectReferenceLines } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { isCategoricalAxis } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectChartName, selectStackOffsetType } from './rootPropsSelectors';\nimport { mathSign } from '../../util/DataUtils';\nimport { combineAxisRangeWithReverse } from './combiners/combineAxisRangeWithReverse';\nimport { combineTooltipEventType, selectDefaultTooltipEventType, selectValidateTooltipEventTypes } from './selectTooltipEventType';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { selectTooltipSettings } from './selectTooltipSettings';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nexport var selectTooltipAxisType = state => {\n  var layout = selectChartLayout(state);\n  if (layout === 'horizontal') {\n    return 'xAxis';\n  }\n  if (layout === 'vertical') {\n    return 'yAxis';\n  }\n  if (layout === 'centric') {\n    return 'angleAxis';\n  }\n  return 'radiusAxis';\n};\nexport var selectTooltipAxisId = state => state.tooltip.settings.axisId;\nexport var selectTooltipAxis = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  return selectAxisSettings(state, axisType, axisId);\n};\nexport var selectTooltipAxisRealScaleType = createSelector([selectTooltipAxis, selectChartLayout, selectHasBar, selectChartName, selectTooltipAxisType], combineRealScaleType);\nexport var selectAllUnfilteredGraphicalItems = createSelector([state => state.graphicalItems.cartesianItems, state => state.graphicalItems.polarItems], (cartesianItems, polarItems) => [...cartesianItems, ...polarItems]);\nvar selectTooltipAxisPredicate = createSelector([selectTooltipAxisType, selectTooltipAxisId], itemAxisPredicate);\nexport var selectAllGraphicalItemsSettings = createSelector([selectAllUnfilteredGraphicalItems, selectTooltipAxis, selectTooltipAxisPredicate], combineGraphicalItemsSettings);\nexport var selectTooltipGraphicalItemsData = createSelector([selectAllGraphicalItemsSettings], combineGraphicalItemsData);\n\n/**\n * Data for tooltip always use the data with indexes set by a Brush,\n * and never accept the isPanorama flag:\n * because Tooltip never displays inside the panorama anyway\n * so we don't need to worry what would happen there.\n */\nexport var selectTooltipDisplayedData = createSelector([selectTooltipGraphicalItemsData, selectChartDataWithIndexes], combineDisplayedData);\nvar selectAllTooltipAppliedValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectAllGraphicalItemsSettings], combineAppliedValues);\nvar selectTooltipAxisDomainDefinition = createSelector([selectTooltipAxis], getDomainDefinition);\nvar selectTooltipStackGroups = createSelector([selectTooltipDisplayedData, selectAllGraphicalItemsSettings, selectStackOffsetType], combineStackGroups);\nvar selectTooltipDomainOfStackGroups = createSelector([selectTooltipStackGroups, selectChartDataWithIndexes, selectTooltipAxisType], combineDomainOfStackGroups);\nvar selectTooltipItemsSettingsExceptStacked = createSelector([selectAllGraphicalItemsSettings], filterGraphicalNotStackedItems);\nvar selectTooltipAllAppliedNumericalValuesIncludingErrorValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectTooltipItemsSettingsExceptStacked, selectTooltipAxisType], combineAppliedNumericalValuesIncludingErrorValues);\nvar selectReferenceDotsByTooltipAxis = createSelector([selectReferenceDots, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceDotsDomain = createSelector([selectReferenceDotsByTooltipAxis, selectTooltipAxisType], combineDotsDomain);\nvar selectReferenceAreasByTooltipAxis = createSelector([selectReferenceAreas, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceAreasDomain = createSelector([selectReferenceAreasByTooltipAxis, selectTooltipAxisType], combineAreasDomain);\nvar selectReferenceLinesByTooltipAxis = createSelector([selectReferenceLines, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceLinesDomain = createSelector([selectReferenceLinesByTooltipAxis, selectTooltipAxisType], combineLinesDomain);\nvar selectTooltipReferenceElementsDomain = createSelector([selectTooltipReferenceDotsDomain, selectTooltipReferenceLinesDomain, selectTooltipReferenceAreasDomain], mergeDomains);\nvar selectTooltipNumericalDomain = createSelector([selectTooltipAxis, selectTooltipAxisDomainDefinition, selectTooltipDomainOfStackGroups, selectTooltipAllAppliedNumericalValuesIncludingErrorValues, selectTooltipReferenceElementsDomain], combineNumericalDomain);\nexport var selectTooltipAxisDomain = createSelector([selectTooltipAxis, selectChartLayout, selectTooltipDisplayedData, selectAllTooltipAppliedValues, selectStackOffsetType, selectTooltipAxisType, selectTooltipNumericalDomain], combineAxisDomain);\nvar selectTooltipNiceTicks = createSelector([selectTooltipAxisDomain, selectTooltipAxis, selectTooltipAxisRealScaleType], combineNiceTicks);\nexport var selectTooltipAxisDomainIncludingNiceTicks = createSelector([selectTooltipAxis, selectTooltipAxisDomain, selectTooltipNiceTicks, selectTooltipAxisType], combineAxisDomainWithNiceTicks);\nvar selectTooltipAxisRange = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  var isPanorama = false; // Tooltip never displays in panorama so this is safe to assume\n  return selectAxisRange(state, axisType, axisId, isPanorama);\n};\nexport var selectTooltipAxisRangeWithReverse = createSelector([selectTooltipAxis, selectTooltipAxisRange], combineAxisRangeWithReverse);\nexport var selectTooltipAxisScale = createSelector([selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisDomainIncludingNiceTicks, selectTooltipAxisRangeWithReverse], combineScaleFunction);\nvar selectTooltipDuplicateDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineDuplicateDomain);\nexport var selectTooltipCategoricalDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineCategoricalDomain);\nvar combineTicksOfTooltipAxis = (layout, axis, realScaleType, scale, range, duplicateDomain, categoricalDomain, axisType) => {\n  if (!axis) {\n    return undefined;\n  }\n  var {\n    type\n  } = axis;\n  var isCategorical = isCategoricalAxis(layout, axisType);\n  if (!scale) {\n    return undefined;\n  }\n  var offsetForBand = realScaleType === 'scaleBand' && scale.bandwidth ? scale.bandwidth() / 2 : 2;\n  var offset = type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axisType === 'angleAxis' && range != null && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset;\n\n  // When axis is a categorical axis, but the type of axis is number or the scale of axis is not \"auto\"\n  if (isCategorical && categoricalDomain) {\n    return categoricalDomain.map((entry, index) => ({\n      coordinate: scale(entry) + offset,\n      value: entry,\n      index,\n      offset\n    }));\n  }\n\n  // When axis has duplicated text, serial numbers are used to generate scale\n  return scale.domain().map((entry, index) => ({\n    coordinate: scale(entry) + offset,\n    value: duplicateDomain ? duplicateDomain[entry] : entry,\n    index,\n    offset\n  }));\n};\nexport var selectTooltipAxisTicks = createSelector([selectChartLayout, selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisScale, selectTooltipAxisRange, selectTooltipDuplicateDomain, selectTooltipCategoricalDomain, selectTooltipAxisType], combineTicksOfTooltipAxis);\nvar selectTooltipEventType = createSelector([selectDefaultTooltipEventType, selectValidateTooltipEventTypes, selectTooltipSettings], (defaultTooltipEventType, validateTooltipEventType, settings) => combineTooltipEventType(settings.shared, defaultTooltipEventType, validateTooltipEventType));\nvar selectTooltipTrigger = state => state.tooltip.settings.trigger;\nvar selectDefaultIndex = state => state.tooltip.settings.defaultIndex;\nvar selectTooltipInteractionState = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveTooltipIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectActiveLabel = createSelector([selectTooltipAxisTicks, selectActiveTooltipIndex], combineActiveLabel);\nexport var selectActiveTooltipDataKey = createSelector([selectTooltipInteractionState], tooltipInteraction => {\n  if (!tooltipInteraction) {\n    return undefined;\n  }\n  return tooltipInteraction.dataKey;\n});\nvar selectTooltipPayloadConfigurations = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipPayloadConfigurations);\nvar selectTooltipCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, selectDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveTooltipCoordinate = createSelector([selectTooltipInteractionState, selectTooltipCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  if (tooltipInteractionState !== null && tooltipInteractionState !== void 0 && tooltipInteractionState.coordinate) {\n    return tooltipInteractionState.coordinate;\n  }\n  return defaultIndexCoordinate;\n});\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => tooltipInteractionState.active);\nexport var selectActiveTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveTooltipIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, selectTooltipEventType], combineTooltipPayload);\nexport var selectActiveTooltipDataPoints = createSelector([selectActiveTooltipPayload], payload => {\n  if (payload == null) {\n    return undefined;\n  }\n  var dataPoints = payload.map(p => p.payload).filter(p => p != null);\n  return Array.from(new Set(dataPoints));\n});"]},"metadata":{},"sourceType":"module"}