{"ast":null,"code":"var _excluded = [\"width\", \"height\", \"className\", \"style\", \"children\", \"type\"];\n\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n\n  var o,\n      r,\n      i = _objectWithoutPropertiesLoose(e, t);\n\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n\n  return i;\n}\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n\n  return t;\n}\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (\"string\" === r ? String : Number)(t);\n}\n\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport omit from 'es-toolkit/compat/omit';\nimport get from 'es-toolkit/compat/get';\nimport { Layer } from '../container/Layer';\nimport { Surface } from '../container/Surface';\nimport { Polygon } from '../shape/Polygon';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getValueByDataKey } from '../util/ChartUtils';\nimport { COLOR_PANEL } from '../util/Constants';\nimport { isNan, uniqueId } from '../util/DataUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { Global } from '../util/Global';\nimport { filterProps } from '../util/ReactUtils';\nimport { ReportChartMargin, ReportChartSize } from '../context/chartLayoutContext';\nimport { TooltipPortalContext } from '../context/tooltipPortalContext';\nimport { RechartsWrapper } from './RechartsWrapper';\nimport { setActiveClickItemIndex, setActiveMouseOverItemIndex } from '../state/tooltipSlice';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { RechartsStoreProvider } from '../state/RechartsStoreProvider';\nimport { useAppDispatch } from '../state/hooks';\nimport { isPositiveNumber } from '../util/isWellBehavedNumber';\nimport { Animate } from '../animation/Animate';\nvar NODE_VALUE_KEY = 'value';\n/**\n * This is what end users defines as `data` on Treemap.\n */\n\n/**\n * This is what is returned from `squarify`, the final treemap data structure\n * that gets rendered and is stored in\n */\n\nexport var treemapPayloadSearcher = (data, activeIndex) => {\n  return get(data, activeIndex);\n};\nexport var addToTreemapNodeIndex = function addToTreemapNodeIndex(indexInChildrenArr) {\n  var activeTooltipIndexSoFar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(activeTooltipIndexSoFar, \"children[\").concat(indexInChildrenArr, \"]\");\n};\nvar options = {\n  chartName: 'Treemap',\n  defaultTooltipEventType: 'item',\n  validateTooltipEventTypes: ['item'],\n  tooltipPayloadSearcher: treemapPayloadSearcher,\n  eventEmitter: undefined\n};\nexport var computeNode = _ref => {\n  var {\n    depth,\n    node,\n    index,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex\n  } = _ref;\n  var currentTooltipIndex = depth === 0 ? '' : addToTreemapNodeIndex(index, nestedActiveTooltipIndex);\n  var {\n    children\n  } = node;\n  var childDepth = depth + 1;\n  var computedChildren = children && children.length ? children.map((child, i) => computeNode({\n    depth: childDepth,\n    node: child,\n    index: i,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex: currentTooltipIndex\n  })) : null;\n  var nodeValue;\n\n  if (children && children.length) {\n    nodeValue = computedChildren.reduce((result, child) => result + child[NODE_VALUE_KEY], 0);\n  } else {\n    // TODO need to verify dataKey\n    nodeValue = isNan(node[dataKey]) || node[dataKey] <= 0 ? 0 : node[dataKey];\n  }\n\n  return _objectSpread(_objectSpread({}, node), {}, {\n    children: computedChildren,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    name: getValueByDataKey(node, nameKey, ''),\n    [NODE_VALUE_KEY]: nodeValue,\n    depth,\n    index,\n    tooltipIndex: currentTooltipIndex\n  });\n};\n\nvar filterRect = node => ({\n  x: node.x,\n  y: node.y,\n  width: node.width,\n  height: node.height\n}); // Compute the area for each child based on value & scale.\n\n\nvar getAreaOfChildren = (children, areaValueRatio) => {\n  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;\n  return children.map(child => {\n    var area = child[NODE_VALUE_KEY] * ratio;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      area: isNan(area) || area <= 0 ? 0 : area\n    });\n  });\n}; // Computes the score for the specified row, as the worst aspect ratio.\n\n\nvar getWorstScore = (row, parentSize, aspectRatio) => {\n  var parentArea = parentSize * parentSize;\n  var rowArea = row.area * row.area;\n  var {\n    min,\n    max\n  } = row.reduce((result, child) => ({\n    min: Math.min(result.min, child.area),\n    max: Math.max(result.max, child.area)\n  }), {\n    min: Infinity,\n    max: 0\n  });\n  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;\n};\n\nvar horizontalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;\n\n  if (isFlush || rowHeight > parentRect.height) {\n    rowHeight = parentRect.height;\n  }\n\n  var curX = parentRect.x;\n  var child;\n\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = curX;\n    child.y = parentRect.y;\n    child.height = rowHeight;\n    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);\n    curX += child.width;\n  } // add the remain x to the last one of row\n\n\n  child.width += parentRect.x + parentRect.width - curX;\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    y: parentRect.y + rowHeight,\n    height: parentRect.height - rowHeight\n  });\n};\n\nvar verticalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;\n\n  if (isFlush || rowWidth > parentRect.width) {\n    rowWidth = parentRect.width;\n  }\n\n  var curY = parentRect.y;\n  var child;\n\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = parentRect.x;\n    child.y = curY;\n    child.width = rowWidth;\n    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);\n    curY += child.height;\n  }\n\n  if (child) {\n    child.height += parentRect.y + parentRect.height - curY;\n  }\n\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    x: parentRect.x + rowWidth,\n    width: parentRect.width - rowWidth\n  });\n};\n\nvar position = (row, parentSize, parentRect, isFlush) => {\n  if (parentSize === parentRect.width) {\n    return horizontalPosition(row, parentSize, parentRect, isFlush);\n  }\n\n  return verticalPosition(row, parentSize, parentRect, isFlush);\n}; // Recursively arranges the specified node's children into squarified rows.\n\n\nvar squarify = (node, aspectRatio) => {\n  var {\n    children\n  } = node;\n\n  if (children && children.length) {\n    var rect = filterRect(node); // maybe a bug\n\n    var row = [];\n    var best = Infinity; // the best row score so far\n\n    var child, score; // the current row score\n\n    var size = Math.min(rect.width, rect.height); // initial orientation\n\n    var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node[NODE_VALUE_KEY]);\n    var tempChildren = scaleChildren.slice();\n    row.area = 0;\n\n    while (tempChildren.length > 0) {\n      // row first\n      // eslint-disable-next-line prefer-destructuring\n      row.push(child = tempChildren[0]);\n      row.area += child.area;\n      score = getWorstScore(row, size, aspectRatio);\n\n      if (score <= best) {\n        // continue with this orientation\n        tempChildren.shift();\n        best = score;\n      } else {\n        // abort, and try a different orientation\n        row.area -= row.pop().area;\n        rect = position(row, size, rect, false);\n        size = Math.min(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n    }\n\n    if (row.length) {\n      rect = position(row, size, rect, true);\n      row.length = row.area = 0;\n    }\n\n    return _objectSpread(_objectSpread({}, node), {}, {\n      children: scaleChildren.map(c => squarify(c, aspectRatio))\n    });\n  }\n\n  return node;\n};\n\nvar defaultState = {\n  isAnimationFinished: false,\n  formatRoot: null,\n  currentRoot: null,\n  nestIndex: []\n};\n\nfunction ContentItem(_ref2) {\n  var {\n    content,\n    nodeProps,\n    type,\n    colorPanel,\n    onMouseEnter,\n    onMouseLeave,\n    onClick\n  } = _ref2;\n\n  if ( /*#__PURE__*/React.isValidElement(content)) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, /*#__PURE__*/React.cloneElement(content, nodeProps));\n  }\n\n  if (typeof content === 'function') {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, content(nodeProps));\n  } // optimize default shape\n\n\n  var {\n    x,\n    y,\n    width,\n    height,\n    index\n  } = nodeProps;\n  var arrow = null;\n\n  if (width > 10 && height > 10 && nodeProps.children && type === 'nest') {\n    arrow = /*#__PURE__*/React.createElement(Polygon, {\n      points: [{\n        x: x + 2,\n        y: y + height / 2\n      }, {\n        x: x + 6,\n        y: y + height / 2 + 3\n      }, {\n        x: x + 2,\n        y: y + height / 2 + 6\n      }]\n    });\n  }\n\n  var text = null;\n  var nameSize = getStringSize(nodeProps.name);\n\n  if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {\n    text = /*#__PURE__*/React.createElement(\"text\", {\n      x: x + 8,\n      y: y + height / 2 + 7,\n      fontSize: 14\n    }, nodeProps.name);\n  }\n\n  var colors = colorPanel || COLOR_PANEL;\n  return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(Rectangle, _extends({\n    fill: nodeProps.depth < 2 ? colors[index % colors.length] : 'rgba(255,255,255,0)',\n    stroke: \"#fff\"\n  }, omit(nodeProps, ['children']), {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    \"data-recharts-item-index\": nodeProps.tooltipIndex\n  })), arrow, text);\n}\n\nfunction ContentItemWithEvents(props) {\n  var dispatch = useAppDispatch();\n  var activeCoordinate = props.nodeProps ? {\n    x: props.nodeProps.x + props.nodeProps.width / 2,\n    y: props.nodeProps.y + props.nodeProps.height / 2\n  } : null;\n\n  var onMouseEnter = () => {\n    dispatch(setActiveMouseOverItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n\n  var onMouseLeave = () => {// clearing state on mouseLeaveItem causes re-rendering issues\n    // we don't actually want to do this for TreeMap - we clear state when we leave the entire chart instead\n  };\n\n  var onClick = () => {\n    dispatch(setActiveClickItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(ContentItem, _extends({}, props, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick\n  }));\n}\n\nfunction getTooltipEntrySettings(_ref3) {\n  var {\n    props,\n    currentRoot\n  } = _ref3;\n  var {\n    dataKey,\n    nameKey,\n    stroke,\n    fill\n  } = props;\n  return {\n    dataDefinedOnItem: currentRoot,\n    positions: undefined,\n    // TODO I think Treemap has the capability of computing positions and supporting defaultIndex? Except it doesn't yet\n    settings: {\n      stroke,\n      strokeWidth: undefined,\n      fill,\n      dataKey,\n      nameKey,\n      name: undefined,\n      // Each TreemapNode has its own name\n      hide: false,\n      type: undefined,\n      color: fill,\n      unit: ''\n    }\n  };\n} // Why is margin not a treemap prop? No clue. Probably it should be\n\n\nvar defaultTreemapMargin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n\nclass TreemapWithState extends PureComponent {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", _objectSpread({}, defaultState));\n\n    _defineProperty(this, \"handleAnimationEnd\", () => {\n      var {\n        onAnimationEnd\n      } = this.props;\n      this.setState({\n        isAnimationFinished: true\n      });\n\n      if (typeof onAnimationEnd === 'function') {\n        onAnimationEnd();\n      }\n    });\n\n    _defineProperty(this, \"handleAnimationStart\", () => {\n      var {\n        onAnimationStart\n      } = this.props;\n      this.setState({\n        isAnimationFinished: false\n      });\n\n      if (typeof onAnimationStart === 'function') {\n        onAnimationStart();\n      }\n    });\n\n    _defineProperty(this, \"handleTouchMove\", (_state, e) => {\n      var touchEvent = e.touches[0];\n      var target = document.elementFromPoint(touchEvent.clientX, touchEvent.clientY);\n\n      if (!target || !target.getAttribute) {\n        return;\n      }\n\n      var itemIndex = target.getAttribute('data-recharts-item-index');\n      var activeNode = treemapPayloadSearcher(this.state.formatRoot, itemIndex);\n\n      if (!activeNode) {\n        return;\n      }\n\n      var {\n        dataKey,\n        dispatch\n      } = this.props;\n      var activeCoordinate = {\n        x: activeNode.x + activeNode.width / 2,\n        y: activeNode.y + activeNode.height / 2\n      }; // Treemap does not support onTouchMove prop, but it could\n      // onTouchMove?.(activeNode, Number(itemIndex), e);\n\n      dispatch(setActiveMouseOverItemIndex({\n        activeIndex: itemIndex,\n        activeDataKey: dataKey,\n        activeCoordinate\n      }));\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.data !== prevState.prevData || nextProps.type !== prevState.prevType || nextProps.width !== prevState.prevWidth || nextProps.height !== prevState.prevHeight || nextProps.dataKey !== prevState.prevDataKey || nextProps.aspectRatio !== prevState.prevAspectRatio) {\n      var root = computeNode({\n        depth: 0,\n        // @ts-expect-error missing properties\n        node: {\n          children: nextProps.data,\n          x: 0,\n          y: 0,\n          width: nextProps.width,\n          height: nextProps.height\n        },\n        index: 0,\n        dataKey: nextProps.dataKey,\n        nameKey: nextProps.nameKey\n      });\n      var formatRoot = squarify(root, nextProps.aspectRatio);\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        formatRoot,\n        currentRoot: root,\n        nestIndex: [root],\n        prevAspectRatio: nextProps.aspectRatio,\n        prevData: nextProps.data,\n        prevWidth: nextProps.width,\n        prevHeight: nextProps.height,\n        prevDataKey: nextProps.dataKey,\n        prevType: nextProps.type\n      });\n    }\n\n    return null;\n  }\n\n  handleMouseEnter(node, e) {\n    e.persist();\n    var {\n      onMouseEnter\n    } = this.props;\n\n    if (onMouseEnter) {\n      onMouseEnter(node, e);\n    }\n  }\n\n  handleMouseLeave(node, e) {\n    e.persist();\n    var {\n      onMouseLeave\n    } = this.props;\n\n    if (onMouseLeave) {\n      onMouseLeave(node, e);\n    }\n  }\n\n  handleClick(node) {\n    var {\n      onClick,\n      type\n    } = this.props;\n\n    if (type === 'nest' && node.children) {\n      var {\n        width,\n        height,\n        dataKey,\n        nameKey,\n        aspectRatio\n      } = this.props;\n      var root = computeNode({\n        depth: 0,\n        node: _objectSpread(_objectSpread({}, node), {}, {\n          x: 0,\n          y: 0,\n          width,\n          height\n        }),\n        index: 0,\n        dataKey,\n        nameKey,\n        // with Treemap nesting, should this continue nesting the index or start from empty string?\n        nestedActiveTooltipIndex: node.tooltipIndex\n      });\n      var formatRoot = squarify(root, aspectRatio);\n      var {\n        nestIndex\n      } = this.state;\n      nestIndex.push(node);\n      this.setState({\n        formatRoot,\n        currentRoot: root,\n        nestIndex\n      });\n    }\n\n    if (onClick) {\n      onClick(node);\n    }\n  }\n\n  handleNestIndex(node, i) {\n    var {\n      nestIndex\n    } = this.state;\n    var {\n      width,\n      height,\n      dataKey,\n      nameKey,\n      aspectRatio\n    } = this.props;\n    var root = computeNode({\n      depth: 0,\n      node: _objectSpread(_objectSpread({}, node), {}, {\n        x: 0,\n        y: 0,\n        width,\n        height\n      }),\n      index: 0,\n      dataKey,\n      nameKey,\n      // with Treemap nesting, should this continue nesting the index or start from empty string?\n      nestedActiveTooltipIndex: node.tooltipIndex\n    });\n    var formatRoot = squarify(root, aspectRatio);\n    nestIndex = nestIndex.slice(0, i + 1);\n    this.setState({\n      formatRoot,\n      currentRoot: node,\n      nestIndex\n    });\n  }\n\n  renderItem(content, nodeProps, isLeaf) {\n    var {\n      isAnimationActive,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      isUpdateAnimationActive,\n      type,\n      animationId,\n      colorPanel,\n      dataKey\n    } = this.props;\n    var {\n      isAnimationFinished\n    } = this.state;\n    var {\n      width,\n      height,\n      x,\n      y,\n      depth\n    } = nodeProps;\n    var translateX = parseInt(\"\".concat((Math.random() * 2 - 1) * width), 10);\n    var event = {};\n\n    if (isLeaf || type === 'nest') {\n      event = {\n        onMouseEnter: this.handleMouseEnter.bind(this, nodeProps),\n        onMouseLeave: this.handleMouseLeave.bind(this, nodeProps),\n        onClick: this.handleClick.bind(this, nodeProps)\n      };\n    }\n\n    if (!isAnimationActive) {\n      return /*#__PURE__*/React.createElement(Layer, event, /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n        content: content,\n        dataKey: dataKey,\n        nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n          isAnimationActive: false,\n          isUpdateAnimationActive: false,\n          width,\n          height,\n          x,\n          y\n        }),\n        type: type,\n        colorPanel: colorPanel\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Animate, {\n      begin: animationBegin,\n      duration: animationDuration,\n      isActive: isAnimationActive,\n      easing: animationEasing,\n      key: \"treemap-\".concat(animationId),\n      from: {\n        x,\n        y,\n        width,\n        height\n      },\n      to: {\n        x,\n        y,\n        width,\n        height\n      },\n      onAnimationStart: this.handleAnimationStart,\n      onAnimationEnd: this.handleAnimationEnd\n    }, _ref4 => {\n      var {\n        x: currX,\n        y: currY,\n        width: currWidth,\n        height: currHeight\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Animate // @ts-expect-error TODO - fix the type error\n      , {\n        from: \"translate(\".concat(translateX, \"px, \").concat(translateX, \"px)\") // @ts-expect-error TODO - fix the type error\n        ,\n        to: \"translate(0, 0)\",\n        attributeName: \"transform\",\n        begin: animationBegin,\n        easing: animationEasing,\n        isActive: isAnimationActive,\n        duration: animationDuration\n      }, /*#__PURE__*/React.createElement(Layer, event, depth > 2 && !isAnimationFinished ? null : /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n        content: content,\n        dataKey: dataKey,\n        nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n          isAnimationActive,\n          isUpdateAnimationActive: !isUpdateAnimationActive,\n          width: currWidth,\n          height: currHeight,\n          x: currX,\n          y: currY\n        }),\n        type: type,\n        colorPanel: colorPanel\n      })));\n    });\n  }\n\n  renderNode(root, node) {\n    var {\n      content,\n      type\n    } = this.props;\n\n    var nodeProps = _objectSpread(_objectSpread(_objectSpread({}, filterProps(this.props, false)), node), {}, {\n      root\n    });\n\n    var isLeaf = !node.children || !node.children.length;\n    var {\n      currentRoot\n    } = this.state;\n    var isCurrentRootChild = (currentRoot.children || []).filter(item => item.depth === node.depth && item.name === node.name);\n\n    if (!isCurrentRootChild.length && root.depth && type === 'nest') {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Layer, {\n      key: \"recharts-treemap-node-\".concat(nodeProps.x, \"-\").concat(nodeProps.y, \"-\").concat(nodeProps.name),\n      className: \"recharts-treemap-depth-\".concat(node.depth)\n    }, this.renderItem(content, nodeProps, isLeaf), node.children && node.children.length ? node.children.map(child => this.renderNode(node, child)) : null);\n  }\n\n  renderAllNodes() {\n    var {\n      formatRoot\n    } = this.state;\n\n    if (!formatRoot) {\n      return null;\n    }\n\n    return this.renderNode(formatRoot, formatRoot);\n  } // render nest treemap\n\n\n  renderNestIndex() {\n    var {\n      nameKey,\n      nestIndexContent\n    } = this.props;\n    var {\n      nestIndex\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recharts-treemap-nest-index-wrapper\",\n      style: {\n        marginTop: '8px',\n        textAlign: 'center'\n      }\n    }, nestIndex.map((item, i) => {\n      // TODO need to verify nameKey type\n      var name = get(item, nameKey, 'root');\n      var content = null;\n\n      if ( /*#__PURE__*/React.isValidElement(nestIndexContent)) {\n        content = /*#__PURE__*/React.cloneElement(nestIndexContent, item, i);\n      }\n\n      if (typeof nestIndexContent === 'function') {\n        content = nestIndexContent(item, i);\n      } else {\n        content = name;\n      }\n\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        React.createElement(\"div\", {\n          onClick: this.handleNestIndex.bind(this, item, i),\n          key: \"nest-index-\".concat(uniqueId()),\n          className: \"recharts-treemap-nest-index-box\",\n          style: {\n            cursor: 'pointer',\n            display: 'inline-block',\n            padding: '0 7px',\n            background: '#000',\n            color: '#fff',\n            marginRight: '3px'\n          }\n        }, content)\n      );\n    }));\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      width,\n      height,\n      className,\n      style,\n      children,\n      type\n    } = _this$props,\n        others = _objectWithoutProperties(_this$props, _excluded);\n\n    var attrs = filterProps(others, false);\n    return /*#__PURE__*/React.createElement(TooltipPortalContext.Provider, {\n      value: this.state.tooltipPortal\n    }, /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n      fn: getTooltipEntrySettings,\n      args: {\n        props: this.props,\n        currentRoot: this.state.currentRoot\n      }\n    }), /*#__PURE__*/React.createElement(RechartsWrapper, {\n      className: className,\n      style: style,\n      width: width,\n      height: height,\n      ref: node => {\n        if (this.state.tooltipPortal == null) {\n          this.setState({\n            tooltipPortal: node\n          });\n        }\n      },\n      onMouseEnter: undefined,\n      onMouseLeave: undefined,\n      onClick: undefined,\n      onMouseMove: undefined,\n      onMouseDown: undefined,\n      onMouseUp: undefined,\n      onContextMenu: undefined,\n      onDoubleClick: undefined,\n      onTouchStart: undefined,\n      onTouchMove: this.handleTouchMove,\n      onTouchEnd: undefined\n    }, /*#__PURE__*/React.createElement(Surface, _extends({}, attrs, {\n      width: width,\n      height: type === 'nest' ? height - 30 : height\n    }), this.renderAllNodes(), children), type === 'nest' && this.renderNestIndex()));\n  }\n\n}\n\n_defineProperty(TreemapWithState, \"displayName\", 'Treemap');\n\n_defineProperty(TreemapWithState, \"defaultProps\", {\n  aspectRatio: 0.5 * (1 + Math.sqrt(5)),\n  dataKey: 'value',\n  nameKey: 'name',\n  type: 'flat',\n  isAnimationActive: !Global.isSsr,\n  isUpdateAnimationActive: !Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'linear'\n});\n\nfunction TreemapDispatchInject(props) {\n  var dispatch = useAppDispatch();\n  return /*#__PURE__*/React.createElement(TreemapWithState, _extends({}, props, {\n    dispatch: dispatch\n  }));\n}\n\nexport function Treemap(props) {\n  var _props$className;\n\n  var {\n    width,\n    height\n  } = props;\n\n  if (!isPositiveNumber(width) || !isPositiveNumber(height)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(RechartsStoreProvider, {\n    preloadedState: {\n      options\n    },\n    reduxStoreName: (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : 'Treemap'\n  }, /*#__PURE__*/React.createElement(ReportChartSize, {\n    width: width,\n    height: height\n  }), /*#__PURE__*/React.createElement(ReportChartMargin, {\n    margin: defaultTreemapMargin\n  }), /*#__PURE__*/React.createElement(TreemapDispatchInject, props));\n}","map":{"version":3,"sources":["/Users/emiliamamedova/charts/flightStats/node_modules/recharts/es6/chart/Treemap.js"],"names":["_excluded","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","_extends","assign","bind","arguments","apply","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","React","PureComponent","omit","get","Layer","Surface","Polygon","Rectangle","getValueByDataKey","COLOR_PANEL","isNan","uniqueId","getStringSize","Global","filterProps","ReportChartMargin","ReportChartSize","TooltipPortalContext","RechartsWrapper","setActiveClickItemIndex","setActiveMouseOverItemIndex","SetTooltipEntrySettings","RechartsStoreProvider","useAppDispatch","isPositiveNumber","Animate","NODE_VALUE_KEY","treemapPayloadSearcher","data","activeIndex","addToTreemapNodeIndex","indexInChildrenArr","activeTooltipIndexSoFar","undefined","concat","options","chartName","defaultTooltipEventType","validateTooltipEventTypes","tooltipPayloadSearcher","eventEmitter","computeNode","_ref","depth","node","index","dataKey","nameKey","nestedActiveTooltipIndex","currentTooltipIndex","children","childDepth","computedChildren","map","child","nodeValue","reduce","result","name","tooltipIndex","filterRect","x","y","width","height","getAreaOfChildren","areaValueRatio","ratio","area","getWorstScore","row","parentSize","aspectRatio","parentArea","rowArea","min","max","Math","Infinity","horizontalPosition","parentRect","isFlush","rowHeight","round","curX","len","verticalPosition","rowWidth","curY","position","squarify","rect","best","score","size","scaleChildren","tempChildren","slice","shift","pop","c","defaultState","isAnimationFinished","formatRoot","currentRoot","nestIndex","ContentItem","_ref2","content","nodeProps","type","colorPanel","onMouseEnter","onMouseLeave","onClick","isValidElement","createElement","cloneElement","arrow","points","text","nameSize","fontSize","colors","fill","stroke","ContentItemWithEvents","props","dispatch","activeCoordinate","activeDataKey","getTooltipEntrySettings","_ref3","dataDefinedOnItem","positions","settings","strokeWidth","hide","color","unit","defaultTreemapMargin","top","right","bottom","left","TreemapWithState","constructor","onAnimationEnd","setState","onAnimationStart","_state","touchEvent","touches","target","document","elementFromPoint","clientX","clientY","getAttribute","itemIndex","activeNode","state","getDerivedStateFromProps","nextProps","prevState","prevData","prevType","prevWidth","prevHeight","prevDataKey","prevAspectRatio","root","handleMouseEnter","persist","handleMouseLeave","handleClick","handleNestIndex","renderItem","isLeaf","isAnimationActive","animationBegin","animationDuration","animationEasing","isUpdateAnimationActive","animationId","translateX","parseInt","random","event","begin","duration","isActive","easing","key","from","to","handleAnimationStart","handleAnimationEnd","_ref4","currX","currY","currWidth","currHeight","attributeName","renderNode","isCurrentRootChild","item","className","renderAllNodes","renderNestIndex","nestIndexContent","style","marginTop","textAlign","cursor","display","padding","background","marginRight","render","_this$props","others","attrs","Provider","tooltipPortal","fn","args","ref","onMouseMove","onMouseDown","onMouseUp","onContextMenu","onDoubleClick","onTouchStart","onTouchMove","handleTouchMove","onTouchEnd","sqrt","isSsr","TreemapDispatchInject","Treemap","_props$className","preloadedState","reduxStoreName","margin"],"mappings":"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","sourcesContent":["var _excluded = [\"width\", \"height\", \"className\", \"style\", \"children\", \"type\"];\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport * as React from 'react';\nimport { PureComponent } from 'react';\nimport omit from 'es-toolkit/compat/omit';\nimport get from 'es-toolkit/compat/get';\nimport { Layer } from '../container/Layer';\nimport { Surface } from '../container/Surface';\nimport { Polygon } from '../shape/Polygon';\nimport { Rectangle } from '../shape/Rectangle';\nimport { getValueByDataKey } from '../util/ChartUtils';\nimport { COLOR_PANEL } from '../util/Constants';\nimport { isNan, uniqueId } from '../util/DataUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { Global } from '../util/Global';\nimport { filterProps } from '../util/ReactUtils';\nimport { ReportChartMargin, ReportChartSize } from '../context/chartLayoutContext';\nimport { TooltipPortalContext } from '../context/tooltipPortalContext';\nimport { RechartsWrapper } from './RechartsWrapper';\nimport { setActiveClickItemIndex, setActiveMouseOverItemIndex } from '../state/tooltipSlice';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { RechartsStoreProvider } from '../state/RechartsStoreProvider';\nimport { useAppDispatch } from '../state/hooks';\nimport { isPositiveNumber } from '../util/isWellBehavedNumber';\nimport { Animate } from '../animation/Animate';\nvar NODE_VALUE_KEY = 'value';\n\n/**\n * This is what end users defines as `data` on Treemap.\n */\n\n/**\n * This is what is returned from `squarify`, the final treemap data structure\n * that gets rendered and is stored in\n */\n\nexport var treemapPayloadSearcher = (data, activeIndex) => {\n  return get(data, activeIndex);\n};\nexport var addToTreemapNodeIndex = function addToTreemapNodeIndex(indexInChildrenArr) {\n  var activeTooltipIndexSoFar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(activeTooltipIndexSoFar, \"children[\").concat(indexInChildrenArr, \"]\");\n};\nvar options = {\n  chartName: 'Treemap',\n  defaultTooltipEventType: 'item',\n  validateTooltipEventTypes: ['item'],\n  tooltipPayloadSearcher: treemapPayloadSearcher,\n  eventEmitter: undefined\n};\nexport var computeNode = _ref => {\n  var {\n    depth,\n    node,\n    index,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex\n  } = _ref;\n  var currentTooltipIndex = depth === 0 ? '' : addToTreemapNodeIndex(index, nestedActiveTooltipIndex);\n  var {\n    children\n  } = node;\n  var childDepth = depth + 1;\n  var computedChildren = children && children.length ? children.map((child, i) => computeNode({\n    depth: childDepth,\n    node: child,\n    index: i,\n    dataKey,\n    nameKey,\n    nestedActiveTooltipIndex: currentTooltipIndex\n  })) : null;\n  var nodeValue;\n  if (children && children.length) {\n    nodeValue = computedChildren.reduce((result, child) => result + child[NODE_VALUE_KEY], 0);\n  } else {\n    // TODO need to verify dataKey\n    nodeValue = isNan(node[dataKey]) || node[dataKey] <= 0 ? 0 : node[dataKey];\n  }\n  return _objectSpread(_objectSpread({}, node), {}, {\n    children: computedChildren,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    name: getValueByDataKey(node, nameKey, ''),\n    [NODE_VALUE_KEY]: nodeValue,\n    depth,\n    index,\n    tooltipIndex: currentTooltipIndex\n  });\n};\nvar filterRect = node => ({\n  x: node.x,\n  y: node.y,\n  width: node.width,\n  height: node.height\n});\n\n// Compute the area for each child based on value & scale.\nvar getAreaOfChildren = (children, areaValueRatio) => {\n  var ratio = areaValueRatio < 0 ? 0 : areaValueRatio;\n  return children.map(child => {\n    var area = child[NODE_VALUE_KEY] * ratio;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      area: isNan(area) || area <= 0 ? 0 : area\n    });\n  });\n};\n\n// Computes the score for the specified row, as the worst aspect ratio.\nvar getWorstScore = (row, parentSize, aspectRatio) => {\n  var parentArea = parentSize * parentSize;\n  var rowArea = row.area * row.area;\n  var {\n    min,\n    max\n  } = row.reduce((result, child) => ({\n    min: Math.min(result.min, child.area),\n    max: Math.max(result.max, child.area)\n  }), {\n    min: Infinity,\n    max: 0\n  });\n  return rowArea ? Math.max(parentArea * max * aspectRatio / rowArea, rowArea / (parentArea * min * aspectRatio)) : Infinity;\n};\nvar horizontalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowHeight = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowHeight > parentRect.height) {\n    rowHeight = parentRect.height;\n  }\n  var curX = parentRect.x;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = curX;\n    child.y = parentRect.y;\n    child.height = rowHeight;\n    child.width = Math.min(rowHeight ? Math.round(child.area / rowHeight) : 0, parentRect.x + parentRect.width - curX);\n    curX += child.width;\n  }\n  // add the remain x to the last one of row\n  child.width += parentRect.x + parentRect.width - curX;\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    y: parentRect.y + rowHeight,\n    height: parentRect.height - rowHeight\n  });\n};\nvar verticalPosition = (row, parentSize, parentRect, isFlush) => {\n  var rowWidth = parentSize ? Math.round(row.area / parentSize) : 0;\n  if (isFlush || rowWidth > parentRect.width) {\n    rowWidth = parentRect.width;\n  }\n  var curY = parentRect.y;\n  var child;\n  for (var i = 0, len = row.length; i < len; i++) {\n    child = row[i];\n    child.x = parentRect.x;\n    child.y = curY;\n    child.width = rowWidth;\n    child.height = Math.min(rowWidth ? Math.round(child.area / rowWidth) : 0, parentRect.y + parentRect.height - curY);\n    curY += child.height;\n  }\n  if (child) {\n    child.height += parentRect.y + parentRect.height - curY;\n  }\n  return _objectSpread(_objectSpread({}, parentRect), {}, {\n    x: parentRect.x + rowWidth,\n    width: parentRect.width - rowWidth\n  });\n};\nvar position = (row, parentSize, parentRect, isFlush) => {\n  if (parentSize === parentRect.width) {\n    return horizontalPosition(row, parentSize, parentRect, isFlush);\n  }\n  return verticalPosition(row, parentSize, parentRect, isFlush);\n};\n\n// Recursively arranges the specified node's children into squarified rows.\nvar squarify = (node, aspectRatio) => {\n  var {\n    children\n  } = node;\n  if (children && children.length) {\n    var rect = filterRect(node);\n    // maybe a bug\n    var row = [];\n    var best = Infinity; // the best row score so far\n    var child, score; // the current row score\n    var size = Math.min(rect.width, rect.height); // initial orientation\n    var scaleChildren = getAreaOfChildren(children, rect.width * rect.height / node[NODE_VALUE_KEY]);\n    var tempChildren = scaleChildren.slice();\n    row.area = 0;\n    while (tempChildren.length > 0) {\n      // row first\n      // eslint-disable-next-line prefer-destructuring\n      row.push(child = tempChildren[0]);\n      row.area += child.area;\n      score = getWorstScore(row, size, aspectRatio);\n      if (score <= best) {\n        // continue with this orientation\n        tempChildren.shift();\n        best = score;\n      } else {\n        // abort, and try a different orientation\n        row.area -= row.pop().area;\n        rect = position(row, size, rect, false);\n        size = Math.min(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n    }\n    if (row.length) {\n      rect = position(row, size, rect, true);\n      row.length = row.area = 0;\n    }\n    return _objectSpread(_objectSpread({}, node), {}, {\n      children: scaleChildren.map(c => squarify(c, aspectRatio))\n    });\n  }\n  return node;\n};\nvar defaultState = {\n  isAnimationFinished: false,\n  formatRoot: null,\n  currentRoot: null,\n  nestIndex: []\n};\nfunction ContentItem(_ref2) {\n  var {\n    content,\n    nodeProps,\n    type,\n    colorPanel,\n    onMouseEnter,\n    onMouseLeave,\n    onClick\n  } = _ref2;\n  if (/*#__PURE__*/React.isValidElement(content)) {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, /*#__PURE__*/React.cloneElement(content, nodeProps));\n  }\n  if (typeof content === 'function') {\n    return /*#__PURE__*/React.createElement(Layer, {\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: onClick\n    }, content(nodeProps));\n  }\n  // optimize default shape\n  var {\n    x,\n    y,\n    width,\n    height,\n    index\n  } = nodeProps;\n  var arrow = null;\n  if (width > 10 && height > 10 && nodeProps.children && type === 'nest') {\n    arrow = /*#__PURE__*/React.createElement(Polygon, {\n      points: [{\n        x: x + 2,\n        y: y + height / 2\n      }, {\n        x: x + 6,\n        y: y + height / 2 + 3\n      }, {\n        x: x + 2,\n        y: y + height / 2 + 6\n      }]\n    });\n  }\n  var text = null;\n  var nameSize = getStringSize(nodeProps.name);\n  if (width > 20 && height > 20 && nameSize.width < width && nameSize.height < height) {\n    text = /*#__PURE__*/React.createElement(\"text\", {\n      x: x + 8,\n      y: y + height / 2 + 7,\n      fontSize: 14\n    }, nodeProps.name);\n  }\n  var colors = colorPanel || COLOR_PANEL;\n  return /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(Rectangle, _extends({\n    fill: nodeProps.depth < 2 ? colors[index % colors.length] : 'rgba(255,255,255,0)',\n    stroke: \"#fff\"\n  }, omit(nodeProps, ['children']), {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    \"data-recharts-item-index\": nodeProps.tooltipIndex\n  })), arrow, text);\n}\nfunction ContentItemWithEvents(props) {\n  var dispatch = useAppDispatch();\n  var activeCoordinate = props.nodeProps ? {\n    x: props.nodeProps.x + props.nodeProps.width / 2,\n    y: props.nodeProps.y + props.nodeProps.height / 2\n  } : null;\n  var onMouseEnter = () => {\n    dispatch(setActiveMouseOverItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  var onMouseLeave = () => {\n    // clearing state on mouseLeaveItem causes re-rendering issues\n    // we don't actually want to do this for TreeMap - we clear state when we leave the entire chart instead\n  };\n  var onClick = () => {\n    dispatch(setActiveClickItemIndex({\n      activeIndex: props.nodeProps.tooltipIndex,\n      activeDataKey: props.dataKey,\n      activeCoordinate\n    }));\n  };\n  return /*#__PURE__*/React.createElement(ContentItem, _extends({}, props, {\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick\n  }));\n}\nfunction getTooltipEntrySettings(_ref3) {\n  var {\n    props,\n    currentRoot\n  } = _ref3;\n  var {\n    dataKey,\n    nameKey,\n    stroke,\n    fill\n  } = props;\n  return {\n    dataDefinedOnItem: currentRoot,\n    positions: undefined,\n    // TODO I think Treemap has the capability of computing positions and supporting defaultIndex? Except it doesn't yet\n    settings: {\n      stroke,\n      strokeWidth: undefined,\n      fill,\n      dataKey,\n      nameKey,\n      name: undefined,\n      // Each TreemapNode has its own name\n      hide: false,\n      type: undefined,\n      color: fill,\n      unit: ''\n    }\n  };\n}\n\n// Why is margin not a treemap prop? No clue. Probably it should be\nvar defaultTreemapMargin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nclass TreemapWithState extends PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", _objectSpread({}, defaultState));\n    _defineProperty(this, \"handleAnimationEnd\", () => {\n      var {\n        onAnimationEnd\n      } = this.props;\n      this.setState({\n        isAnimationFinished: true\n      });\n      if (typeof onAnimationEnd === 'function') {\n        onAnimationEnd();\n      }\n    });\n    _defineProperty(this, \"handleAnimationStart\", () => {\n      var {\n        onAnimationStart\n      } = this.props;\n      this.setState({\n        isAnimationFinished: false\n      });\n      if (typeof onAnimationStart === 'function') {\n        onAnimationStart();\n      }\n    });\n    _defineProperty(this, \"handleTouchMove\", (_state, e) => {\n      var touchEvent = e.touches[0];\n      var target = document.elementFromPoint(touchEvent.clientX, touchEvent.clientY);\n      if (!target || !target.getAttribute) {\n        return;\n      }\n      var itemIndex = target.getAttribute('data-recharts-item-index');\n      var activeNode = treemapPayloadSearcher(this.state.formatRoot, itemIndex);\n      if (!activeNode) {\n        return;\n      }\n      var {\n        dataKey,\n        dispatch\n      } = this.props;\n      var activeCoordinate = {\n        x: activeNode.x + activeNode.width / 2,\n        y: activeNode.y + activeNode.height / 2\n      };\n\n      // Treemap does not support onTouchMove prop, but it could\n      // onTouchMove?.(activeNode, Number(itemIndex), e);\n      dispatch(setActiveMouseOverItemIndex({\n        activeIndex: itemIndex,\n        activeDataKey: dataKey,\n        activeCoordinate\n      }));\n    });\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.data !== prevState.prevData || nextProps.type !== prevState.prevType || nextProps.width !== prevState.prevWidth || nextProps.height !== prevState.prevHeight || nextProps.dataKey !== prevState.prevDataKey || nextProps.aspectRatio !== prevState.prevAspectRatio) {\n      var root = computeNode({\n        depth: 0,\n        // @ts-expect-error missing properties\n        node: {\n          children: nextProps.data,\n          x: 0,\n          y: 0,\n          width: nextProps.width,\n          height: nextProps.height\n        },\n        index: 0,\n        dataKey: nextProps.dataKey,\n        nameKey: nextProps.nameKey\n      });\n      var formatRoot = squarify(root, nextProps.aspectRatio);\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        formatRoot,\n        currentRoot: root,\n        nestIndex: [root],\n        prevAspectRatio: nextProps.aspectRatio,\n        prevData: nextProps.data,\n        prevWidth: nextProps.width,\n        prevHeight: nextProps.height,\n        prevDataKey: nextProps.dataKey,\n        prevType: nextProps.type\n      });\n    }\n    return null;\n  }\n  handleMouseEnter(node, e) {\n    e.persist();\n    var {\n      onMouseEnter\n    } = this.props;\n    if (onMouseEnter) {\n      onMouseEnter(node, e);\n    }\n  }\n  handleMouseLeave(node, e) {\n    e.persist();\n    var {\n      onMouseLeave\n    } = this.props;\n    if (onMouseLeave) {\n      onMouseLeave(node, e);\n    }\n  }\n  handleClick(node) {\n    var {\n      onClick,\n      type\n    } = this.props;\n    if (type === 'nest' && node.children) {\n      var {\n        width,\n        height,\n        dataKey,\n        nameKey,\n        aspectRatio\n      } = this.props;\n      var root = computeNode({\n        depth: 0,\n        node: _objectSpread(_objectSpread({}, node), {}, {\n          x: 0,\n          y: 0,\n          width,\n          height\n        }),\n        index: 0,\n        dataKey,\n        nameKey,\n        // with Treemap nesting, should this continue nesting the index or start from empty string?\n        nestedActiveTooltipIndex: node.tooltipIndex\n      });\n      var formatRoot = squarify(root, aspectRatio);\n      var {\n        nestIndex\n      } = this.state;\n      nestIndex.push(node);\n      this.setState({\n        formatRoot,\n        currentRoot: root,\n        nestIndex\n      });\n    }\n    if (onClick) {\n      onClick(node);\n    }\n  }\n  handleNestIndex(node, i) {\n    var {\n      nestIndex\n    } = this.state;\n    var {\n      width,\n      height,\n      dataKey,\n      nameKey,\n      aspectRatio\n    } = this.props;\n    var root = computeNode({\n      depth: 0,\n      node: _objectSpread(_objectSpread({}, node), {}, {\n        x: 0,\n        y: 0,\n        width,\n        height\n      }),\n      index: 0,\n      dataKey,\n      nameKey,\n      // with Treemap nesting, should this continue nesting the index or start from empty string?\n      nestedActiveTooltipIndex: node.tooltipIndex\n    });\n    var formatRoot = squarify(root, aspectRatio);\n    nestIndex = nestIndex.slice(0, i + 1);\n    this.setState({\n      formatRoot,\n      currentRoot: node,\n      nestIndex\n    });\n  }\n  renderItem(content, nodeProps, isLeaf) {\n    var {\n      isAnimationActive,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      isUpdateAnimationActive,\n      type,\n      animationId,\n      colorPanel,\n      dataKey\n    } = this.props;\n    var {\n      isAnimationFinished\n    } = this.state;\n    var {\n      width,\n      height,\n      x,\n      y,\n      depth\n    } = nodeProps;\n    var translateX = parseInt(\"\".concat((Math.random() * 2 - 1) * width), 10);\n    var event = {};\n    if (isLeaf || type === 'nest') {\n      event = {\n        onMouseEnter: this.handleMouseEnter.bind(this, nodeProps),\n        onMouseLeave: this.handleMouseLeave.bind(this, nodeProps),\n        onClick: this.handleClick.bind(this, nodeProps)\n      };\n    }\n    if (!isAnimationActive) {\n      return /*#__PURE__*/React.createElement(Layer, event, /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n        content: content,\n        dataKey: dataKey,\n        nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n          isAnimationActive: false,\n          isUpdateAnimationActive: false,\n          width,\n          height,\n          x,\n          y\n        }),\n        type: type,\n        colorPanel: colorPanel\n      }));\n    }\n    return /*#__PURE__*/React.createElement(Animate, {\n      begin: animationBegin,\n      duration: animationDuration,\n      isActive: isAnimationActive,\n      easing: animationEasing,\n      key: \"treemap-\".concat(animationId),\n      from: {\n        x,\n        y,\n        width,\n        height\n      },\n      to: {\n        x,\n        y,\n        width,\n        height\n      },\n      onAnimationStart: this.handleAnimationStart,\n      onAnimationEnd: this.handleAnimationEnd\n    }, _ref4 => {\n      var {\n        x: currX,\n        y: currY,\n        width: currWidth,\n        height: currHeight\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Animate\n      // @ts-expect-error TODO - fix the type error\n      , {\n        from: \"translate(\".concat(translateX, \"px, \").concat(translateX, \"px)\")\n        // @ts-expect-error TODO - fix the type error\n        ,\n        to: \"translate(0, 0)\",\n        attributeName: \"transform\",\n        begin: animationBegin,\n        easing: animationEasing,\n        isActive: isAnimationActive,\n        duration: animationDuration\n      }, /*#__PURE__*/React.createElement(Layer, event, depth > 2 && !isAnimationFinished ? null : /*#__PURE__*/React.createElement(ContentItemWithEvents, {\n        content: content,\n        dataKey: dataKey,\n        nodeProps: _objectSpread(_objectSpread({}, nodeProps), {}, {\n          isAnimationActive,\n          isUpdateAnimationActive: !isUpdateAnimationActive,\n          width: currWidth,\n          height: currHeight,\n          x: currX,\n          y: currY\n        }),\n        type: type,\n        colorPanel: colorPanel\n      })));\n    });\n  }\n  renderNode(root, node) {\n    var {\n      content,\n      type\n    } = this.props;\n    var nodeProps = _objectSpread(_objectSpread(_objectSpread({}, filterProps(this.props, false)), node), {}, {\n      root\n    });\n    var isLeaf = !node.children || !node.children.length;\n    var {\n      currentRoot\n    } = this.state;\n    var isCurrentRootChild = (currentRoot.children || []).filter(item => item.depth === node.depth && item.name === node.name);\n    if (!isCurrentRootChild.length && root.depth && type === 'nest') {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(Layer, {\n      key: \"recharts-treemap-node-\".concat(nodeProps.x, \"-\").concat(nodeProps.y, \"-\").concat(nodeProps.name),\n      className: \"recharts-treemap-depth-\".concat(node.depth)\n    }, this.renderItem(content, nodeProps, isLeaf), node.children && node.children.length ? node.children.map(child => this.renderNode(node, child)) : null);\n  }\n  renderAllNodes() {\n    var {\n      formatRoot\n    } = this.state;\n    if (!formatRoot) {\n      return null;\n    }\n    return this.renderNode(formatRoot, formatRoot);\n  }\n\n  // render nest treemap\n  renderNestIndex() {\n    var {\n      nameKey,\n      nestIndexContent\n    } = this.props;\n    var {\n      nestIndex\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recharts-treemap-nest-index-wrapper\",\n      style: {\n        marginTop: '8px',\n        textAlign: 'center'\n      }\n    }, nestIndex.map((item, i) => {\n      // TODO need to verify nameKey type\n      var name = get(item, nameKey, 'root');\n      var content = null;\n      if (/*#__PURE__*/React.isValidElement(nestIndexContent)) {\n        content = /*#__PURE__*/React.cloneElement(nestIndexContent, item, i);\n      }\n      if (typeof nestIndexContent === 'function') {\n        content = nestIndexContent(item, i);\n      } else {\n        content = name;\n      }\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n        React.createElement(\"div\", {\n          onClick: this.handleNestIndex.bind(this, item, i),\n          key: \"nest-index-\".concat(uniqueId()),\n          className: \"recharts-treemap-nest-index-box\",\n          style: {\n            cursor: 'pointer',\n            display: 'inline-block',\n            padding: '0 7px',\n            background: '#000',\n            color: '#fff',\n            marginRight: '3px'\n          }\n        }, content)\n      );\n    }));\n  }\n  render() {\n    var _this$props = this.props,\n      {\n        width,\n        height,\n        className,\n        style,\n        children,\n        type\n      } = _this$props,\n      others = _objectWithoutProperties(_this$props, _excluded);\n    var attrs = filterProps(others, false);\n    return /*#__PURE__*/React.createElement(TooltipPortalContext.Provider, {\n      value: this.state.tooltipPortal\n    }, /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n      fn: getTooltipEntrySettings,\n      args: {\n        props: this.props,\n        currentRoot: this.state.currentRoot\n      }\n    }), /*#__PURE__*/React.createElement(RechartsWrapper, {\n      className: className,\n      style: style,\n      width: width,\n      height: height,\n      ref: node => {\n        if (this.state.tooltipPortal == null) {\n          this.setState({\n            tooltipPortal: node\n          });\n        }\n      },\n      onMouseEnter: undefined,\n      onMouseLeave: undefined,\n      onClick: undefined,\n      onMouseMove: undefined,\n      onMouseDown: undefined,\n      onMouseUp: undefined,\n      onContextMenu: undefined,\n      onDoubleClick: undefined,\n      onTouchStart: undefined,\n      onTouchMove: this.handleTouchMove,\n      onTouchEnd: undefined\n    }, /*#__PURE__*/React.createElement(Surface, _extends({}, attrs, {\n      width: width,\n      height: type === 'nest' ? height - 30 : height\n    }), this.renderAllNodes(), children), type === 'nest' && this.renderNestIndex()));\n  }\n}\n_defineProperty(TreemapWithState, \"displayName\", 'Treemap');\n_defineProperty(TreemapWithState, \"defaultProps\", {\n  aspectRatio: 0.5 * (1 + Math.sqrt(5)),\n  dataKey: 'value',\n  nameKey: 'name',\n  type: 'flat',\n  isAnimationActive: !Global.isSsr,\n  isUpdateAnimationActive: !Global.isSsr,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'linear'\n});\nfunction TreemapDispatchInject(props) {\n  var dispatch = useAppDispatch();\n  return /*#__PURE__*/React.createElement(TreemapWithState, _extends({}, props, {\n    dispatch: dispatch\n  }));\n}\nexport function Treemap(props) {\n  var _props$className;\n  var {\n    width,\n    height\n  } = props;\n  if (!isPositiveNumber(width) || !isPositiveNumber(height)) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(RechartsStoreProvider, {\n    preloadedState: {\n      options\n    },\n    reduxStoreName: (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : 'Treemap'\n  }, /*#__PURE__*/React.createElement(ReportChartSize, {\n    width: width,\n    height: height\n  }), /*#__PURE__*/React.createElement(ReportChartMargin, {\n    margin: defaultTreemapMargin\n  }), /*#__PURE__*/React.createElement(TreemapDispatchInject, props));\n}"]},"metadata":{},"sourceType":"module"}