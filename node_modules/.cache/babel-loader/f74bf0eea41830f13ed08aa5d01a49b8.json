{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, {\n  value: 'Module'\n});\n\nfunction toPath(deepKey) {\n  const result = [];\n  const length = deepKey.length;\n\n  if (length === 0) {\n    return result;\n  }\n\n  let index = 0;\n  let key = '';\n  let quoteChar = '';\n  let bracket = false;\n\n  if (deepKey.charCodeAt(0) === 46) {\n    result.push('');\n    index++;\n  }\n\n  while (index < length) {\n    const char = deepKey[index];\n\n    if (quoteChar) {\n      if (char === '\\\\' && index + 1 < length) {\n        index++;\n        key += deepKey[index];\n      } else if (char === quoteChar) {\n        quoteChar = '';\n      } else {\n        key += char;\n      }\n    } else if (bracket) {\n      if (char === '\"' || char === \"'\") {\n        quoteChar = char;\n      } else if (char === ']') {\n        bracket = false;\n        result.push(key);\n        key = '';\n      } else {\n        key += char;\n      }\n    } else {\n      if (char === '[') {\n        bracket = true;\n\n        if (key) {\n          result.push(key);\n          key = '';\n        }\n      } else if (char === '.') {\n        if (key) {\n          result.push(key);\n          key = '';\n        }\n      } else {\n        key += char;\n      }\n    }\n\n    index++;\n  }\n\n  if (key) {\n    result.push(key);\n  }\n\n  return result;\n}\n\nexports.toPath = toPath;","map":{"version":3,"sources":["/Users/emiliamamedova/charts/project_corona_tracker/node_modules/es-toolkit/dist/compat/util/toPath.js"],"names":["Object","defineProperty","exports","Symbol","toStringTag","value","toPath","deepKey","result","length","index","key","quoteChar","bracket","charCodeAt","push","char"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+BC,MAAM,CAACC,WAAtC,EAAmD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnD;;AAEA,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AACrB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAGF,OAAO,CAACE,MAAvB;;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,WAAOD,MAAP;AACH;;AACD,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAIN,OAAO,CAACO,UAAR,CAAmB,CAAnB,MAA0B,EAA9B,EAAkC;AAC9BN,IAAAA,MAAM,CAACO,IAAP,CAAY,EAAZ;AACAL,IAAAA,KAAK;AACR;;AACD,SAAOA,KAAK,GAAGD,MAAf,EAAuB;AACnB,UAAMO,IAAI,GAAGT,OAAO,CAACG,KAAD,CAApB;;AACA,QAAIE,SAAJ,EAAe;AACX,UAAII,IAAI,KAAK,IAAT,IAAiBN,KAAK,GAAG,CAAR,GAAYD,MAAjC,EAAyC;AACrCC,QAAAA,KAAK;AACLC,QAAAA,GAAG,IAAIJ,OAAO,CAACG,KAAD,CAAd;AACH,OAHD,MAIK,IAAIM,IAAI,KAAKJ,SAAb,EAAwB;AACzBA,QAAAA,SAAS,GAAG,EAAZ;AACH,OAFI,MAGA;AACDD,QAAAA,GAAG,IAAIK,IAAP;AACH;AACJ,KAXD,MAYK,IAAIH,OAAJ,EAAa;AACd,UAAIG,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA7B,EAAkC;AAC9BJ,QAAAA,SAAS,GAAGI,IAAZ;AACH,OAFD,MAGK,IAAIA,IAAI,KAAK,GAAb,EAAkB;AACnBH,QAAAA,OAAO,GAAG,KAAV;AACAL,QAAAA,MAAM,CAACO,IAAP,CAAYJ,GAAZ;AACAA,QAAAA,GAAG,GAAG,EAAN;AACH,OAJI,MAKA;AACDA,QAAAA,GAAG,IAAIK,IAAP;AACH;AACJ,KAZI,MAaA;AACD,UAAIA,IAAI,KAAK,GAAb,EAAkB;AACdH,QAAAA,OAAO,GAAG,IAAV;;AACA,YAAIF,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAACO,IAAP,CAAYJ,GAAZ;AACAA,UAAAA,GAAG,GAAG,EAAN;AACH;AACJ,OAND,MAOK,IAAIK,IAAI,KAAK,GAAb,EAAkB;AACnB,YAAIL,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAACO,IAAP,CAAYJ,GAAZ;AACAA,UAAAA,GAAG,GAAG,EAAN;AACH;AACJ,OALI,MAMA;AACDA,QAAAA,GAAG,IAAIK,IAAP;AACH;AACJ;;AACDN,IAAAA,KAAK;AACR;;AACD,MAAIC,GAAJ,EAAS;AACLH,IAAAA,MAAM,CAACO,IAAP,CAAYJ,GAAZ;AACH;;AACD,SAAOH,MAAP;AACH;;AAEDN,OAAO,CAACI,MAAR,GAAiBA,MAAjB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nfunction toPath(deepKey) {\n    const result = [];\n    const length = deepKey.length;\n    if (length === 0) {\n        return result;\n    }\n    let index = 0;\n    let key = '';\n    let quoteChar = '';\n    let bracket = false;\n    if (deepKey.charCodeAt(0) === 46) {\n        result.push('');\n        index++;\n    }\n    while (index < length) {\n        const char = deepKey[index];\n        if (quoteChar) {\n            if (char === '\\\\' && index + 1 < length) {\n                index++;\n                key += deepKey[index];\n            }\n            else if (char === quoteChar) {\n                quoteChar = '';\n            }\n            else {\n                key += char;\n            }\n        }\n        else if (bracket) {\n            if (char === '\"' || char === \"'\") {\n                quoteChar = char;\n            }\n            else if (char === ']') {\n                bracket = false;\n                result.push(key);\n                key = '';\n            }\n            else {\n                key += char;\n            }\n        }\n        else {\n            if (char === '[') {\n                bracket = true;\n                if (key) {\n                    result.push(key);\n                    key = '';\n                }\n            }\n            else if (char === '.') {\n                if (key) {\n                    result.push(key);\n                    key = '';\n                }\n            }\n            else {\n                key += char;\n            }\n        }\n        index++;\n    }\n    if (key) {\n        result.push(key);\n    }\n    return result;\n}\n\nexports.toPath = toPath;\n"]},"metadata":{},"sourceType":"script"}